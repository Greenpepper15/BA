pull_request_id,number_commits,is_merged,number_additions,number_deletions,number_changed_files,number_comments,body,sha,merged_at
2013,1,True,56,83,8,3,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Padding the multiplication output port if it's size is less than the sum of both input ports

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#2007 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d09ba2c2922ab62e1367b4c08ececc0b42417e47,2022-04-21 15:27:53
2004,15,False,2611598,30,258,0,"Creation of personal workspace

",98fed3fb0201b8d15b6c7005a337c482af564f1f,
2002,2,True,1632,40,9,2,"This PR fixes some issues with unconnected port handling in output Verilog netlist:

#### Description
 - Single-bit unconnected outputs are no longer connected to `1'bx` which was illegal
 - In `unconnected` mode multi-bit unconnected outputs are tied to unique nets only if a part of such a wide port is unconnected (there is no other way to express that). Completely unconnected ports in this mode are left blank.
 - All dummy unconnected nets (`_vpr_unconnected_<n>`) are explicitly declared as wires. This makes the netlist readable in case of `default_nettype none` mode.

#### Related Issue

This is a followup to https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1789

#### Motivation and Context

Connections to `1'bx` on output ports have been observed which made Verilog elaborator (Icarus Verilog) crash.

#### How Has This Been Tested?

Unit tests have been added.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",97fb515be41bde6ba6ea2a48a5d5e0c983e2b408,2022-03-28 10:35:57
1996,1,True,11,3,2,11,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Follow up on PR #1953 
Hardblocks, used by Yosys elaborator, are flaged to print their .model in the final BLIF file


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",53ceccbb0667a8068d7f0771ee7c28d9cbc878ab,2022-04-19 16:06:46
1993,4,False,1110,2,25,0,"In this PR, The support for the EDIF netlist reading is added. 

#### Description
 Initially the flow can read BLIF netlist after the addition of this support in the flow the netlist written in the .edif/.edn format can also be processed   

#### Motivation and Context
The flow will be upgraded and able to process multiple format netlists

#### How Has This Been Tested?
It will be checked on multiple netlists (test cases) written in .edif format and compared with the .blif format netlist results as the .blif netlist is working good .

",1afa060b2257d9ac3feac27a63af33b1b294fc22,
1992,1,True,1,0,1,0,"There is a [change in llvm](https://github.com/verilog-to-routing/vtr-verilog-to-routing.git) that soon won't automatically
surface symbols from a transitive include of `<algorithm>`, so we need to make sure to IWYU.",4ecdb5d273cf817ce25a8c5446f7813900deb378,2022-03-08 19:27:58
1991,1,True,1,1,1,1,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
A minor change to the Yosys synthesis script to make it more configurable for the Yosys+Odin-II synthesizer.  
Now, users can specify `(* nomem2reg/mem2reg = 1/0 *)` before a reg declaration in a Verilog file to specify whether it should be an array of registers or a memory hard block.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
make test and VTR regression tests


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",34f16e06a481d518bf5ef9842daa0d391e6af845,2022-03-07 22:13:22
1985,1,True,3,0,1,0,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
With the new GH custom runners, CI for large tests cannot run on forks, as the custom runners are not deployed for usage outside of the scope of the `verilog-to-routing` org. This prevents the workflow from failing due to unavailable runners.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f50ababa119918621384f7f2915590acf32d5cb2,2022-02-23 17:15:12
1984,2,True,51,59,2,8,"#### Description

Since the events that trigger both workflows are the same, it's not worth having them separated.

#### Related Issue

*None*

#### Motivation and Context

See Description above.

#### How Has This Been Tested?

It's CI.

#### Types of changes

- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a19beaec74a273b36a952c2c5c9a60f6c2292317,2022-03-22 10:28:47
1983,7,True,211,38,13,2,"#### Description
During place moves, if a cluster is constrained, we do an additional step of intersecting the cluster's move range limit with its floorplan constraint before we create a move.

#### Related Issue
Related to adding floorplan constraints to VPR - issue #932

#### Motivation and Context
When running with floorplan constraints, placement time was increasing due to an increased number of aborted moves. This increase was a result of moves being created that moved the block out of its floorplan constraints. By adjusting the range limit, we reduce the number of moves that are illegal with respect to floorplanning and so the place time decreases. Although the place time still increases relative to running with no constraints, the increase is minimized.

The reduction in place time on different titan circuits that were run with floorplan constraints can be seen here:
[titan_QoR_results_round2.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/8089351/titan_QoR_results_round2.xlsx)

",ab88ee17c5106b22aa238c80e6d8c3eed5d7668e,2022-02-25 17:27:36
1982,1,True,4,11,2,1,"#### Description

Some of the tweaks in the docs requirements file seem to be outdated.

#### Related Issue

*None*.

#### Motivation and Context

The ""section captions"" in the sidebar are shown incorrectly. I think that's because docutils and sphinx pinned to old versions. This PR unpins them.

#### How Has This Been Tested?

See https://vtr--1982.org.readthedocs.build/en/1982/.

#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",80c3f1cdab4b40b88d0eeb17c59951d7189ffe46,2022-02-23 16:36:35
1981,1,True,1,1,1,0,"Points ""On Biased and Non-Uniform Global Routing Architectures and CAD Tools for FPGAs"" to https://www.eecg.utoronto.ca/~vaughn/papers/techrep.pdf -- a known working link of the paper referenced. Resolving https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1967

<!--- Provide a general summary of your changes in the Title above -->
#### Description
Fixing `z_references.bib` link.
<!--- Describe your changes in detail -->


#### Related Issue
<!--- Pull requests should be related to open issues -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1967

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Broken link. 
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested with a known-good link. No impact to code base. 

#### Types of changes
This is documentation bug fix. No checklist items below apply. 

<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ef20e8f247caeb3e80fdd5658a662eef644ad57b,2022-02-23 17:05:42
1980,2,True,10,2,1,3,"#### Description
Updating the building doc to point to correct task path and output. 

#### Related Issue
#1966 Doc update. 

",6901612b92c9d682e57c7f4a93b3e06808141595,2022-02-15 17:42:52
1979,1,True,5,212,1,1,"#### Description

The configuration file was autogenerated several years ago. It contained multiple commented options, to provide an easy startup. However, those might have changed since then, and there is no track of that.
Instead, this PR removes unused options and comments, and provides a reference to the updated Sphinx docs at the top.

#### Related Issue

*None*

#### Motivation and Context

See Description above.

#### How Has This Been Tested?

It's comments only.

#### Types of changes

- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6bf82b6f4ff7b0ebde5f444a0bae27fe02a3c38a,2022-02-23 16:45:03
1977,1,True,1,1,1,0,This is just a typo in the first sentence of the docs.,7085c881170d37de749a63f93b90b6dc87387ef2,2022-02-13 18:17:29
1976,1,True,1,1,1,1,"#### Description

The year shown at the footer of the docs is `2016`. This PR updates it to `2012-2022`. @vaughnbetz what should be the proper starting year?

#### Related Issue

*None*

#### Motivation and Context

The docs have been updated since 2016...

#### How Has This Been Tested?

It's changing the content of a hardcoded string. There is no functionality change at all. It's tested in CI.

#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b2aff7096efc8c92db4c7706ef5103aaae02fb31,2022-02-15 18:13:01
1974,1,True,37,0,1,2,"#### Description

As discussed in #1970, this PR adds a CI workflow to test building the Dockerfile, and to push it to ghcr.io.

#### Related Issue

- #1970

#### Motivation and Context

Test when the Dockerfile breaks.

#### How Has This Been Tested?

It's CI, so self-tested.

#### Types of changes

- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5f79c629ffe50d42525cd691ba81e307709a7567,2022-02-23 16:39:49
1973,5,True,249,5,8,7,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR moves the infrastructure from Kokoro to GH actions to run large tests on GH custom runners

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1965

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8b8f9f0c5a06009678d048bc3af1c88013bc3b2b,2022-02-22 17:16:35
1972,21,True,347,267,40,16,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR creates a C++ library of routing resource graph -related data structures.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Address issue #1868 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Previously, data structures are tightly integrated with the VPR source codes (part of the router)
However, we see a strong motivation in creating a C++ library for the routing resource graph data structures.
This is because the routing resource graph is part of device modeling which should be decoupled with any EDA engines.
The benefits include
- Decouple routing resource graph data structure from routers as well as other codes of VPR
- Easier to profiling the data structure by runtime and peak memory usage. So that we can improve the data structure easily

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This PR includes the following changes
- [x] Move rr_graph data structures from ``vpr/src`` to ``libs/librrgraph``
- [x] Clean-up all the APIs by removing all the dependencies on VPR global variables
- [x] Move all the data types for routing resource graph to a separated header file ``rr_node_types.h``. (**Name of the file can be changed**)
- [x] Change all the error API from ``VPR_FATAL_ERROR`` to ``VTR_LOG_ERROR``
- [ ] Change documentation to track the code comments in ``libs/librrgraph``


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",04f0a02a7e05598d88ac0665175a110cf3ad71b9,2022-02-22 05:39:10
1970,2,True,25,84,1,7,"<!--- Provide a general summary of your changes in the Title above -->

Fixed broken Dockerfile script located at the project root.

#### Description
<!--- Describe your changes in detail -->

- The target image is now based on Ubuntu 20:04 LTS
- Build packages are now extracted from install_apt_packages.sh & requirements.txt files in VTR root
- Image build process is now in accordance with the latest build instructions available in VTR documenation.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1756

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

As an option for building VTR, there is a docker container build script. VTR's fixed Dockerfile allows it to be built on different OSs and architectures effortlessly, by just running one command. This can especially be useful for building VTR on devices with Apple Silicon processors which currently lack native Linux support but support Linux-based docker containers.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

The fixed Dockerfile script now builds VTR sucessfully.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7271f68835a25cc8dea1d54b4e4be240f1f80cb8,2022-02-22 21:01:10
1969,1,True,2,2,1,4,"<!--- Provide a general summary of your changes in the Title above -->
When trying to build the test target with the ODIN's Makefile, encountered a syntax error which I fixed.
#### Description
<!--- Describe your changes in detail -->
I have made the same edit on two lines of the Makefile.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
It resoves the error when trying to make the test target.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The ""make test"" command now works and starts the benchmarks.
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",dbafec69e0b38c6584c460c54e54d36e5f18ff66,2022-02-25 13:33:16
1968,1,True,5,27,5,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Deleted ""gridlocations"" xml tags in pb_type xml examples throughout the architecture tutorials, as well as one sentence explaining the meaning of the gridlocations tag in the tutorial text.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The ""gridlocations"" xml tag is no longer supported and has already been removed from the documentation (other than these tutorials).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It hasn't been.  It is low risk since the change only impacts the documentation.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [ x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e4f7bf2b8bad959fb1e0a7886c78c802a4600c5b,2022-02-10 18:51:46
1964,1,True,2,2,1,0,"Signed-off-by: Pawel Czarnecki <pczarnecki@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
I see that kokoro fails in recent CI runs with:
```
++ pyenv install -f 3.6.3
Downloading Python-3.6.3.tar.xz...
-> https://www.python.org/ftp/python/3.6.3/Python-3.6.3.tar.xz
Installing Python-3.6.3...
Installed Python-3.6.3 to /home/kbuilder/.pyenv/versions/3.6.3

++ pyenv global 3.6.3
++ curl https://bootstrap.pypa.io/get-pip.py -o get-pip.py
  % Total    % Received % Xferd  Average Speed   Time    Time     Time  Current
                                 Dload  Upload   Total   Spent    Left  Speed

  0     0    0     0    0     0      0      0 --:--:-- --:--:-- --:--:--     0
100 2548k  100 2548k    0     0  18.8M      0 --:--:-- --:--:-- --:--:-- 18.8M
++ python3 get-pip.py
ERROR: This script does not work on Python 3.6 The minimum supported Python version is 3.7. Please use https://bootstrap.pypa.io/pip/3.6/get-pip.py instead.
```

As a fix I bumped python version in kokoro script to 3.7.0.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Noticed it after creating PR: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1963

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1742d8d1e2d9925a942571e34fda133bd36e7e40,2022-02-02 03:09:36
1962,6,True,175,175,34,14,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR we will Clean-up DeviceContext (Remove shadowed data structure).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",42e492d23f78b4336890aacff0fd57a1aa261045,2022-02-09 22:25:09
1960,2,False,1233,22,38,0,"Intel updated their TBB library, changing the paths and deprecating some features. 
In order for VTR to continue working on more modern machines, some adaptation was required.

#### Description
Intel updated TBB. 
To support this, the required changes were:
- Fix the CMake files to detect either the `tbb_stddef.h` or `version.h` files of the library.
- Fix `vpr_api.c` due to `task_scheduler_init` being removed in newer versions
- Detect the version in CMake (in order to allow backward compatibility)

#### Related Issue

#### Motivation and Context
VTR will not compile on machines with TBB version greater than 2021.1

#### How Has This Been Tested?
Compiled on a machine with newer TBB version

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [ ] All new and existing tests passed
",5094a74bdb04d85cd85e8b606872f30a22b2bce9,
1958,5,True,383,142,5,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This adds the synthetic tiles for the constant network, improving support for the interchange devices.

The idea is to place a synthetic tile with two subtiles, each for one constant. The synthetic tile will be placed on the edge of the grid, so not to conflict with real tiles.

With the followup RR graph interchange reader, the constant tiles will be connected to the real RR graph based on the information present in the device

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Constants need to be handled correctly, and fully supported


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",724b87edc767f9e87013ec655cd38869dd21bf72,2022-03-15 14:28:32
1957,12,True,321,70,8,2,"<!--- Provide a general summary of your changes in the Title above -->

This PR is a work in progress. It relies on code from 3 different PRs:
* https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1663,
* https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1789,
* https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1947

That is why it's based on top of concatenated commits from all 3 PRs. This will cause those commits to appear on the list of commits in this PR and in the diff. I will update this PR when the rest of PRs will be merged.

#### Description
<!--- Describe your changes in detail -->
This PR modifies the VPR Netlist Writer in order to allow writing Verilog and SDF files that can be simulated. The changes include:
* changing the access specifiers of some members of class `NetlistWriterVisitor` from `private` to `protected`
* adding class `MergedNetlistWriterVisitor` that inherits from `NetlistWriterVisitor` and overrides some of its behaviour in order to write another verilog netlist that will have its multi-bit top module ports merged so that we have code like this:
```
module top (
    input \clk ,
    output [3:0] led);
```
instead of this:
```
module top (
    input \clk ,
    output \led[0] ,
    output \led[1] ,
    output \led[2] ,
    output \led[3] 
);
```

* adding new option `--gen_post_synthesis_merged_netlist` that enables second verilog writer
* changing the format of multi-bit ports in cells instancing
* escaping characters `[` and `]` in Black Box cell instancing in SDF files


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Issue was first described in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1946.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This change is required for performing simulation of post synthesis verilog files written by VPR without using any external scripts for adjusting VPR output. Simulations are part of Symbiflow testing procedure where verilog files with merged multi-bit ports of at least the top module are needed. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

New VPR build was used to generate verilog output for Symbiflow designs that were then simulated to verify the correctness of verilogs

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",12830cdf67ce155844bdcfd8570bd94b567d4bb6,2022-04-11 18:41:04
1954,7,True,714,473,3,3,"#### Description
<!--- Describe your changes in detail -->
The clustering code is doing most of the real packer functionality. It contains an extra-long function (do_clustring) that is more than 470 lines of code. In this PR, several helper functions are introduced to make the clustering code more readable.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The packer code needs a lot of refactoring to be more readable and easier to follow. While this PR didn't completely solve the issue, it is just the first step.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
By running vtr_reg_basic and vtr_reg_strong and getting exactly the same earlier results.
",84ace9abc6aa08fe297464495abf7756d4cf2105,2022-01-18 18:17:26
1953,7,True,437,53,21,12,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Except for the VTR primitives, the rest of models in architecture files could not be parsed by Yosys elaborator in the Yosys+Odin synthesizer unless Yosys is provided with modules' signature. This was possible previously, by adding the modules signatures manually in a Verilog file and pass it to Yosys+Odin-II. This PR automate this process by:
- A VerilogWriter entity is added to go through the arch.xml and generate a Verilog file including the declaration of all models, except for VTR primitive hard blocks (i.e., single_port_ram, dual_port_ram, adder, and multiply)
- Yosys is provided with the signature of models defined in the arch file via the generated Verilog file ( `arch_dsp.v`) in the ODIN_II directory. Additionally, the `-blackbox` option is added to the write_blif command in the yosys script to print out the definition of the used hard blocks in the coarse-grained BLIF file, and the `-purge_lib` option is added to the hierarchy command to avoid printing the definition of unused ones.
- Odin-II BLIF Reader creates a `HARD_IP` nodes for blackboxes and passes them untouched to the subsequent phases.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",519244871d352148fb5eab66144720c6291b1812,2022-01-29 02:25:57
1952,3,True,144,66,10,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR the owner of data structures  rr_node_metadata/rr_edge_metadata has been changed from device_ctx to rr_graph_builder. 

#### Related Issue
The metadata is an internal data structure used in rr_graph_builder so it should be part of this class 


#### Motivation and Context
These changes are continuation of reorder_nodes function location change

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8ed65cee4d3b56e82d3d2b88b362a050fd1baacb,2022-02-04 18:18:51
1951,7,True,180,50,17,14,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing RRGraphBuilder::rr_switch_inf(PRSwitchId switch_Id ) and RRGraphBuilder::rr_segment(PRSegment  seg_Id )  throughout VTR. In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphBuilder API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6587aedcd9dad140590d98d206086d876c4c2ccf,2022-01-28 18:04:55
1950,1,True,44,5,2,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The `run_vtr_flow.py` script gets stuck on calling `get_memory_usage(logfile)` when the logfile does not exist. This PR fixes the bug, in addition to showing the maximum memory of all VTR flow stages instead of only the VPR stage in the final output.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue #1949 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
If an input file has errors and the VTR front-ends fail, the `run_vtr_task` script gets stuck and the terminal does not come back to the prompt

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8d281fbabb0dac7e129d4995fe6544a1c1c6efcf,2022-01-08 16:21:11
1947,6,True,450,27,13,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds 2 new options:
* `--write_block_usage`
* `--write_timing_summary`
which enable VPR to write two summary files in JSON format.
The first one reports the usage of specific blocks of given architecture for implemented design during packing step in format:
```
{
  ""num_nets"": ""<int>"",
  ""num_blocks"": ""<int>"",
  ""input_pins"": ""<int>"",
  ""output_pins"": ""<int>"",
  ""blocks"": {
    ""<block_type_name_0>"": <int>,
    ""<block_type_name_1>"": <int>,
    ...
    ""<block_type_name_n>"": <int>
  }
}
```

Second option writes final timing summary for the design evaluated in routing step. It consist of Critical Path Delay (cpd), Max Circuit Frequency (Fmax), setup Worst Negative Slack (sWNS), setup Total Negative Slack (sTNS). The format is as follows:
```
{
  ""cpd"": <double>,
  ""fmax"": <double>,
  ""swns"": <double>,
  ""stns"": <double>
}
```

#### Related Issue
This feature was suggested in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1944
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Information provided in generated JSON files is used in [SymbiFlow](https://github.com/SymbiFlow/symbiflow-arch-defs) to perform tests that verify the block usage and timings against reference values in order to catch possible regression.
Current way of getting the information from VPR requires parsing the log output in search of timing summary and block usage info. It would be better solution to let VPR prepare the output in easy to read format so that we won't rely on log output that could be changed in the future and cause failures in log parsers.


#### How Has This Been Tested?
This was tested locally by adding new options to calls to VPR in symbiflow and inspecting the resulting files.
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",db3039fe2abbac15e0ba403bed742c8b780532fb,2022-01-31 08:24:15
1945,4,True,162,135,21,14,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing RRGraphView::rr_switch_inf(PRSwitchId switch_Id ) throughout VTR. Every time device_ctx.rr_switch_inf[switch_Id] was called has been replaced with rr_graph.rr_switch_inf(switch_id). In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",115a9998a3922600ea3f1ea39336bfeae09072a4,2022-01-04 19:14:05
1942,2,True,9,2,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",379557b9b71e43918d4e333c2645689ad4fbc0e4,2021-12-22 19:17:05
1940,1,True,9,0,1,5,"added flags to ignore warnings when compiling unit tests that use the catch2 framework

<!--- Provide a general summary of your changes in the Title above -->
VTR currently uses the catch2 framework for unit tests. But compiling any project with the catch2 framework causes warnings to appear that are within the catch2 project. This PR removes the warnings due to the catch2 framework so they do not appear during compilation.

#### Description
<!--- Describe your changes in detail -->
The ""-w"" flag has been added to all unit test projects so that any warnings related to the catch2 framework are ignored.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR is related to issue 1935.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
It is preferred to have a warning free build.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This has been tested by compiling VTR locally and verifying that all the warnings related to the catch2 framework do not appear.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1efffcd9c1961af945068ce80589cf253c9c166c,2022-03-07 18:37:48
1939,8,True,128,95,6,19,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I have relocated the  reorder_rr_graph_node() from rr_graph_util.cpp to rr_graph_builder.cpp. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
As it was devised in the node_first_edge() Pull Request discussion.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",16e3a13ee1cf5952f0b5cd5592b97da3c97bce66,2022-01-06 19:38:21
1938,60,True,844,131,23,9,"#### Description
This pull request includes changes that fall under 3 main categories. 

First, new routines were added to the vpr constraints writer files that allow that user to generate different kinds of floorplan constraints files. Specifically, they can generate floorplan constraints that consist of 
a. two partitions that each take up half the grid
b. four partitions that each take up a quadrant of the grid
c. sixteen partitions that each take up a sixteenth of the grid
d. each cluster being put into its own partition and locked to its previous spot on the grid

Second, changes were made to how the clusterer picks new molecules as candidates for the current cluster that is being packed. Specifically, the molecule gain is increased for molecules that have the same attraction group as the cluster, and decreased for molecules that do not have the same attraction group as the cluster.

Third, new checking routines were added to the clustering and placement stages to give insight on why vpr runs might fail when being run with constraints. Specifically, these routines give insight on which floorplan regions are overfilled, and by how many clusters.

#### Related Issue
Related to the changes being made to implement placement constraints in VPR - see issue #932 for more information


",ca7d60aac385cf49ccc1a57606dea26391e2db69,2022-02-10 16:20:04
1937,22,True,2328,338,13,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR is to improve and add missing features to be able to correctly read the interchange device, and place and route a design using the automatically generated RR graph.

This is true for all the currently available interchange architectures, namely xilinx series7, lattice nexus and the basic test-architecture.

Given that the RR graph is auto-generated, the route file will be invalid, but we can start adding regression tests to verify that the whole flow is correct.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This is in the contect of adding support to the FPGA interchange format

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Unit C++ tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",450540c3f24ebd66dee7a96779fb7a9d147cca64,2022-01-25 08:43:22
1936,8,True,27,10,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR includes a few minor modifications to the vqm2blif parser.  Small changes have been made to the parser grammar files (vqm_parser.l and vqm_parser.y) in order to achieve the following objectives:

- The synthesis attributes and directives inside (* and *) delimiters should be ignored

- The names that start with \ (called TOKEN_ESCAPEID) should be allowed to be used for declaration of a vector. Currently the name of the vectors can only start with alphabetic characters and _ (TOKEN_REGULARID).

- If a line in the code ends with a TOKEN_ESCAPEID and there is no space between the token and the ; at the end of the line, ; should not be considered part of the TOKEN_ESCAPEID. 

- The ! operator is escaped. Though it should be noted that this results in the lut_mask parameter being incorrect after conversion from VQM to BLIF. 

- Bit strings in hexadecimal format (nh’[0-9|A-F]+) should be accepted by the parser. 

-  If the declarations and statements appear in a mixed order the parser should still be able to successfully parse the VQM file. 


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR is related to the issue #1931 

#### Motivation and Context
The purpose of these modifications is to enable the tool to parse the Quartus VQM files targeting Stratix 10 and Agilex. The current version of the parser grammar is written based on the VQM files targeting Stratix IV devices. The new VQM files cannot successfully go through the parser as they differ slightly in formatting.
#### How Has This Been Tested?

In order to be able to test the changes, the architecture description of Stratix 10 or Agilex is required. The tests will be included in a different pull request once the architecture capture of one of these two devices has reached a major milestone. 

<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",fc53f08b9c18f722bfcbbe812987340f675609cf,2021-12-17 14:53:29
1932,10,True,239,212,18,23,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::nodes()` which is a function that can be used to iterate over every node. Places throughout VTR that were doing this using `for (int id=0; id<nodes.size(); id++)` have been replaced with this function.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the 

tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7682594/nodes_output.xlsx).

Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|vtr_flow_elapsed_time	|1|	1.016294606|
|odin_synth_time	|1|	1.042278333|
|abc_synth_time	|1|	1.008543954|
|max_vpr_mem	|1|	1.00009757|
|pack_time	|1|	1.006138366|
|place_time	|1|	0.998640717|
|min_chan_width_route_time	|1|	1.004259057|
|crit_path_route_time	|1|	0.987037457|


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c2193139f22fe85a34ef60fb6c1685d9457f539e,2022-01-06 19:34:58
1930,21,True,98,114,22,25,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing RRGraphView::edge_switch(const RREdgeId& edge)  and RRGraphView::edge_switch(RRNodeId id, t_edge_size iedge)  throughout VTR. Every time device_ctx.rr_nodes[from_node].edge_switch(iedge); was called has been replaced with rr_graph.edge_switch(EdgeId). In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",52a60bf42933480b3663b16ead75750673c07adc,2021-12-23 18:44:26
1929,3,False,49,39,16,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing RRGraphView::edge_switch(const RREdgeId& edge) throughout VTR. Every time device_ctx.rr_nodes[from_node].edge_switch(iedge);  was called has been replaced with rr_graph.edge_switch(edgeId). In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",74679823afacc022db3c9d705f6c66386d783cff,
1927,6,False,2348,275,20,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR builds on top of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1926.

The changes include:
- Improvement of the cell to bel mapping, or in other words the mapping between a model primitive and its pb type, to allow the generation of multiple modes based on the various models that can be implemented in a pb_type
- move the package pad bels information in the architecture reader, rather than having them in the `arch` structure
- refactoring of some parts of the interchange reader, for instance by adopting the string internment to translate from an index to its string value.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Improvement in the Interchange support

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Tests in Catch2 framework

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",c35d60dabd3c4804f34a7a719d735ab0357cb5a4,
1926,3,False,1290,292,9,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR builds on top of #1924 and #1925.

It does the following:
- moves some checking and common functions from the XML reader to the utility source file
- adds basic support for reading in the physical tiles
- adds basic support for reading the logical blocks (e.g. pb_types)


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Improve support for the interchange reading in VTR

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Catch2 tests framework

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",9f7b716a282ba7123381c58efe939bbb01599cce,
1925,2,True,335,0,2,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR adds basic support for the architecture reading:
  - Device
  - Layout
  - Switches

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This is part of the FPGA Interchange support in VTR

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Catch2 testing framework

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a4226a06a885ca44e232d82de26a014d5ff1d30b,2021-12-02 11:47:31
1924,4,True,714,64,16,6,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the FPGA Interchange netlist reading and parsing support.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
With the ongoing development to add support for the netlist interchange, the additional reader for the interchange netlist format is an essential part, thanks to which we can import the circuit according to the format specification.

This is the next relevant addition to the current early support.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

There is a unit test that contains a simple circuit targetting the interchange test architecture, implemented using the catch2 framework.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",1223d064a57e74fce01f69152472d57302dbedaa,2021-12-14 21:13:50
1923,9,True,942,732,36,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- Fix $shiftx subcircuit support. The support for this subcircuit is missed in the initial implementation of Yosys+Odin-II. $shiftx is a subcircuit representing a specific array indexing (indexed part-select) in Verilog as follows:
`
assign Y = A[B +: Y_WIDTH]
`
- Add ""wreduce"" to Yosys synthesis script to possibly reduce word sizes. Using this command Yosys reduces the size ports that can be reduced. This command resulted in a few mismatches in Division and Multiplication implementations (such as a smaller output port size than the maximum size of inputs for a multiplier), which have been handled in this PR as well.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Providing support for a missed feature, reported by the UT Austin, Texas Team (@aman26kbm)

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",32e62c9d2ec52d6fa26c72a77e17d1108060ac71,2022-01-04 15:11:30
1922,18,False,52,353,12,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I have implemented RRGraphView::rr_segments(PRSegmentId Seg_Id ) throughout VTR. Every time device_ctx.rr_segments[Seg_Id] was called has been replaced with rr_graph.rr_segments(Seg_Id). In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cb31ba6fea191c1b2681237f08b7835de5f1ed3a,
1917,22,True,89,57,19,21,"#### Description

<!--- Provide a general summary of your changes in the Title above -->
In this PR, I am implementing `RRGraphView::edges()`, `RRGraphView::num_edges()`, `RRGraphView::configurable_edges()`, `RRGraphView::non_configurable_edges()`, `RRGraphView::num_configurable_edges()` and `RRGraphView::num_non_configurable_edges()` throughout VTR. Each `device_ctx.rr_nodes[node].edges()` call has been replaced with `rr_graph.num_edges(RRNodeId(node))`. The same pattern was followed for the other functions in this PR. In order to do this, I followed a pattern similar to that in the last PR.

<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a4a5abf269eaa52656342785c80a877a61d9a41c,2021-12-14 22:08:19
1916,8,True,14,1,3,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I have implemented RRGraphView::node_first_edge() throughout VTR. Every time device_ctx.graph.first_edge() was called has been replaced with rr_graph.node_first_edge( RRNodeId (index)). In order to do this, I followed a pattern similar to that in the last PR.
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a20816cbcbc3cc58fee62719ab1d30ff3ff88fd4,2021-12-02 19:19:46
1915,2,True,6,6,2,0,"This fixes two issues with the string description of rr nodes (describe_rr_node)
1. Adds a missing space character.
2. Adds the x,y location for SINK and SOURCE rr nodes.  This was previously missing and it made it difficult to locate a given SOURCE/SINK rr node from an error message (in my case it was failed routing error message that only printed SOURCE and SINK description).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8b7752ff8717774dcff10af2d6f90a202707083a,2021-11-18 16:40:37
1914,3,True,357,382,32,2,"# Overview

This PR makes two changes at once (my apologies, it would be better if they were separate, but they become quite intertwined while getting this to all work):
  1. This PR provides a few updates to ease the environment setup for new users by refactoring the build documentation that was spread across multiple different pages.
  2. Migrates the Sphinx markdown processor from recommonmark (now deprecated) to myst-parser (the newly official markdown processor).

# Refactoring Build Documentation

Multiple changes were made to the instructions on building and setting up VTR.

1.I've moved the required packages into a install_apt_packages.sh file. The list of packages has been changed somewhat, and I've removed old packages that we aren't using anymore.  I've tested on a fresh Ubuntu 18 and 20 system.

2. I've created a `make evn` target to setup a Python environment.

    With the move to using Python for the runner scripts, and the inclusion of a [requirements.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/requirements.txt) file of required Python packages, I think it would be nice if we provided an automated mechanism to create a Python virtual environment and install the necessary packages.  To me this seems like good practice versus having users modify their system Python version, especially since our requirements.txt is requiring specific versions of certain packages.  

3. I've refactored the build documentation. We currently have build documentation in three places, and it's quite inconsistent about what information is where:
  * [The Quick Start guide](https://docs.verilogtorouting.org/en/latest/quickstart/)
  * [Building VTR](https://docs.verilogtorouting.org/en/latest/building/building/)
  * [Installing VTR](https://docs.verilogtorouting.org/en/latest/vtr/install_vtr/)

With these changes:
 * The quick start guide now includes information about setting up necessary dependencies
 * All required build information is moved to a single ""Building VTR"" page.
 * Optional build information (debug mode, sanitizers, other platforms, etc), is moved to a single ""Optional Build Information"" page.
  
# Changing Markdown Processor

While refactoring this documentation I discovered issue #1941 where certain internal markdown links were broken.  This seemed to be a byproduct of our efforts to fix links between the Sphinx documentation and our top-level Markdown files (ie CONTRIBUTING.md).

Rather than trying to fix our broken workaround, which was still using recommonmark (deprecated Markdown processor), I migrated our Sphinx build to use the newer (and official) myst-parser.  At first it wasn't obvious how to support links between our top-level Markdown files and our Sphinx docs, but I managed to develop a [solution](https://github.com/executablebooks/MyST-Parser/issues/361#issuecomment-1006873840).

This involved replacing symlinks that we had from our `docs/src` to the top-level Markdown files, and instead use some stub files with myst-parser's *relative-docs* feature.  Example stub file:

    ```{include} ../../BUILDING.md
    :relative-docs: doc/src
    ```

This approach seems to fix all of our linking issues.  I've also updated several broken links as I've cleaned things up.

#### Related Issue
#1941 

#### How Has This Been Tested?
I've compared the Sphinx build log outputs before and after this change to ensure no new errors/broken links were created.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ac2d1ef0e87335815fe74dfebee5328bc1dfe362,2022-01-10 18:59:09
1913,9,True,122338,11654,461,1,"<!--- Provide a general summary of your changes in the Title above -->
VTR uses Catch as its unit test framework. Currently, the version used by VTR is outdated (version 1), the changes in this PR upgrade Catch to the latest version. Additionally, any projects that originally used the older version of Catch were also updated to use the latest version. 

#### Description
<!--- Describe your changes in detail -->
- The older version of Catch was removed
- The latest version of Catch was added using git subtrees
- All projects that used the older version of Catch were updated to use the newer version (this involved modifying include headers and also updating some source code that was specific to the older version of Catch)

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR is related to issue [https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1909](url)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Latest version of Catch supports newer c++ versions and also has newer features.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This change has been tested by running all the unit tests and comparing the outputs with the older version of catch and making sure there were no differences.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8fb764d1aa4017d43e6633bd8a0cd547eff6de4c,2021-11-18 18:44:28
1911,1,True,2,2,1,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
The power flow currently prints an info message containing the word ""error"". This needs to be warning as discussed in the related issue.

#### Related Issue
Issue #1797 
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
Removes confusing error message from log files
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
Minor change. I checked that the message prints as a warning.
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",420d1dfd69a61dc9d5479d2b111eab3704801095,2021-11-11 18:33:48
1910,3,True,47,21,10,19,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing RRGraphView::rr_segments(PRSegmentId Seg_Id ) throughout VTR. Every time device_ctx.rr_segment[Seg_Id] was called has been replaced with rr_graph.rr_segment(Seg_Id). In order to do this, I followed a pattern similar to that in the last PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?

- [x]  All vtr basic and strong tests are passing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9d7b3e80f6f4f35b9c50bba5ba5422e174e378bb,2021-12-02 19:08:22
1908,7,True,124,110,19,5,"### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_ptc_num()`, `RRGraphView::node_pin_num()`, `RRGraphView::node_class_num()`, `RRGraphView::node_track_num()` throughout VTR. Every time `device_ctx.rr_nodes[node].node_ptc_num()` was called has been replaced with `rr_graph.node_ptc_num(RRNodeId(node))`. The same pattern was followed for the other functions in this PR. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6555913/rr_graph_view_node_type.xlsx).



Only rows that are different are shown. For some reason, `vtr_flow_elapsed_time` was empty in the spreadsheet.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|odin_synth_time	|1|	0.984647269|
|abc_synth_time	|1|	1.001007005|
|max_vpr_mem	|1|	0.999800843|
|pack_time	|1|	0.997122006|
|place_time	|1|	0.992015738|
|min_chan_width_route_time	|1|	0.996755548|
|crit_path_route_time	|1|	1.01858794|




#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",331d0af68ad0b7b0599bd832170c963efd9a36c6,2021-11-22 18:37:14
1907,7,True,1094,558,24,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR supersedes both https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1893 and https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1870

It adds the very first usage of the interchange schema, by providing an option to read in the device primitive library filling in the device models.

The PR contains three types of changes/additions:

1. Addition of FPGA interchange device reading (and corresponding C++ unit tests)
2. Addition of switches to transition from normal XML to Interchange format
3. CMake infrastructure changes to allow schema compilation

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Incremental addition of the Interchange format usage capability

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
C++ tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d2b73ee85947277da41dca91d7d51dd6cc4c48c3,2021-11-19 15:31:25
1906,3,False,160,155,52,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am implementing `RRGraphView::rr_segments(PRSegmentId Seg_Id)` throughout VTR. Every time `device_ctx.rr_segments[Seg_Id]` was called has been replaced with `rr_graph.rr_segments(Seg_Id)`. In order to do this, I worked in  a similar way as did in previous PRs for `RRGraphView` APIs implementation.


#### Motivation and Context
These changes are a continuation of the `RRGraphView` API implementation effort.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
#### Issues and Errors:
I have created API for `rr_segments` and passed `RRSegmentId` StrongId as argument and replaced in respective files where it is needed but we stuck at  [`Segments = Arch->Segments`](https://github.com/RapidSilicon/vtr-verilog-to-routing/blob/c24d287309b06dce7a70a4204c66c73d38126c52/vpr/src/base/SetupVPR.cpp#L167)   which points to  [`std::vector<t_segment_inf> Segments;`](https://github.com/RapidSilicon/vtr-verilog-to-routing/blob/c24d287309b06dce7a70a4204c66c73d38126c52/libs/libarchfpga/src/physical_types.h#L1748)  where we can't pass `RRSegmentId` StrongId, because that is outside of the vpr/ directory. And that pop out many warnings and errors, below is shown screenshot of errors and warnings. 


![image](https://user-images.githubusercontent.com/89627257/140027536-edebd19b-e564-4b88-9ef0-af4cec3c3184.png)


",c24d287309b06dce7a70a4204c66c73d38126c52,
1905,6,True,13,3,3,2,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy APIs `reserve()` and `resize()` from the `rr_node` data structure if present there.

After this PR, the `reserve_nodes()` and `resize_nodes()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `reserve()` and `resize()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new APIs `reserve_nodes()` and `resize_nodes()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `reserve()`, `resize()`  with `reserve_nodes()`, `resize_nodes()` respectively, from respective client functions (if needed)

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `reserve_nodes()` and `resize_nodes()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",99b0641726d79ea6b91e8bac64a133c98fe3d26d,2021-11-02 17:07:51
1904,1,False,41,35,15,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
In this PR, I am  implementing RRGraphView::rr_segments(PRSegmentId Seg_Id ) throughout VTR. Every time device_ctx.rr_segment[Seg_Id]  was called has been replaced with rr_graph.rr_segment(Seg_Id). In order to do this, I followed a pattern similar to that in the last PR.

#### Motivation and Context
These changes are a continuation of the RRGraphView API implementation effort.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
#### Issues and Errors:
As we discussed  , facing some issues and errors below is shown screenshot of errors and issues.
![image](https://user-images.githubusercontent.com/89627257/139190364-1a2b8dc4-46f8-446a-81ef-eabb85c7355b.png)",c05c7a68aa7e71ba96d30b443de9e6db431e7383,
1903,3,True,10,2,3,3,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `init_fan_in()` from the `rr_node` data structure.

After this PR, the `init_fan_in()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `init_fan_in()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new API `init_fan_in()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `init_fan_in()` in respective functions (if needed)

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `init_fan_in()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [ ]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",764658a60d2dbc341aa14d34f689822c2da3fec8,2021-10-31 17:15:14
1902,5,True,6,1,2,3,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `make_edges_as_rr_switch_ids()` from the `rr_node` data structure.

After this PR, the `make_edges_as_rr_switch_ids()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x] Removed the legacy API `make_edges_as_rr_switch_ids()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new API `make_edges_as_rr_switch_ids()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `make_edges_as_rr_switch_ids()` in respective functions (if needed)

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `make_edges_as_rr_switch_ids()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",1fc8b8a16a4077a79df9c8be672cc9a8d13e3a6c,2021-11-03 02:16:53
1900,6,True,8,2,3,6,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `partition_edges()` from the `rr_node` data structure.

After this PR, the `partition_edges()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `partition_edges()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new API `partition_edges()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `partition_edges()` in respective functions (if needed)

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `partition_edges()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",7af902a3742dbb824a5525831d10918e5ac1b5aa,2021-11-03 15:21:22
1899,4,True,10,0,1,4,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `validate()` from the `rr_node` data structure.

After this PR, the `validate()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `validate()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new API `validate()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `validate()` in respective functions (if needed)

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `validate()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",d1c535d572d61ec42bf95f92fe88687aec70aa72,2021-11-01 17:01:52
1898,1,True,1,1,1,5,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Docs build started to fail, probably caused by an update to docutils. This PR pins the docutils version

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",61271c94c40f6ffc8018bf5f2e3386f865beab7b,2021-10-28 17:45:23
1897,5,True,6,1,2,3,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `remap_rr_node_switch_indices()` from the `rr_node` data structure.

After this PR, the `remap_rr_node_switch_indices()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `remap_rr_node_switch_indices()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x]  Added new API `remap_rr_node_switch_indices()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `remap_rr_node_switch_indices()` in respective functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805, #1868

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `remap_rr_node_switch_indices()` API among the other APIs in #1847, #1868

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",2c7549d4a9be6e1078153fcae9c19423a31445e2,2021-10-29 21:38:16
1896,4,True,10,1,2,1,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `count_rr_switches()` from the rr_node data structure.

After this PR, the `count_rr_switches()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `count_rr_switches()` from rr_node.cpp and rr_node.h (if present)
- [x]  Added new API `count_rr_switches()` to data structures RRGraphBuilder, whose comments are Doxygen compatible
- [x]  Replaced all the use of `count_rr_switches()` in respective functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort[ #1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `count_rr_switches()` APIs among the other APIs in[ #1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [x]  My change requires a change to the documentation
- [ ]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",35aadfe9224e079e24ac3e8d8523436373006d54,2021-10-27 04:53:36
1895,3,True,2978,27,44,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR collects the commits from https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1870 that do add the interchange schema `EXTERNAL` subtree.

This makes it so that the following PRs become lighter to review.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e592e65c6f1643700aec6ef7e382852149647545,2021-10-29 12:55:13
1893,3,False,836,118,17,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds an initial implementation of the interchange format architecture frontend, that is an implementation that aims to be parallel to the XML architecture reading step, but which reads directly from an FPGA interchange device.

NOTE: this PR is based on top of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1870, of which, many of the line changes come from the interchange-schema subtree.

Alongside with the initial (and partial) architecture reading step, there is also an addition to the option list to read-in the Logical Netlist and write the Physical Netlists as well. Possibly, these may be removed until the support is complete (at least partially).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This is the first step to get a wider adoption of the [Interchange Format](https://github.com/chipsalliance/fpga-interchange-schema) and provide yet another tool able to use the format (alongside with nextpnr and RapidWright).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
To speed-up the integration process of the various implementation stages, smaller PRs would be required, and also tested, to verify the added functionality. Therefore, unit tests are being developed as well, to quickly check the contents of the VTR's internal structs.

There is an addition of a test architecture, already serialized and gzipped in the cap'n'proto file format.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a5416f2f34352db598eb07fffdc207fb6b285d7e,
1892,12,True,28,11,3,1,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy APIs `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()` from the `rr_node` data structure.

After this PR, the `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()` from the refactored data structure RRGraphBuilder is the only way to use it.

**Checklist:**
- [x] Removed the legacy API `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()` from `rr_node.cpp` and `rr_node.h` (if present)
- [x] Added new APIs `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()`to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x] Replaced all the use of `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()` in respective functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805),[ #1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `reserve_edges()`, `emplace_back_edges()` and `alloc_and_load_edges()` APIs among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",42e327b60c05713eefbbd66965a67bf3c409604c,2021-11-01 16:40:29
1890,2,True,56,17,3,0,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Adding a few handy makefile options for the Yosys+Odin-II synthesizer.
complimentary changes to PR #1798 

Users can use all Odin-II makefile options for Yosys+Odin-II as long as the ``ELABORATOR=YOSYS`` is passed to the make call.
For example:
```
# assumed the following commands run in the ODIN_II root directory

# build Yosys+Odin-II
make build ELABORATOR=YOSYS

# build Yosys+Odin-II with Odin-II in debug mode
make debug ELABORATOR=YOSYS

# run techmap_heavysuite and techmap_lightsuite to verify the functionality of the Yosys+Odin-II synthesizer
make test ELABORATOR=YOSYS

# regenerate the expectation results of all Yosys+Odin-II regression tests
make regenerate_expectation ELABORATOR=YOSYS
```

**NOTE**: the value of the ``ELABORATOR`` could be ``ODIN`` or ``YOSYS``. By default, the value is considered as ``ODIN`` and the value is not case sensitive. If nothing is passed to the make call, it automatically considers ``ODIN`` as the elaborator.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a066d9854dc4b3e01583c0d39cf9341c25239ace,2021-11-17 17:26:28
1889,3,True,9,7,5,4,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `add_node_side()` from the `rr_node` data structure.

After this PR, the `add_side()` API is fully deprecated, and the `add_node_side()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
 Removed the legacy API `add_side()` from `rr_node.cpp` and `rr_node.h`
 Added new APIs `add_node_side()` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
 Replaced all the use of `add_side()` with respective `add_node_side()` in builder functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the add_node_side() API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",99457aefdb008bdbb5fb9c57d73b7eaf3133025d,2021-10-26 04:05:23
1887,7,True,22,19,11,4,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `set_node_rc_index()` from the `rr_node` data structure.

After this PR, the `set_rc_index() `API is fully deprecated, and the `set_node_rc_index()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**

- [x]  Removed the legacy API `set_rc_index()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_rc_index` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_rc_index()` with respective `set_node_rc_index` in builder functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the `set_node_rc_index()` API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**How Has This Been Tested?**

- [x]  All vtr basic and strong tests are passing.

**Types of changes**

- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**

- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",82c59136ec5399b1dde1f84fa9231b426ae94b1d,2021-10-27 16:47:40
1886,16,True,104,92,1,4,"
#### Description
Currently during clustering the gain values are updated once for each level in a t_pb - from the root node down to the child node. However, the gain information only needs to be stored for the root pb, - the gain stored for the child pbs is never used. This pull request fixes the excess updates done during clustering.
",5f8b499ee743b4bd229229bf0414c71fc0e98aa5,2021-11-07 02:16:35
1885,3,True,1302,146,17,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Providing the documentation for newly integrated the Yosys+Odin-II synthesizer.
Related PR: #1798 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue: #1831

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",faf2ca696a49d2e810f5898f388bcab91b49b46f,2021-11-23 15:45:31
1884,10,True,34,33,7,10,"**Description**
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `set_node_cost_index()` from the `rr_node` data structure.

After this PR, the `set_cost_index()` API is fully deprecated, and the `set_node_cost_index()` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**
- [x]  Removed the legacy API `set_cost_index()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_cost_index` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_cost_index()` with respective `set_node_cost_index` in builder functions

**Related Issue**
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**Motivation and Context**
This PR is a continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR refactored the set_node_cost_index() API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1868)

**How Has This Been Tested?**
- [x]  All vtr basic and strong tests are passing.

**Types of changes**
- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**
- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",2594ccff597d414c0e6da7325bc9d666df837c06,2021-11-01 00:38:21
1882,1,True,138,0,2,0,"The real configuration will be landed in
https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1844

Signed-off-by: Tim 'mithro' Ansell <tansell@google.com>",06f1cedf6a9d23082d0310550696ccf5e288c070,2021-10-16 18:27:44
1880,1,True,180425,27,414,0,"Revert ""gh actions: add recursive submodule checkout""
This reverts commit ad89accfc64a2b0a9614836d5ef91b3293726e44.

Revert ""make: add submodules initialization""
This reverts commit 569eac1800c68d3ba2205e151e2eb23939b3f81d.

Revert ""libs: capnp: add capnp submodule and checked it to v0.7.0""
This reverts commit a936d28030e8ba8edb5d7dfc7c71a4c64b8e2700.

Revert ""libs: capnp: remove all checked-in files""
This reverts commit 917a887bb5567aa3ee551d8aff5efa1d8b8fac37.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This reverts https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1869 and re-adds the `git subtree` version.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1877

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ca0aba159801c6db54ade50e5233afed8685ff68,2021-10-16 17:08:53
1878,1,True,2,1,1,0,"
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Running run_vtr_flow.py creates a temp/ folder for all temporary files.  This should be ignored by git.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9249b1d7d2debd24046a91ee94547c59d2cce823,2021-10-18 15:56:31
1876,31,True,2451,6,5,2,"<!--- Provide a general summary of your changes in the Title above -->
Added support to process designs that contain new types of hard blocks.

#### Description
<!--- Describe your changes in detail -->
When new primitive hard blocks are included in a design, the Quartus synthesis tool does not correctly include the hard blocks
within the generated vqm netlists. Instead of directly instantiating the hard block within the netlist (which occurs for BRAM or DSP blocks), LUTs and DFFs have been added in place of the ports of each hard block within the design.

The feature added in this PR goes through netlists that contain hard blocks and remove the unnecessary LUTs and DFFs and in their place instantiate the corresponding hard block. The resulting blif file correctly includes all the hard blocks. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Titan Flow currently does not support new types of hard blocks, so designers would have to manually add the hard blocks to the netlist. This feature automates the previous step and quickly allows designers to perform tests and evaluate architectures with new types of hard blocks.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
The following tests were performed:
- A custom design with a new type of hard block was used to verify the functionality of the new feature
- Sanitization and Valgrind tests were also performed
- The existing Titan23 circuits were used to verify that the new feature did not modify prior results

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x ] I have added tests to cover my changes
- [ x] All new and existing tests passed
",29f8f5cb57bd2e7830d6fdd662f82d89daf0eb54,2021-11-12 14:27:36
1873,4,True,45,51,14,1,"### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_type_string(node)` and `RRGraphView::node_side_string(node)` throughout VTR.  In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7347035/node_type_string.xlsx).


Only rows that are different are shown. For some reason, `vtr_flow_elapsed_time` was empty in the spreadsheet.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|odin_synth_time	|1|	1.014123996|
|abc_synth_time	|1|	1.006390209|
|max_vpr_mem	|1|	1.000073409|
|pack_time	|1|	0.992432844|
|place_time	|1|	1.00722555|
|min_chan_width_route_time	|1|	1.000943466|
|crit_path_route_time	|1|	1.012807903|


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",15859c10164f1666995ba5c5cb58e33fcaeb9a41,2021-10-28 05:13:43
1872,15,True,37,29,7,1,"**Description**

This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully refactored/deprecate the direct use of the legacy API `set_ptc_num()`, `set_pin_num()`, `set_track_num()` and `set_class_num()` from the rr_node data structure. This PR contains four api refactoring as suggested in [#1865](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1865#discussion_r723768053)

After this PR, the `set_ptc_num`, `set_pin_num`, `set_track_num` and `set_class_num` APIs are fully deprecated, and the `set_node_ptc_num`, `set_node_pin_num`, `set_node_track_num` and `set_node_class_num` respectively, from the refactored data structure RRGraphBuilder is the only way to use it.

**Checklist:**

- [x]  Removed the legacy API `set_ptc_num()`, `set_pin_num()`, `set_track_num()` and `set_class_num()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_ptc_num`, `set_node_pin_num`, `set_node_track_num` and `set_node_class_num` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_ptc_num()` with respective `set_node_x_num` in builder functions

**Related Issue**

This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1805), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1868)

**Motivation and Context**

This PR is the continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR reworks the `set_node_ptc_num()`, `set_node_pin_num()`, `set_node_track_num()` and `set_node_class_num()` API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1847), [#1868](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1868)

**How Has This Been Tested?**

- [x]  All vtr basic and strong tests are passing.

**Types of changes**

- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**

- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",bbbb3a693d4e47353ad348560605e9dd1b0911cc,2021-10-13 16:41:06
1870,1,False,67,7,4,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a very initial step towards the FPGA interchange adoption and integration within VTR.

This step currently adds the [FPGA interchange schema definitions](https://github.com/chipsalliance/fpga-interchange-schema) as a submodule and, if the cmake cache variable is defined, the various capnp schemas are compiled and their srcs and headers generated, ready to be used in the VTR codebase.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
For now, the build process and cmake are enough to catch regressions when compiling the interchange schema files

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e1ce15cf72f21d7bbe00502288edfc316df338e3,
1869,5,True,62,180429,414,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR does the following:

- removes all committed files coming from a third party repository (namely capnproto) and adds a submodule instead
- adds the submodule initialization step in the makefile and the various GH action jobs

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
I am not entirely sure why all the external libraries have been committed in the VTR codebase, but I think that it should be much easier to handle third party projects with submodules, so that, in case we need to update them, we can just bump the submodule instead of committing the changes that do happen upstream.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

regression tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",65bda13dbdc81df714f0ed65a438ac6f473f2719,2021-10-14 18:54:05
1867,3,True,10,3,1,14,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This update collects `parse_results*.txt` from CI regression run, which can be analyzed locally or used to replace existing golden results. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
Addressing issue #1866 
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

_""It's common to have to update QoR files; we should streamline the process. This would also avoid issues where the CI machines are slower or faster or have libraries that take more memory etc. than someone's server, by generating the new results in CI itself.""_ - from issue #1866

To update golden results, you  might be able to do the following
1. Download `*_golden_results` artifacts and uncompress
2. *run `rsync --recursive downloaded_artifact/ local_task_directory/`
3. *run `parse_vtr_task.py --create_golden`
4. Create a new commit with updated golden results files
[*Remember to clean local run directory, `parse_vtr_task` collects results from the most recent run, and Step. 2 will update `run001` by default]

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
You can check the test CI run here
https://github.com/ganeshgore/vtr-verilog-to-routing/actions/runs/1317429846#artifacts

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",576cef1b82110f7ecd974a597bdc7037fe6a5fd7,2021-10-28 22:42:51
1865,5,False,12,10,6,5,"**Description**

This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully deprecate the direct use of the legacy API `set_ptc_num()` from the `rr_node` data structure.

After this PR, the `set_ptc_num` API is fully deprecated and the `set_node_ptc_num` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist**:

- [x]  Removed the legacy API `set_ptc_num()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_ptc_num` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_ptc_num()` in builder functions by `set_node_ptc_num()`

**Related Issue**

This pull request is a follow-up PR on the routing resource graph refactoring effort #[1805
](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805)

**Motivation and Context**

This PR is the continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR reworks the `set_node_ptc_num()` API among the other APIs in #[1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847)

**How Has This Been Tested?**

- [ ]  All vtr basic and strong tests are passing.

**Types of changes**

- [x]  Bug fix (change which fixes an issue)
- [ ]  New feature (change which adds functionality)
- [ ]  Breaking change (fix or feature that would cause existing functionality to change)

**Checklist:**

- [ ]  My change requires a change to the documentation
- [x]  I have updated the documentation accordingly
- [ ]  I have added tests to cover my changes
- [ ]  All new and existing tests passed",411c891918dd53ba54a3898bf6644890de5f8352,
1864,2,True,22,1,1,12,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Adding ""--no-check-certificate"" to wget command to the Kokoro host setup script to see if it solves recent Kokoro runners failure.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Discussed in #1863 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7bd87b0c8379e884acd5a4cffc7e25f41b2405a7,2021-10-02 02:47:11
1863,1,True,1,1,1,8,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
While a new VPR memory usage stat is added to the run_vtr_flow output, the value of VTR elapsed time is no longer read by parse scripts due to a mismatch in the corresponding regex expressions.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d501b7264bb25864f8dbe5c4d390defe7dbe9e32,2021-11-23 22:44:58
1862,8,True,41,45,7,2,"### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::is_node_on_specific_side(node, side)` throughout VTR. Every time `device_ctx.rr_nodes[node].is_node_on_specific_side(side)` was called has been replaced with `rr_graph.is_node_on_specific_side(RRNodeId(node), side)`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7279344/is_node_on_specific_side.xlsx)



Only rows that are different are shown. For some reason `vtr_flow_elapsed_time` was empty in the spreadsheet.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|odin_synth_time	|1|	1.005741674|
|abc_synth_time	|1|	1.001071995|
|max_vpr_mem	|1|	1.000305443|
|pack_time	|1|	0.995557606|
|place_time	|1|	1.000115373|
|min_chan_width_route_time	|1|	0.970409811|
|crit_path_route_time	|1|	0.982123532|



#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",92257219dbe32b4e8afeafdbd09143e06c429ccd,2021-10-11 20:28:25
1860,5,False,59,55,15,9,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The purpose of this PR is to remove the use of global variables from any function for modularization of VTR. This effort is started from the describe_rr_node() function defined in rr_graph.cpp in route directory. After removing global variables from routers, we will move on to placers, GUI, timing analyzer etc.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue related to this PR is https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1859
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Use of global variables is not a recommended way. Removing them will benefit in modularization and less usage of memory.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
 - [x] All vtr basic and strong tests are passing.
 - [x] VTR and Titan tests are passing.

QoR tests are complete and quick summary is given below. QoR comparison files are also attached.

**titan_quick_qor test:**
flow run time +8.44% on average.
critical path delay +0.26% on average.
Peak memory usage -1.79% on average

**vtr_reg_qor_chain_depop test:**
Flow run time 8.4% on average.
critical path delay -0.14% on average.
Peak memory usage -3.32% on average
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
[titan_results_compare.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7257410/titan_results_compare.xlsx)
[vtr_results_compare.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7257411/vtr_results_compare.xlsx)
",d3b364acbe40e988cf01f50f6e594aa94606d413,
1857,12,True,18,1,3,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Updated GitHub action `test.yml` to upload artifacts on the test failure. 
- It tracks failure in only the Regression test (not in build or any other process)
- Artifacts are collected  with these regex `vtr_flow/**/*.log` and `vtr_flow/**/*.out`  to upload
- The retention period for artifacts is set to 3 days (assuming the user can keep a local copy in case of failure)

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Addresses another part of issue #1808

#### Motivation and Context
Simplify debugging on CI regression failures

#### How Has This Been Tested?
Created an artificial bug in the basic regression test
(I will revert that before merging)

As an example please check the following failed CI run and uploaded artifacts
https://github.com/ganeshgore/vtr-verilog-to-routing/actions/runs/1288245384


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation (In case the debugging process needs to be documented)
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1cc25a08b9813602e553ef4c08ba8a2bf161620e,2021-10-07 15:29:32
1856,11,True,10,9,6,9,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully deprecate the direct use of the legacy API `set_direction()` from the `rr_node` data structure.

After this PR, the `set_direction` API is fully deprecated and the `set_node_direction` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**

- [x]  Removed the legacy API `set_direction()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_direction` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_direction()` in builder functions by `set_node_direction()`

#### Related Issue
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR is the continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR reworks the `set_node_direction()` API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847)

#### How Has This Been Tested?

- [ ] All vtr basic and strong tests are passing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a753290910e83e5ecdc0e4e95f779991e8176a00,2021-10-11 06:17:33
1855,6,True,18,22,8,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discreted data structure `rr_graph_storage`.
This PR aims to fully deprecate the direct use of the legacy API `set_capacity()` from `rr_node` data structure.

After this PR, the `set_capacity` API is fully deprecated and the `set_node_capacity` from the refactored data structure `RRGraphBuilder` is the only way to use.

Checklist:

- [x] Removed the legacy API `set_capacity()` from `rr_node.cpp` and `rr_node.h`
- [x] Added new APIs `set_node_capacity` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x] Replaced all the use of `set_capacity()` in builder functions by `set_node_capacity()`

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This pull request is a follow-up PR on the routing resource graph refactoring effort [ #1805 ](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR is the continuation to the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in `RRGraphBuilder` data structure.
This  PR reworks the set_node_capacity() API among the other APIs in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- [x] All vtr basic and strong tests are passing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",431ef1dd4d09bfa2ee3e2306ddcfd41da4b09988,2021-09-27 23:35:47
1854,5,False,15,11,7,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discrete data structure `rr_graph_storage`.
This PR aims to fully deprecate the direct use of the legacy API `set_direction()` from the `rr_node` data structure.

After this PR, the `set_direction` API is fully deprecated and the `set_node_direction` from the refactored data structure `RRGraphBuilder` is the only way to use it.

**Checklist:**

- [x]  Removed the legacy API `set_direction()` from `rr_node.cpp` and `rr_node.h`
- [x]  Added new APIs `set_node_direction` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x]  Replaced all the use of `set_direction()` in builder functions by `set_node_direction()`

#### Related Issue
This pull request is a follow-up PR on the routing resource graph refactoring effort [#1805](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR is the continuation of the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in the `RRGraphBuilder` data structure.
This PR reworks the `set_node_direction()` API among the other APIs in [#1847](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847)

#### How Has This Been Tested?

- [ ] All vtr basic and strong tests are passing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",3da7ac3de361badf36b996dab15d37e893ff1d31,
1853,5,True,21,20,8,18,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure `RRGraphBuilder` to shadow the discreted data structure `rr_graph_storage`.
This PR aims to fully deprecate the direct use of the legacy API `set_coordinates()` from `rr_node` data structure.

After this PR, the `set_coordinates` API is fully deprecated and the `set_node_coordinates` from the refactored data structure `RRGraphBuilder` is the only way to use.

Checklist:

- [x] Removed the legacy API `set_coordinates()` from `rr_node.cpp` and `rr_node.h`
- [x] Added new APIs `set_node_coordinates` to data structures `RRGraphBuilder`, whose comments are Doxygen compatible
- [x] Replaced all the use of `set_coordinates()` in builder functions by `set_node_coordinates()`

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This pull request is a follow-up PR on the routing resource graph refactoring effort [ #1805 ](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1805)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR is the continuation to the refactoring effort with a focus on shadowing the `rr_graph_storage` APIs in `RRGraphBuilder` data structure.
This  PR reworks the set_node_coordinates() API among the other APIs in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1847

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- [x] All vtr basic and strong tests are passing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",37547b39a41ee0b9882bea4ccf983f6197919d71,2021-09-21 21:30:45
1851,5,True,25,2,1,11,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Logs peak memory usage during VPR CI run. The information is extracted from the `vpr.out` (which I assumed obtained using valgrid)

#### Related Issue
Addresses part of issue  #1808 
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1808#issuecomment-904022281

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It has been tested locally, I have attached the screenshot.
![image](https://user-images.githubusercontent.com/6169914/133653858-2049f9af-3dbb-4ca1-ae38-06fc6df80ad4.png)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",173b22376121dcffc034599a065f80462f99d53d,2021-09-28 20:38:09
1850,14,True,1062249,30,10,2,"<!--- Provide a general summary of your changes in the Title above -->
Re-factored the original vqm2blif program source code for improved modularity. To verify the modifications, a test script was also added to the codebase.

#### Description
<!--- Describe your changes in detail -->

**Major Change 1:**
- cleanup.cpp contained a function called ""remove_node"", this function was written in a way that only allowed the ""remove_one_lut_nodes"" function to call it. The change allowed other functions to be able to directly use the ""remove_node"" function.
- also in cleanup.cpp, the function ""remove_one_lut_nodes"" had an embedded set of operations that basically fixed an array of nodes with gaps inside (empty elements), such that the gaps were removed and the array was continuous. The change added a separate function called ""reorganize_module_node_list"", which accepted a node array with gaps (empty elements) inside and returned an array with the gaps removed. 

**Major Change 2:**
- Added a test script called ""test_vqm2blif.sh"". This script can be used to test the vqm2blif program with any arbitrary netlist and architecture file. This script will inform the user if the program failed or whether the generated blif netlist was incorrect.
- Also added 3 basic benchmark netlists that can be used to verify the vqm2blif program. 

**Major Change 3:**
- Modified the github workflow file (test.yml) and added an additional job to test to verify the vqm2blif program. This new job leveraged the newly created test script described in change 2 above.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
- The code re-factoring was was done to simply improve the modularity of the codebase. 
- There was a lack of verification for the vqm2blif program, so the test script and workflow modifications were done to allow the vqm2blif program to be verified.   

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
- The vqm2blif program test script was tested first with the original unmodified vqm2blif source code. This helped verify whether the script can correctly determine when the program works successfully.
- For the second test, changes were made such that the vqm2blif program would fail. The test script was executed and this helped confirm whether the script successfully notified the user when the vqm2blif program failed during conversion.
- For the the third test, changes were made to the vqm2blif program such that the generated blif netlists would be incorrect and this helped confirm whether the script successfully notified the user when the generated blif netlists did not match the ""golden"" results; thus letting the user know that their changes incorrectly modified the program.
-----------------------------------------------------------------------------------------------------------------------------------
- The re-factored changes to the source code were verified using the test script above on the titan benchmarks.
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- To ensure that the changes did not affect other parts of the source code, the VTR reg tests were all run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",37d2e422e3680be4b5762cb28e2da247efb08e4f,2021-09-22 14:56:38
1847,6,True,13,15,7,12,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure ``RRGraphBuilder`` to shadow the discreted data structure ``rr_graph_storage``.
This PR aims to fully deprecate the direct use of the legacy API ``set_type()`` from ``rr_node`` data structure.

After this PR, the ``set_type`` API is fully deprecated and the ``set_node_type``  from the refactored data structure ``RRGraphBuilder`` is the only way to use.

Checklist:
- [X] Removed the legacy API ``set_type()`` from ``rr_node.cpp`` and ``rr_node.h``
- [X] Added new APIs ``set_node_type`` to data structures ``RRGraphBuilder``, whose comments are Doxygen compatible
- [X] Replaced all the use of ``set_type()`` in builder functions by ``set_node_type()``


#### Related Issue
<!--- Pull requests should be related to open issues -->
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805 

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

After the previous PR #1837 , we have accomplished the refactoring effort on ``RRSpatialLookup``.
We now continue the refactoring effort with a focus on shadowing the ``rr_graph_storage`` APIs in ``RRGraphBuilder`` data structure.
This is the 1st PR in the effort, which reworks the ``set_node_type()`` API

Here is a list about the APIs we will rework:
- set_node_type()
- set_node_ptc_num()
- set_node_pin_num()
- set_node_track_num()
- set_node_class_num()
- set_node_coordinates()
- set_node_cost_index()
- set_node_rc_index()
- set_node_capacity()
- set_node_direction()
- add_node_side()
- reserve_nodes()
- resize_nodes()
- add_node()
- reserve_edges()
- emplace_back_edges()
- alloc_and_load_edges()
- count_rr_switches()
- remap_rr_node_switch_indices()
- make_edges_as_rr_switch_ids()
- partition_edges()
- init_fan_in()

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c43760182f98f84725ffc1ca0ecb57a3cebbf453,2021-10-07 18:23:50
1845,6,True,224,80,10,9,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Update libezgl subtree to the latest version. The latest version adds some bug fixes and functionality (scaling and justification options), and most importantly, uses the left mouse button for panning instead of the middle mouse button.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Panning with the left mouse button is easier than the middle button with touchpads. It is also more common. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The graphics are tested using the -disp on option. The update does not require any modifications to the VTR code.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d1503cbdaaf0f2d5dc0eeaf1226f591287e38ba1,2021-09-20 18:22:46
1844,13,True,1556,70,36,12,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR provides the VTR flow with scripts to run Yosys as the synthesizer.
The Yosys synthesis script is mostly inspired by what Eddie Hung proposed for [VTR-to-Bitstream](https://github.com/eddiehung/eddiehung.github.io/releases/tag/vtb_v2.1). However, some changes like removing the ABC stage from inside of the Yosys and adding new designs to perform depth splitting for single_port_ram and dual_port_ram are added, and updating the yosys_models with recent Yosys changes have been applied.

## Comparison: 
| Yosys_vs_Odin-II | Yosys+Odin-II_vs_Odin-II |
|---|---|
| [VTR_Yosys_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323505/VTR_Yosys_vs_Odin.xlsx) | [VTR_Yosys+Odin_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323464/VTR_Yosys%2BOdin_vs_Odin.xlsx) |
| [Micro_Yosys_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323526/Micro_Yosys_vs_Odin.xlsx) | [Micro_Yosys+Odin_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323543/Micro_Yosys%2BOdin_vs_Odin.xlsx) |
| [FIR_Yosys_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323553/FIR_Yosys_vs_Odin.xlsx) | [FIR_Yosys+Odin_vs_Odin.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7323561/FIR_Yosys%2BOdin_vs_Odin.xlsx) |

## Steps to run VTR flow with the Yosys front-end
```bash
% Compile the VTR project with ""-DWITH_YOSYS=ON"" flag
$(VTR_ROOT) > make CMAKE_PARAMS=""-DWITH_YOSYS=ON""
$(VTR_ROOT) > cd vtr_flow/scripts
$(VTR_ROOT) > ./run_vtr_flow.py  $(PATH_TO_CIRCUIT) $(PATH_TO_ARCH) -start yosys
```
-----------------
#### Related
 Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Complimentary changes to PR #1798 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",541b74aa12a6bd91970d813d8668b63313e540c7,2021-10-17 14:42:29
1843,10,True,173,173,28,14,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_cost_index()` throughout VTR. Every time `device_ctx.rr_nodes[index].cost_index()` was called has been replaced with `rr_graph.cost_index(RRNodeId(index))`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7137545/cost_index.xlsx)

Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|vtr_flow_elapsed_time	|1|	1.013103428|
|odin_synth_time	|1|	1.004124928|
|abc_synth_time	|1|	1.009521229|
|max_vpr_mem	|1|	0.999794275|
|pack_time	|1|	0.984221145|
|place_time	|1|	1.004760669|
|min_chan_width_route_time	|1|	1.01720273|
|crit_path_route_time	|1|	1.019740612|




#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",e1058cb733e019c1c8e5d9406e823d9aa69ee934,2021-09-29 13:51:55
1842,5,True,21,4,4,2,"<!--- Provide a general summary of your changes in the Title above -->
Added new information to the VTRUTIL API documentation. The updates improved the documentation clarity.

#### Description
<!--- Describe your changes in detail -->
- First update was making it clear that VTR_LOG_ERROR does not terminate the program
- Second update was adding an example on how vtr::VtrError is used, and also indicated that it can be used to terminate the program.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
- These changes were made to help improve the VTR documentation.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- After the changes were made, the documentation was built and the changes were verified visually. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",46fa2df8897216e7fbf12907004a486a88551131,2021-09-14 01:06:20
1841,69,True,1846,1729,35,12,"During initial placement, all macros were placed before all blocks. On this pull request, that flow was changed. Now, all blocks (whether part of a macro or not) are placed in the order that they were sorted in - blocks are sorted from most difficult to place to least difficult to place. 
Also, initial placement no longer uses the free_locations and legal_pos data structures to find potential locations for the blocks. Instead, it now uses the compressed grids to search for potential locations for each block. It tries up to a maximum number of randomly-chosen locations from within the block's floorplan region (the floorplan region is the whole chip if the block is not constrained) and after that turns to exhaustive placement if the block still has not been placed. 

#### Related Issue
Related to adding placement constraints to vpr #932 
",4f071140942c5710a6b44f5ee9c41b4d9e69fc29,2021-10-12 18:46:57
1840,1,True,44,7,1,2,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Addition of symbiflow benchmarks description

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1829

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Documentation enhancement

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",47dfd544d2a0f3cc43c51681dbd2154c1828ade0,2021-09-13 23:47:01
1838,1,True,2,2,1,2,"The change in this pull request is the same as PR #1827. Added the change to a new branch because I wasn't able to checkout the other remote branch as it was on a fork off of the main remote repo verilog-to-routing/vtr-verilog-to-routing.

The original change was to make sure the runner looks at the argument track_memory_usage to see whether memory tracking should be turned on or off, instead of just always making it on.
An additional change was made that was requested in a comment on #1827 - the default value of track_memory_usage was set to ""True"" so that track_memory_usage is always on unless the argument specifies that it should be off.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


",996bb1af84c07d8aaa02e8cdb8afb8b9dff03397,2021-09-28 20:45:02
1837,18,True,138,74,4,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This is a follow-up pull request to address the comments in #1828 
It also addressed the issue #1834 

Checklist:
- [x] Add ``RRGraph``-related API to documentation
- [x] Adapt the code comments in ``rr_graph_builder.h`` and ``rr_spatial_lookup.h"" to be doxgen compatible. 
- [ ] Remove the ``RRSpatialLookup()`` constructor

**Note: the code comments in ``rr_graph_view.h`` is untouched to avoid merging conflicts as @ethanroj23 is working on it.

#### Related Issue
<!--- Pull requests should be related to open issues -->
This pull request is part of the refactoring effort of routing resource graph #1828 
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Along with refactoring, RRGraph APIs are being developed with enriched comments. It is time to build the documentation for the APIs.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The documentation changes can be previewed at the readthedocs in the pull request checks.

Screenshots taken from the readthedocs:

![image](https://user-images.githubusercontent.com/11499826/131591102-08ae2c06-701d-4fd6-8fd6-34c3d074652c.png)

![image](https://user-images.githubusercontent.com/11499826/131591126-442fc1af-ff3c-4826-9551-92fd991852f3.png)



#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e7d22558c100328db68b6f8da70e7fe0bbe3a846,2021-09-03 20:37:51
1836,7,True,63,27,4,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This is the first of multiple PRs that are working towards allowing VPR to model different horizontal and vertical channels. The implementation is planned to take a ground-up approach by starting with augmenting read_xml_arch_file.cpp to be able to handle this specification (this PR) and gradually changing the functions inside rr_graph.cpp & rr_graph2.cpp to get full functionality. 

NOTE: I changed the input parameters for the functions in rr_graph2.cpp to 1) Completely deprecate e_seg_details_type 2) Add more appropriate variable names for future PRs. (This doesn't change any functionality and was intended) 

#### Motivation and Context
To allow the modelling of different horizontal and vertical channels. 
#### How Has This Been Tested?
I modified took `arch/timing/k6_N10_mem32K_40nm.xml` and added the `axis=x/y` option to it's segment(s). I then ran `vtr_reg_basic/basic_timing` with the aforementioned architecture. This did not change any routing metrics and the only change was was in various run-time metrics due to machine noise, which was expected. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

#### QoR Comparisons:
[results_diff_x_y.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7117236/results_diff_x_y.xlsx)
 ",d898276624015cae01582a8a685dd472fa60b441,2021-09-08 04:58:09
1835,51,False,1801,698,17,2,"Documents the new manual moves in placement feature.

",79e08701038df2a4a017376fc4f630c6b7eee724,
1828,3,True,177,182,10,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to fully deprecate the direct use of the legacy data structure ``rr_node_indices`` in builder as well as client functions.

After this PR, the ``rr_node_indices`` data structure is fully shadowed and encapsulated in the refactored data structure ``RRGraphBuilder``.

**This is the first milestone achieved in the refactoring effort on routing resource graph data structures.**

Checklist:
- [X] Removed the legacy data structure ``rr_node_indices`` from ``DeviceContext``
- [X] Reworked the function ``verify_rr_node_indices()`` to use ``RRGraphBuilder``  rather than ``rr_node_indices``
- [X] Added new APIs ``clear()`` to data structures ``RRGraphBuilder`` and ``RRSpatialLookup`` to reset the data storage; As a result, the ``free_rr_graph()`` is reworked to use the new API.
- [X] Added a new API ``reorder()`` to ``RRSpatialLookup`` to support graph reordering. As a result, the reordering algorithm is reworked to use the new API. 

*TODO: May consider to implement the API  ``reorder()`` in ``RRGraphBuilder`` so that the current reordering function can be fully internal.*

  

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This pull request is a follow-up PR on the routing resource graph refactoring effort #1805 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
After the previous PR #1805  , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices``:

./route/rr_graph2.cpp
./route/rr_graph2.h
./base/vpr_context.h

This PR will remove the use in
 ./route/rr_graph.cpp
 ./route/rr_graph2.cpp
 ./base/vpr_context.h

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a5217eca35e93e17bb5d050e49cfd3cdff3b8473,2021-08-27 21:43:10
1827,1,False,1,1,1,4,"#### Expected Behaviour
the run_vtr_flow.py get a parameter track_memory_usage and it decides whether to track memory.

#### Current Behaviour
this parameter has not be inputed in vtr command

#### Possible Solution
input into vtr.CommandRunner

#### Steps to Reproduce
<!--- Provide an unambiguous set of steps to reproduce this bug. -->
<!--- Include the exact command line arguments and source files -->
<!-- (e.g. architecture file, netlist) to reproduce, if relevant. -->
1. run run_vtr_flow.py --track_memory_usage false


",13931ec2487367ba3b3dd2075d769f2937593dcf,
1821,1,True,2,2,1,1,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
specifying the `common_task_prefix` variable type while initializing it

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
fix CI error for python-format

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",66f547892f9065c6911f1e91f97350a17cf1d2ce,2021-08-12 17:18:45
1820,3,True,52,52,4,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Currently, some routing stats are not getting parsed out of vpr.out properly. This PR fixes the regex expressions in [vpr.route_fixed_chan_width.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vtr_flow/parse/parse_config/common/vpr.route_fixed_chan_width.txt)  and updates golden_results for all titan tests since they use a fixed routing channel width. 
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
Bug fix :)

#### How Has This Been Tested?
The new golden_results have been generated locally on wintermute. Currently, golden_results for titan tests have -1 for total_connections_routed, total_heap_pushes, total_heap_pops, and total_connections_routed. This has been fixed. 
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",223e8b607b3653e44770c1ce6c6186e02bfebb30,2021-08-13 00:08:20
1819,13,True,546,472,31,5,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_xlow()`,  `RRGraphView::node_xhigh()`, `RRGraphView::node_ylow()` and `RRGraphView::node_yhigh()` throughout VTR. Every time `device_ctx.rr_nodes[index].xlow()` was called has been replaced with `rr_graph.node_xlow(RRNodeId(index))`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at  `$ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7077360/node_xlow_comparison.xlsx)

Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|vtr_flow_elapsed_time	|1|	0.996933617|
|odin_synth_time	|1|	1.014076279|
|abc_synth_time	|1|	0.992281017|
|max_vpr_mem	|1|	1.000259087|
|pack_time	|1|	0.992229957|
|place_time	|1|	0.98888593|
|min_chan_width_route_time	|1|	0.99801215|
|crit_path_route_time	|1|	0.995672431|

## Uses of xlow, xhigh, ylow, yhigh

As there may be cases where new API functions (such as `node_length()`) could be implemented, I have included a list of calls to xlow, xhigh, ylow, yhigh and what the purpose of each call was.

Of the functions listed here, `node_length`, `node_is_initialized`, and `nodes_are_adjacent` have all been implemented in this PR.

| Function | Use Scenario | One Usage (Location) | Count |
| --       | --           | --       | -- |
| xlow | retrieve physical tile from device_ctx.grid | test_fasm.cpp:193 | 16 |
| xlow | Obtain length of wire | stats.cpp:313 | 3 |
| xlow | Determine switchpoint | draw.cpp:1475 | 1 |
| xlow | Draw from one edge to the other | draw.cpp:1934 | 1 |
| xlow | Create bounding box | draw.cpp:2083 | 1 |
| xlow | Check if nodes are adjacent | check_route.cpp:481 | 1 |
| xlow | Check if node is initialized | check_route.cpp:64 | 3 |
| xlow | Include x value in console output | check_route.cpp:258 | 5 |
| xlow | Create a serial num for the wire  x value in console output | check_route.cpp:198 | 3 |
| xlow | Count cblocks | rr_graph_area.cpp:229 | 3 |
| xlow | Return the segment number (distance along the channel) of the connection box from from_rr_type (CHANX or CHANY) to to_node (IPIN) | rr_graph_util.cpp:21 | 1 |
| xlow | Check direction going from one node to another| rr_graph_util.cpp:45 | 1 |
| xlow | Write Coordinates | VprTimingGraphResolver.cpp:345 | 1 |




#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",93f6147d8ab0924588143f961911795823a86e82,2021-09-08 17:17:40
1818,6,True,12,1,4,6,"#### Description
When sanitizers are turned on, some known but harmless errors from the tbb library come up while running vpr. On this pull request, the tbb library was added to the existing leak sanitizer suppression file as well as a new address sanitizer suppression file to suppress those known errors.

The suppressions are currently working for the leak sanitizer errors. However, some errors from the address sanitizers are still showing in the vpr log files when running with sanitizers.
",706bce7bb15bda6e85e048dedffecfd805a8e517,2021-08-31 18:35:55
1817,15,True,328,68,6,12,"#### Description
During initial placement, the blocks are sorted according to how difficult they are to place according to three criteria - whether they are part of a macro, the floorplan constraints they have, and the number of equivalent tiles they have. Based on these criteria, the blocks are placed in order from most difficult to place to least difficult to place.

In this pull request, the sorting of the blocks was made more robust in the following ways:

1. The exact number of compatible grid tiles covered by each floorplan region is calculated so that the blocks constrained to regions with less tiles can be placed first.

2. The macros are also placed in a sorted order based on the three criteria above. Previously, they were just sorted by the number of equivalent tiles.

#### Related Issue
Part of adding floorplan  placement constraints to VPR #932 

#### Motivation and Context
In some cases, the placer would get stuck during initial placement, because the blocks that had tight floorplan constraints would be impossible to place when all of their valid locations had already been taken up by previous blocks.


",e073a4dfe93f5a34918cc9377ea08516f5aeaf72,2021-08-31 18:37:50
1816,11,True,65,67,20,6,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_R()`,  `RRGraphView::node_C()` and `RRGraphView::node_rc_index()` throughout VTR. Every time `device_ctx.rr_nodes[index].R()` was called has been replaced with `rr_graph.node_R(RRNodeId(index))`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6917797/node_r_c.xlsx). AFter the changes to connection_router.h, results are [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6969333/node_r_c_2.xlsx)





Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR| After adding `RRGraphView*` to `connection_router.h` |
|---|---|---|---|
|vtr_flow_elapsed_time	|1|	0.994093231|1.006881|
|odin_synth_time	|1|	1.028283499|1.01006|
|abc_synth_time	|1|	1.00525759|1.018728|
|max_vpr_mem	|1|	0.999672195|0.999557|
|pack_time	|1|	1.016018952|0.994262|
|place_time	|1|	0.996246966|0.99846|
|min_chan_width_route_time	|1|	0.995872138|1.000367|
|crit_path_route_time	|1|	1.001645744|1.009915|


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",849b61851bfc8420def34ba7c4c96acccb8e0000,2021-08-26 13:11:14
1814,1,True,2,2,1,2,"I was looking through the VPR router to compare it to nextpnr's one and noticed a small issue in one of the assertions, base cost was being multiplied twice instead of by the accumulated historical cost. This caused an assertion failure when debug assertions are enabled.",1515a3bfc27d3ce93616c92219f38a1182c43086,2021-09-02 16:09:25
1813,2,True,3,37,2,11,"As discussed in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1804#discussion_r672426293, maybe the common CI script does not need to be sourced in the `dev/check-format*` scripts.

/cc @mithro ",9743ff2f85a862f438dd6715e89934f4db171bcf,2021-09-29 23:33:03
1812,1,True,2620,8,12,0,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
small typos in mixing optimization config files for Odin-II

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
To remove the error message ""arch not found"" in Odin-II verification script

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8d5eda91927039071aff956bd47fdc6ed98669dc,2021-08-12 22:12:33
1811,61,False,918,345,65,0,"#### Description
Work in progress follow up to PR #1786 that added the ability for the user to specify detailed routing for designs with different horizontal and vertical channel widths. I modified the Fc section of the build_rr_graph function and the alloc_and_load_actual_fc function which determines the actual Fc value for a particular pin. Added code in the alloc_and_load_actual_fc function that uses pin location to provide the correct Fc value using the channel width and Fc percentages specified by the user. However, the code is currently split into two sections and uses the channel widths to determine which part to use. I am beginning to work on changing this so that only one set of code is used for both cases. In addition, more documentation will need to be added and the code will need to be reviewed to determine where it needs to be improved, so there is still a decent amount of work that needs to be done.

#### Related Issue
#1768 


#### Motivation and Context
Due to the changes in PR #1786, a user could now specify detailed routing for designs with different horizontal and vertical channel widths. However, due to assumptions in rr_graph that one channel would be used for the entire design, the Fc values were being computed incorrectly for the smaller of the two channel widths. In order to correct this, the rr_graph builder needed to be modified to determine which channel a pin was connecting to and calculate the correct Fc value for that pin.

#### How Has This Been Tested?
As mentioned above, since the code is currently split into two sections and uses the channel widths to determine which part to use, the code currently passes all tests. I have tested the new pieces with various different designs that had different and vertical channel widths, and the results seem to be correct so far. However, as additional changes are made to this code such as the unification process, it might not pass the tests and need to be modified.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",adf3df245fc4bd4c3b08eb3aa29946b12b58f4d5,
1810,1,True,9,1,1,0,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The PR is to show ""Expected Failure"" status in Odin verification script


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue #1808 
PR #1807 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3206d439ba961a48aa29e1f8b701f63045ff8eeb,2021-07-29 23:37:28
1809,3,True,18,0,1,3,"Described valgrind and the sanitizer suppression files in the developer debugging aids documentation.

#### Related Issue
We didn't document these, so many people didn't know how to run them properly outside the CI system.


#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ x] My change requires a change to the documentation
- [ x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5013c76dfee2b577b0948e3e319bcb55ef2d9fb0,2021-07-29 23:36:46
1807,12,True,97,51,25,10,"#### Description
This is a pull request to address #1806. [regression_mcnc](https://github.com/verilog-to-routing/vtr-verilog-to-routing/tree/master/vtr_flow/tasks/regression_tests/vtr_reg_basic/regression_mcnc/config) task and [vtr_reg_multiclock ](https://github.com/verilog-to-routing/vtr-verilog-to-routing/tree/master/vtr_flow/tasks/regression_tests/vtr_reg_multiclock) suite have been added to CI. 

#### Related Issue
#1806 

#### How Has This Been Tested?
```odin_reg_basic``` regression test has been tested to run properly since ```vtr:vtr_reg_multiclock``` is one of the suites it runs. 
```vtr_reg_multiclock``` suite has been tested on its own to make sure it goes through the flow. 
```regression_mcnc```suite has been tested on its own to make it goes through the flow. 


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",070651bbd8243cff02f4e392286b4e1bb13bb6cf,2021-07-30 15:36:54
1805,18,True,221,416,16,17,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating routing resource graph builder functions, where we use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to eliminate the ``get_rr_node_indices()`` functions in the RRGraph builders, as one step further in deprecating the legacy data structure.

After this PR, the ``rr_node_indices`` data structure is only used in the ``verify_rr_node_indices()`` function: 

https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/d3449e8744e447bd8d27df1c41ba9b6435918ddc/vpr/src/route/rr_graph2.cpp#L1153-L1156

The ``verify_rr_node_indices()`` may be an API of the ``RRGraphBuilder`` data structure, since it is a validator.

Checklist:

- [X] Added comments to API ``add_nodes_at_all_locs()`` as requested in PR #1800 
- [x] Added a new API ``find_grid_nodes_at_all_sides()`` to ``RRSpatialLookup`` and remove API ``find_sink_nodes()`` 
- [x] Deprecate the ``get_rr_node_indices()`` functions
- [X] Remove the ``t_opin_connection_scratchpad`` and use local variables instead
- [X] Improve memory efficiency in ``RRSpatialLookup`` APIs (A lot of rework still needed)
- [X] Remove the use of scratchpad in timing-driver placer lookup builder to save memory.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This pull request is a follow-up PR on the routing resource graph refactoring effort https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1801

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

After the previous PR #1801  , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices`` (in total there are 143 lines related):
- ./route/router_lookahead_map_utils.cpp
- ./route/rr_graph.cpp
- ./route/rr_graph2.cpp
- ./route/rr_graph2.h

This PR will remove the use in 
-  [X] ./route/router_lookahead_map_utils.cpp
-  [X] ./route/rr_graph.cpp



#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",d7a9ea49bd79a144440ed1e7b362e3f7fc300bb5,2021-08-15 18:22:58
1804,3,True,42,61,9,0,"#### Description

This PR moves scripts from `.github/gha` and `.github/travis` into `.github/scripts`. Scripts that use those resources are updated accordingly. BTW, the workflow YAML is slightly simplified.

#### Related Issue

Close #1755

#### Motivation and Context

Travis is non used anymore.

#### How Has This Been Tested?

CI is still all green.

#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed

#### Additional context

There are some remaining references to travis:

```
# grep -lr ./ -e ""travis""
./abc/README.md
./libs/EXTERNAL/capnproto/README.md
./libs/EXTERNAL/libtatum/README.md
```

However, I assume that those are vendores dependencies, so they handle CI on their own.",54402b0ef2bebbf43929cc13ec05066d2dff530a,2021-07-30 15:37:26
1802,18,True,344,102,11,22,"#### Description
In order to place blocks in user-specified floorplan regions, the packing stage of vpr should pack primitives together when they are part of the same floorplan region. This is especially important if the specified floorplan regions are small, since it will be harder to make sure all the necessary primitives are placed within the region if they are packed into many different clustered blocks.

To achieve this goal during packing, attraction groups were introduced to the clustering process. The attraction groups are made up of atoms that are part of the same partition. During clustering, the molecule gain is increased for molecules that have the same attraction group as the cluster (if the cluster has an associated attraction group). This helps ensure that primitives in the same attraction group get packed together.

#### Related Issue
This pull request is part of the work related to issue #932.




",07127de99bcdc41ade184ec897b54c20a592beee,2021-07-30 21:38:26
1801,7,True,148,185,11,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating RRGraph clock builder functions, where we use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to eliminate the use of ``rr_node_indices`` in the RRGraph clock builder, as one step further in deprecating the legacy data structure.

Checklist:

- [x] Added a new API ``find_sink_nodes()`` to ``RRSpatialLookup``
- [x] Eliminate the use of ``rr_node_indices`` for RRGraph Clock Builder
- [x] Delete obsoleted functions in ``rr_graph2.cpp`` which are replaced by built-in APIs in ``RRSpatialLookup``

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This pull request is a follow-up PR on the routing resource graph refactoring effort https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1779

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

After the previous PR #1779  , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices`` (in total there are 143 lines related):
- ./route/clock_connection_builders.cpp
- ./route/clock_network_builders.cpp
- ./route/clock_network_builders.h
- ./route/router_lookahead_map_utils.cpp
- ./route/rr_graph.cpp
- ./route/rr_graph2.cpp
- ./route/rr_graph2.h
- ./route/rr_graph_clock.cpp
- ./route/rr_graph_clock.h
- ./route/rr_graph_reader.cpp
- ./route/rr_graph_util.cpp
- ./route/rr_graph_uxsdcxx_serializer.h
- ./route/rr_graph_writer.cpp

This PR will remove the use in 
- [X] ./route/clock_connection_builders.cpp
- [X] ./route/clock_network_builders.cpp
- [X] ./route/clock_network_builders.h
- [X] ./route/rr_graph_clock.cpp
- [X] ./route/rr_graph_clock.h

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",ab9dc4e9089c8b202a1c85c695b1c07a64750a4a,2021-07-18 18:33:43
1800,5,True,54,136,5,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating RRGraph reader and writer functions, where we use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to eliminate the use of ``rr_node_indices`` in the RRGraph reader and writer, as one step further in deprecating the legacy data structure.

Checklist:

- [x] Eliminate the use of ``rr_node_indices`` for RRGraph reader
- [x] Eliminate the use of ``rr_node_indices`` for RRGraph writer

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This pull request is a follow-up PR on the routing resource graph refactoring effort https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1779

After the previous PR #1779  , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices`` (in total there are 143 lines related):
- ./route/clock_connection_builders.cpp
- ./route/clock_network_builders.cpp
- ./route/clock_network_builders.h
- ./route/router_lookahead_map_utils.cpp
- ./route/rr_graph.cpp
- ./route/rr_graph2.cpp
- ./route/rr_graph2.h
- ./route/rr_graph_clock.cpp
- ./route/rr_graph_clock.h
- ./route/rr_graph_reader.cpp
- ./route/rr_graph_util.cpp
- ./route/rr_graph_uxsdcxx_serializer.h
- ./route/rr_graph_writer.cpp

This PR will remove the use in 
- [X] ./route/rr_graph_writer.cpp
- [X] ./route/rr_graph_uxsdcxx_serializer.h
- [X] ./route/rr_graph_reader.cpp

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Considering this is all about refactoring, this PR does not need to create new tests. Expect all the existing tests to pass.


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",0845c14da86fb2e6b101e1e661881381621e34f6,2021-07-18 18:37:07
1799,8,True,36,35,8,7,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_fan_in()` throughout VTR. Every time `device_ctx.rr_nodes[index].fan_in()` was called has been replaced with `rr_graph.node_direction(RRNodeId(index))`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6810934/node_fan_in.xlsx)





Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR|
|---|---|---|
|vtr_flow_elapsed_time	|1|	0.998931189|
|odin_synth_time	|1|	0.989230519|
|abc_synth_time	|1|	0.994648961|
|max_vpr_mem	|1|	0.99915845|
|pack_time	|1|	0.997989839|
|place_time	|1|	0.995451755|
|min_chan_width_route_time	|1|1.001024542|
|crit_path_route_time	|1|	0.999048907|


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",66e4f83538c64771503655c8ec6f1bb7798d2f59,2021-07-30 15:36:21
1798,312,True,514942,10522,4199,36,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the functionality of using Odin's technology mapping for a Yosys generated BLIF file in coarse grain format. Basically, the feature is added according to the following flow:
1. **Yosys**: A hardware design will be given to Yosys. Using the commands mentioned in [synth.tcl](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/d4fabdfd764a44379a9358cbb5edfd9cca5d9e7c/ODIN_II/regression_test/tools/synth.tcl) script, Yosys generates a coarsen (not exploded into low-level logic) BLIF file. Technically, the generated BLIF file should have Yosys logic cells. such as $and, $logic_and, $add, $sub, $div, $pow, $mul, $mem and etc.
2. **BLIF Reader**: Odin-II is fed by the generated BLIF file as the main design. At this point, other options like architecture files can also be given to Odin-II as before.
3. **BLIF Elaboration**: The BLIF file will pass to the BLIF Elaboration phase, which basically, makes the netlist compatible with Odin-II's partial mapping. Worth noting to mention that some Yosys logic cells such as simple DFF or bitwise operations will be passed to the partial mapping phase intact. The first critical stage of the Yosys+Odin happens in the BLIF Elaboration phase since some logic cells like $pow, $div or $mul will be exploded into smaller components such as adders or shifters. Moreover, the block memories are being detected at this point; however, the hard-block mapping or memory-related optimization process will happen in the mid-phase between BLIF Elaboration and Partial mapping. The third phase for other logic cells, like logical nodes, will only include input/output ports reordering to make them compatible with the partial mapping structure.

   3.1.  **Optimization**: This phase includes some optimization and decision-making concerning Odin-II's logic cells mapping and the given architecture. For instance, memory blocks generated by Yosys will be split into smaller pieces. Basically, a memory block generated by Yosys, excluding hard blocks such as SPRAM or DPRAM, is a whole memory cell that includes all reading and writing ports. As a result, not only this memory cell needs to be split into memory nodes compatible with Odin-II's partial mapping and available hard blocks, but also a few potential optimizations such as memory size or port size reductions are available at this point. Generally, Odin-II categorizes Yosys memory blocks in two: Read-Only Memory (ROM) and Block Memory (BRAM). ROMs will be mapped to SPRAM or DPRAM based on the number of reading ports. BRAMs, are mostly mapped to DPRAMs. Only if the read and the write address are equal, the BRAM will be mapped to SPRAM. Another potential optimization for memories here is to check the memory depth and see if it can fit into LUTRAMs. Some thresholds have been set based on the 6-LUTs specifications in Stratix IV and later; however, the LUTRAM inference in this tool is not one of those complicated ones. In addition to memories, adders will be modified at this stage if available adder hard blocks exist in the architecture file. Indeed, an adder node will be split into a chain of single-bit adders. Modifications like adding carry ports happen here as well.  
  
4. **Partial mapping**: The fourth phase slightly changed from what partial mapping was in Odin-II previously. In this phase, Odin-II would partially map the netlist to low-level logic. The second essential phase is happening here since the given circuit to Yosys would utilize the available hard blocks in the VTR flow. These hard blocks are comprising of the available hard blocks in the given architecture to the Odin-II. Worth noting here that the primitive modules specified in the vtr_flow directory are given to Yosys as a library. That means users can also use VTR primitive components such as `single_port_ram`, `dual_port_ram` and `adder` as before. (**Note**: the infrastructure for this feature is completely implemented in Yosys+Odin. However, there is an issue with Yosys in which it does not generate these hard blocks with the user-defined size in the design file. The issue is filed in the Yosys repository [link](https://github.com/YosysHQ/yosys/issues/2827). The temporary solution for this issue is to paste the definition of these modules in the given design from vtr_flow/primitive.v).

![Yosys+ODin](https://user-images.githubusercontent.com/54898479/128049823-da5f191b-c7b6-4c26-a8d7-3e58a3a93914.png)


**Some notes worth mentioning**:
- New supported designs in Odin-II:
    * Constant multiplication using shift operation.
    * Division and Modulo (constant and variable)
    * Exponentiation
    * Yosys synthesizable logic cells
- In this PR, the structure of Input and Output for Odin-II has changed as follow:
    * A _GenericIO_ class, including _GenericReaders_ and _GenericWriters_ has been added.
    * Each _GenericReader_ has the `_read` method, which is implemented based on the language structure. Currently, Odin-II only supports Verilog and BLIF as the input languages. 
    * Similarly, each _GenericWriter_ has the `_write` method to write into output file based on the specified language.
    * As a result of this new structure, the process of adding a new language to Odin-II would be much easier.
- A new `getline` method has been added to `libvtrutil`:
    * Yosys use to generates BLIF components in a single line, while Odin-II does vice versa.
    * As a result, Yosys BLIF reading and Odin-II BLIF reading differ from each other in terms of reading BLIF components.
    * To overcome this issue, a new method called `getline` is defined in libvtrutil.
    * Basically, this new method uses the C getdelim function to detects lines.
    * The `getline` method is compatible with Windows and Linux new lines
    * Also, it removes the comment part of an input BLIF line like vtr::fgets.
    * Odin-II uses a method called ""getbline"" to read a complete BLIF line based on the BLIF type.
- Some benchmarks carried syntax errors. To avoid Yosys failure, they have been modified and updated in this PR. #1830 
- For coarse-grain netlist, an option `--fflegalize` is added to make all DFFs rising edge by adding inverters.

**Instruction to use:**
1. Specifying the elaborator in Odin-II command, then Yosys will be run inside Odin-II:
``` 
./odin_II 
             -V circuit_design 
             -a architecturee_file
             -o ODIN_OUTPUT_BLIF
             --elaborator yosys  
             --fflegalize
             ...
```
  The coarse-grain BLIF file and Yosys output log will be created in the same directory where the Odin-II output BLIF file is going to be placed

2. Generate the BLIF file and then pass it to Odin-II
    2.1. Generating Yosys BLIF file using `run_yosys.sh` script, located in ""ODIN_II/regression_test/tools/"".
    * Single test file:
        `./run_yosys -V VERILOG_FILE`
    * A task including multiple test files or a task list(suite)
        `./run_yosys -t TASK.YCFG or TASKLIST`
     task.ycfg is like ordinary VTR task files; however, the user only needs to specify `circuit_dir` and `circuit_list_add`. In the end, this script creates a new directory with the task name at ""/ODIN_II/regression_tests/benchmark/_BLIF/XXX"" and puts all generated BLIF inside it. 
     task.ycfg example:
        ```
         ########################
         # run yosys config
        ########################

        # setup the circuits
         circuits_dir=regression_test/benchmark/verilog/micro

         # circuits' name
         circuit_list_add=*.v
        ```
    **Note**: the support for `include_circuits` option is **not** yet implemented in run_yosys.sh script.
    2.2. Odin-II can be fed by Yosys generated BLIF file using the following command:
    ``` 
    ./odin_II 
             -b YOSYS_GENERATED_BLIF 
             -a architecturee_file
             -o ODIN_OUTPUT_BLIF
             --coarsen  --fflegalize
             ...
    ```
**Note**: the other options, such as passing architecture files, Odin-II XML config files, etc., are the same. 

###Changed or New Results
Due to the changes in VTR benchmarks, the golden results for some benchmarks need to be changed. You would find the comparison between the baseline (current VTR master branch) and the modified (recent changes) golden results in the following table:

| Task Name | Comparison File |
|--------------------|-------------------|
| vtr_reg_nightly_test1/power_extended_circuit_list | [nightly_test1_power_extended_circuit_list_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039515/nightly_test1_power_extended_circuit_list_comparison.ods) |
| vtr_reg_nightly_test3/complex_switch | [nightly_test3_complex_switch_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039514/nightly_test3_complex_switch_comparison.ods) |
| vtr_reg_nightly_test3/vtr_reg_qor | [nightly_test3_vtr_reg_qor_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039513/nightly_test3_vtr_reg_qor_comparison.ods) |
| vtr_reg_nightly_test3/vtr_reg_qor_chain | [nightly_test3_vtr_reg_qor_chain_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039511/nightly_test3_vtr_reg_qor_chain_comparison.ods) |
| vtr_reg_nightly_test3/qor_chain_depop | [nightly_test3_qor_chain_depop_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039510/nightly_test3_qor_chain_depop_comparison.ods) |
| vtr_reg_nightly_test3/qor_chain_predictor_off | [nightly_test3_qor_chain_predictor_off_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039507/nightly_test3_qor_chain_predictor_off_comparison.ods) |


Due to the [changes](https://github.com/sdamghan/vtr-verilog-to-routing/commit/0535ef3d06471a8d7c0eed4c3d86cfac9788a80b#diff-471b24eb0a42c4d2dce18745cabf6153d353d4cfa2c6c6b107ecb13bfe6b831e) in the ODIN_II/multiplier.cpp, the golden results for ""nightly1/arithmetic_tasks/mult_const"" benchmarks have changed. The comparison between the baseline (current VTR master branch) and the modified (recent changes) golden results in the following table:

| Task Name | Comparison File |
|--------------------|-------------------|
| vtr_reg_nightly_test1/arithmetic_tasks/mult_const | [nightly_test1_arithmetic_mult_const_comparison.ods](https://github.com/sdamghan/vtr-verilog-to-routing/files/7039521/nightly_test1_arithmetic_mult_const_comparison.ods) |

Also, the comparison between the Yosys+Odin-II and Odin-II golden results for VTR benchmarks, based on the vtr_qor_reg_chain configuration is as follows:
| Task Name | Comparison File |
|--------------------|-------------------|
| vtr_reg_yosys_odin/vtr_benchmarks | [Yosys+Odin_vs_Odin_VTR_reg_qor_chain.ods](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7047656/Yosys%2BOdin_vs_Odin_VTR_reg_qor_chain.ods) |
| vtr_reg_yosys_odin/vtr_benchmarks_with_50%_mult_reduced | [Yosys+Odin_vs_Odin_VTR_reg_qor_chain_mult50.ods](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7047666/Yosys%2BOdin_vs_Odin_VTR_reg_qor_chain_mult50.ods) |

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1830 
#1831

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Aim to use the Odin-II partial mapping stage, which performs hard logic inference and hard/soft trade-off decisions for such a tool as Yosys. The goal is to automate the decision between what to place in hard blocks or explode into gates. The current Yosys flow forces the user to decide the discrete circuit implementation manually. The approach taken by the synthesizer is to map all discrete components into an available hard block or to explode them when not available, not caring for the device capacity. Our goal is to improve device utilization and simplify the flow by automating this decision with architecture awareness. 


#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Odin-II and VTR benchmarks

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",3e581f71f82c85c13c5b5a9d715a1e274f9a42d9,2021-09-07 17:24:41
1796,3,True,42,28,2,4,"#### Description
Some documentation changes for the power estimation flow.

1. Fixing the heading hierarchy
2. Changing function name from power_calc_primitive to power_usage_primitive
3. Adding some clarity in the flow steps and what's the name of the output file.
4. Adding example command of run_vtr_flow with -power enabled
5. Adding that the power model doesn't model single-bit adders in logic blocks.

Also, a fix that was identified here: https://groups.google.com/g/vtr-users/c/7IzU83_amKs

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1797

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",26259af847e59da500920de94b3aeeceb4102187,2021-07-16 00:37:28
1795,51,True,1804,698,16,14,"<!--- Provide a general summary of your changes in the Title above -->
Implementing manual moves feature which allows a user to specify a move in placement. If the move is legal, blocks are swapped and shown on the architecture. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

- Previously, the manual moves feature was working, but slowing down the placement time by 6x-7x in comparison to the master branch. The increase in placement time was shown both on small and large circuits and generated failures in the vtr_reg_nightly tests for exceeding time and out of range. 
- The placement time is now very similar/equal to the timing of the master branch. The delay was caused by a gtk function that was used to check the status of a toggle button. Since this function was called in a loop, the increase in time was significant. (As Prof. Betz suggested, the internal workings of the gtk function could have been performing a linear search or something similar that could have slowed down the code). The vtr_reg_nightly_tests passed after this change. 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Optimizing the code to enable merge with master branch. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Once the placement time was corrected, VPR output comparison were done between the master branch and the manual moves branch. This comparison shows the different outputs between the branches when --disp off: _(These results are outdated)_ https://docs.google.com/spreadsheets/d/1PLCIUYsW7kX_kchS87_xRWioD9ZW5pa-36fpH6AoCaE/edit?usp=sharing. 

vtr_reg_nightly1, 2, 3 were ran again and reported:
- vtr_reg_nightly_test1 had 0 QoR failures. 
- vtr_reg_nightly_test2 had 4 QoR failures for being 0.09-0.126 above range from the master branch.
- vtr_reg_nightly_test3 had 1 QoR failure for being 0.02 below range. 
In the weekly meeting, these changes were not considered a problem. 

The VTR and Titan Benchmarks were also ran and the GEOMEAN was calculated. 
[ManualMoves-Master Comparisons.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/7048802/ManualMoves-Master.Comparisons.xlsx)


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",16d4c5b55793e0d50fb5530baba96d08e710c890,2021-09-02 14:58:46
1794,3,False,83,4,5,2,"<!--- Provide a general summary of your changes in the Title above -->
In this draft I added to the type that is made from reading the XML. Also changed the XML reader to accept the new parameter.
#### Description
<!--- Describe your changes in detail -->
Made a new enumeration type to include X wires, Y wires, and wires that go in both directions. Included this in the t_segment_inf data type to store the data in. 
Added code to read in this parameter from an XML document. It is processed at the same time as the other aspects of a given wire segment (just after frequency). Parameter is optional and is default to both X and Y if not specified. Throws an error if an incorrect option is entered

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1769
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change will eventually allow make different wires of different length in only X direction, only Y direction or both. Newer FPGA architectures use this in their design. Additionally this will allow for different frequencies in the different directions.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested locally by running basic and strong tests. Zero fails.
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e775f639e360920a6aa1864b2b19265cd3e888f1,
1793,1,True,0,2,1,6,"~Pins the local nix shell channel to 20.09, a known working version.~
Drop Python 2.7 in the the nix shell

#### Description

There are issues with Python 2.7 deprecations in the latest 21.05 channel, that cause errors
in nix-shell startup. ~I have not investigated further, just want to build VTR :)~

#### Related Issue
N/A

#### Motivation and Context

The described actions in: https://docs.verilogtorouting.org/en/latest/building/building/#using-nix
did not work as expected.

#### How Has This Been Tested?

Local tests using:
```
nix-shell dev/nix/shell.nix
make
```


#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

N/A for the above.
",9ad12216889f2f0e0d4e7518b43a5d4b11948550,2021-08-08 14:15:01
1792,39,False,1256,1364,10,0,"<!--- Provide a general summary of your changes in the Title above -->
Add implementation for simulating sire segments that exist in only the horizontal and/or only the vertical directions. This is more common in newer FPGA designs.
#### Description
<!--- Describe your changes in detail -->
Add an optional parameter to the segment list in the xml file. Read by read_xml_arch_file.cpp we can now specify if we want a wire in X, Y, or both directions. This will also allow for different frequencies in both directions. changes made to types t_segment_info found in physical_types.cpp and t_segment_details in vpr_types.cpp
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1769
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested locally running ./run_reg_test.py vtr_reg_basic vtr_reg_strong.
All tests performed on pushing ran without issue on personal fork.
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b64c06ea07f03d1f08cc52bef2e3768a26dd9278,
1791,10,True,171,168,20,1,"
<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_direction()` and `RRGraphView::node_direction_string()` throughout VTR. Every time `device_ctx.rr_nodes[index].direction()` was called has been replaced with `rr_graph.node_direction(RRNodeId(index))`, in addition to the replacements for `node_direction_string()`. In order to do this, I followed a pattern similar to that in the last PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6729548/node_direction.xlsx)




Only rows that are different are shown.

|	| VTR Before These Changes	|With Changes in this PR|
|--|--|--|
|vtr_flow_elapsed_time	|1	|0.979977348|
|odin_synth_time	|1	|0.930196862|
|abc_synth_time	|1	|0.998563829|
|max_vpr_mem	|1	|0.999830052|
|pack_time	|1	|1.008292914|
|place_time	|1	|0.992582016|
|min_chan_width_route_time	|1	|0.989353431|
|crit_path_route_time	|1	|0.982176651|


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed

",a4d41caa4a4adafc59f68683acbef854f197a9cb,2021-07-12 16:59:05
1789,4,True,212,31,9,5,"#### Description
This PR adds two options:

- post_synth_netlist_unconn_inputs {unconnected, nets, gnd, vcc}
- post_synth_netlist_unconn_outputs {unconnected, nets}

These options can be used to enforce how unconnected ports are treated in Verilog output. They can be tied to vcc, gnd, 1'bX (unconnected) or to a special net named __vpr__unconnXX (XX number is incremented to generate unique net for each port).

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1721

#### Motivation and Context
Previously unconnected input ports were always tied to 1'b0 and output ports were tied to a common net DummyOut which is incorrect.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
These options were tested with **symbiflow-arch-defs**
To reproduce the test, build the vpr end set env variable:
```
make -j `nproc`
export VPR=$PWD/build/vpr/vpr
```
Then, in a different directory, clone and build symbiflow-arch-defs:
```
git clone --recursive git@github.com:antmicro/symbiflow-arch-defs.git -b test-vpr-unconnected-ports
cd symbiflow-arch-defs
make -j `nproc` env
```
Run an example with unconnected ports
```
cd build/quicklogic/qlf_k4n8/tests/design_flow/and2
make -j `nproc` and2_test-umc22-adder_analysis
```
Check out resulting _and2_post_synthesis.v_ file.

You can change **post_synth_netlist_unconn** options in _quicklogic/qlf_k4n8/CMakeLists.txt_ file.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c425978191b922e9d8ba1c855f66c0decb8ae2f0,2022-01-28 08:42:50
1787,5,True,299,20,27,4,"#### Description
This is the second PR for Koios benchmarks. The main changes in this PR are:
1. Moving complex_dsp macro out from benchmark verilog files into a separate include file.
2. Updated regression task files to include this new include file.
3. Added new tests that run these benchmarks without the complex_dsp macro defined.
4. Updated documentation to cleanly describe the usage of these benchmarks (including measuring QoR)

#### Related Issue
This PR contains changes pending from the first PR: https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1753.
This PR also contains changes suggested in the issue: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1782. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a75b7841f60dd883bbc3bc4a70c8db45971f7418,2021-06-25 16:40:40
1786,4,True,85,23,10,2,"#### Description
I modified the init_chan function to prevent odd channel widths from being selected during task and regression test runs. In addition, I modified the binary_search_place_and_route function to pass directionality information to the init_chan function so that bidirectional graphs can still choose odd channel widths. Since I had to remove the VTR fatal error in CheckSetup.cpp to allow detailed routing, I also had to remove a function parameter in the CheckSetup function that was used only in the section that I removed.

#### Related Issue
#1768 

#### Motivation and Context
This change is necessary to create an approximate capture of Xilinx FPGA architectures in the VTR architecture description language, and for any other FPGA architectures that utilize different channel widths in the horizontal and vertical directions. This change allows you to utilize the existing VTR global routing distributions to perform detailed routing on FPGAs with different channel widths in the horizontal and vertical directions. Currently, these distributions can only be used for the global route type.

#### How Has This Been Tested?
I ran several individual vpr runs and tasks to test my changes. In addition, I ran the vtr_reg_basic and vtr_reg_strong regression tests. I am using the latest version of VTR and performed a clean build before running these tests. All of the tests ran successfully and passed the QoR test except for the QoR test for strong_global_nonuniform. This failed with the error message ""x_gaussian_y_uniform.xml/stereovision3.v/common min_chan_width relative value 1.5 outside of range [0.25,1.3] and not equal to golden value: 12.0"" However, I was wondering if it is important to pass this test since it is using the less common global route mode instead of the detailed routing mode? Other than this one issue, the code seems to have no adverse affects on other areas of the code. I would appreciate it if someone could let me know if I should run additional tests or recommend additional modifications to my changes.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5021128e81b1804b83a2ad5f7ed027af55e6b2af,2021-07-30 16:26:57
1785,2,True,220,10,6,5,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

This should fix https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1727",d0fd038955e7bbb176dfb43d6373f84154d52e80,2021-06-24 07:43:52
1784,2,True,4,4,2,1,"<!--- Provide a general summary of your changes in the Title above -->
Fixed documentation errors found within the architecture modelling tutorials section and the architectural reference section.

#### Description
<!--- Describe your changes in detail -->
- Within the Tutorials section
	- Under the Fracturable Multiplier Bus-Based Complete Example
		- When describing the primitives within the DSP slice, number of flip-flops to be instantiated was 64, but should be 72
- Within the Architecture Reference section
	- Under the <row> tag 
		- The optional attributes for spaces between tiles should be incrx not incry 
	- Under the <region> tag
		- The descritpion for incry should be ""An expression specifying the vertical increment between block instantiations
		  within the region."" instead of ""An expression specifying the horizontal increment between block instantiations
		  within the region."" 
	- Under the <equivalent_sites> tag
		- The note for <site> should have ""need"" replaced with ""needed"" 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change fixed errors within the VTR documentation. These changes were necessary as they help create a more clearer documentation for other users

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The documentation was built after the changes and visual confirmation was done to make sure the changes were applied and that there were no build issues with the documentation.

Additionally, the basic and strong tests were done to ensure proper functionality. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",fef2209f6d472d88b07a0ea7e5b43627f8dc495d,2021-06-21 15:21:54
1783,1,True,27,4,1,1,"…web documentation

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds doxygen documentation of atom_netlist and clb_netlist to vpr API web documentation. 
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
issue #1767
",0a967375961cd4c15b173b630988a3fe146f1981,2021-06-21 11:10:33
1780,11,True,62,47,17,2,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_capacity()` throughout VTR. Every time `device_ctx.rr_nodes[index].capacity()` was called has been replaced with `rr_graph.node_capacity(RRNodeId(index))`. In order to do this, I followed a pattern similar to that in the [last](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1742) PR.


### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the RRGraphView API implementation effort.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly_test3/vtr_reg_qor_chain`. Results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6666328/node_capacity.xlsx)




Only rows that are different are shown in the table below.
|  |VTR Before These Changes| With Changes in this PR|
|--|--|--|
|vtr_flow_elapsed_time|	1|	0.989022099|
|odin_synth_time|	1|	1.041313002|
|abc_synth_time|	1|	1.001016736|
|max_vpr_mem|	1|	0.999841509|
|pack_time|	1|	0.998665715|
|place_time|	1|	1.00707815|
|min_chan_width_route_time|	1|	0.968194345|
|crit_path_route_time|	1|	0.969866289|






#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",b3ea4b3a1263a2cb1bb062fc5c0e1e57d5eff994,2021-06-21 17:19:35
1779,10,True,160,70,7,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating client functions of the ``rr_node_indices``, which are ``placer``, ``router`` and post-routing synchronizer.
We use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to eliminate the use of ``rr_node_indices`` in the client functions, as one step further in deprecating the legacy data structure.

Checklist:

- [X] Added a new API ``find_channe_nodes()`` for placer functions
- [X] Added a new API ``find_nodes_at_all_sides()`` for router functions
- [x] Eliminate the use of ``rr_node_indices`` for placer functions 
- [x] Eliminate the use of ``rr_node_indices`` for the router functions
- [x] Eliminate the use of ``rr_node_indices`` for the post-routing packing result synchronization functions

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This pull request is a follow-up PR on the routing resource graph refactoring effort https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1693

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
After the previous PR #1747 , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices`` (in total there are 242 lines related):
- ./base/vpr_context.h
- ./base/vpr_types.h
- ./device/rr_graph_view.h
- ./device/rr_spatial_lookup.cpp
- ./device/rr_spatial_lookup.h
- ./pack/post_routing_pb_pin_fixup.cpp
- ./place/timing_place_lookup.cpp
- ./route/clock_connection_builders.cpp
- ./route/clock_network_builders.cpp
- ./route/clock_network_builders.h
- ./route/route_common.cpp
- ./route/router_lookahead_map.cpp
- ./route/router_lookahead_map_utils.cpp
- ./route/rr_graph.cpp
- ./route/rr_graph2.cpp
- ./route/rr_graph2.h
- ./route/rr_graph_clock.cpp
- ./route/rr_graph_clock.h
- ./route/rr_graph_reader.cpp
- ./route/rr_graph_util.cpp
- ./route/rr_graph_uxsdcxx_serializer.h
- ./route/rr_graph_writer.cpp

This PR will remove the use in 
- [X] ./route/route_common.cpp
- [X] ./pack/post_routing_pb_pin_fixup.cpp
- [X] ./place/timing_place_lookup.cpp
- [X] ./route/router_lookahead_map_utils.cpp
- [X] ./route/router_lookahead_map.cpp

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Considering this is all about refactoring, this PR does not need to create new tests. Expect all the existing tests to pass.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",2107cb117ec4787c46e1bf0f6ead3fa12e9ee1d9,2021-06-26 13:51:35
1778,3,True,33,11,2,2,"The intersection function belonging to the Region class was modified to also consider cases where one region has no subtile specified and the other region has a subtile specified.

#### Description
Previously, the region intersection function would only calculate the intersection when the two regions passed in both had no subtiles specified, or both had the same subtiles specified. However, this meant that the routine would miss out on some cases. 

For example, if region r1 was constrained from region (0,0) to (10,10) with subtile 0 specified, and region r2 was constrained from region (0,0) to (10,10) with no subtile specified, the previous intersection function would say that there is no intersection between these two regions. The new intersection function would return (0,0) to (10,10) with subtile 0 as the intersection between r1 and r2. 

#### Related Issue
This pull request is related to adding floorplanning placement constraints to VPR, as described in this issue #932

#### Motivation and Context
The missing of some intersecting regions becomes an issue especially when trying to intersect a region with the grid dimensions, to ensure that the region does not fall outside of the grid dimensions. If a PartitionRegion is created to match grid dimensions, it does not have a subtile specified since different areas of the grid can have different subtile dimensions. If a region with subtile specified is intersected with the grid PartitionRegion, the old Region intersection will return no intersection, even when the region is within the grid dimensions. The new Region intersection function solves this problem.

Another thing that should be considered is whether there is a way to check that the subtile dimensions of the region are within the subtile dimensions of the grid at the specified x, y values.

",7fc899fd728b2f2b559825024d737d976f35268e,2021-06-18 16:09:45
1777,5,True,210,182,3,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR focuses on updating the ``vpr/src/route/rr_graph.cpp``, where we use the refactored data structure ``RRGraphBuilder`` to replace the legacy data structure ``rr_node_indices``.
This PR aims to eliminate the use of ``rr_node_indices`` for the regular RRGraph building functions  ``vpr/src/route/rr_graph.cpp`` and ``vpr/src/route/rr_graph2.cpp``, as one step further in deprecating the legacy data structure.

Checklist:

- [x] Eliminate the use of ``rr_node_indices`` for the regular RRGraph building functions 
- [ ] ~~Eliminate the use of ``rr_node_indices`` for the ClockRRGraph building functions~~ This is due to too many code changes. Prefer to leave for the next pull request.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This pull request is a follow-up PR on the routing resource graph refactoring effort https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1693

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
After the previous PR #1747 , we start reworking all the source files that use the legacy data structure ``rr_node_indices`` in a high priority, in order to deprecate the legacy data structure as soon as possible.
Current statistics on the files that use ``rr_node_indices`` (in total there are 242 lines related):
- ./base/vpr_context.h
- ./base/vpr_types.h
- ./device/rr_graph_view.h
- ./device/rr_spatial_lookup.cpp
- ./device/rr_spatial_lookup.h
- ~~./pack/post_routing_pb_pin_fixup.cpp~~ Covered in another PR #1779 
- .~~/place/timing_place_lookup.cpp~~ Covered in another PR #1779 
- ./route/clock_connection_builders.cpp
- ./route/clock_network_builders.cpp
- ./route/clock_network_builders.h
- ~~./route/route_common.cpp~~ Covered in another PR #1779 
- ~~./route/router_lookahead_map.cpp~~ Covered in another PR #1779 
- ~~./route/router_lookahead_map_utils.cpp~~ Covered in another PR #1779 
- ./route/rr_graph.cpp
- ./route/rr_graph2.cpp
- ./route/rr_graph2.h
- ./route/rr_graph_clock.cpp
- ./route/rr_graph_clock.h
- ./route/rr_graph_reader.cpp
- ./route/rr_graph_util.cpp
- ./route/rr_graph_uxsdcxx_serializer.h
- ./route/rr_graph_writer.cpp

Considering the fact that some internal scratchpad data structures are still using the ``int`` rather than ``RRNodeId``, e.g.,

https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/6e442d112d843f310f5f6bfd88663186981a036f/vpr/src/route/rr_graph2.h#L21-L23

https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/6e442d112d843f310f5f6bfd88663186981a036f/vpr/src/route/rr_edge.h#L4-L9

I try to avoid massive changes to the codes for now.
So, in this PR, I will try to limit the changes to ``rr_graph.cpp``.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Considering this is all about refactoring, this PR does not need to create new tests. Expect all the existing tests to pass.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",95ac924b80871f347df2f027057b0d9787ceaa20,2021-06-21 17:36:58
1776,6,True,70,51,3,4,"
#### Description
Updated README.developers.md to go over parallelism strategy and give detailed steps for adding new suites. 

#### Motivation and Context
To update the document to be inline with #1728. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d86017adecae770659cb7042162b5936fbd4f892,2021-06-21 15:23:55
1773,3,True,8,4,2,1,"…ithout floorplan constraints

When a floorplan constraints file is not provided when running vpr (i.e. read_vpr_constraints option not used), the VTR log file used print:
Vpr floorplanning constraints file: 

Now, it prints the following
Vpr floorplanning constraints file: not specified

This change makes it clear to the user that no constraints file was passed in when running vpr. This fix is for issue #1752 
",f0ce44c3321637c95fb10c9664677ffe30ab7c57,2021-06-22 19:50:10
1772,3,True,547,13,12,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
1. `includes_dir` and `include_list_add` have been added to task config files as optional parameters. Users can pass additional (.v) or (.vh) files including some extra feature to the VTR flow. 
2. A modified version of ch_intrinsics has been added to benchmarks without `define macros
3. New header files have added to cover the ch_intrinsics definitions
4. New test is added to vtr_reg_basic/no_timing to test the new feature

Usage:
- For **run_vtr_flow** users need to added the parameter `-include 1.v 2.vh ...`
- For **run_vtr_task**, `includes_dir` and `include_list_add` need to be specified in the task config.txt

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
PR #1753 
PR #1774
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Support a new feature to add separate files than the main circuit design to cover additional design supports like macro definitons

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
`run_vtr_task`
`run_vtr_flow`
`run_reg_test`

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",bb87df4dfcac60d861ceb92bb00f4b45a054d245,2021-06-12 20:30:46
1771,1,True,4,0,1,4,"signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
VTR will be compiled in debug mode in GitPod prebuilt.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
follow up on #1766

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4d0381a46fe4fa43cb0670c73d44e37f07400c63,2021-06-10 14:33:05
1766,4,True,24,5,3,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
1. The origin remote of the repository in Gitpod was the Loksu fork -> changed to the main VTR repo
2. Running tasks in the `gitpod.yml` caused errors at the starting point of the Gitpod -> removed
3. Setting the working directory for the docker file as VTR_ROOT env.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
wrong URL and removing errors

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",db522c5d5c016004b0fca2779ae11cc3a5dbd217,2021-06-09 13:07:10
1763,2,True,50,0,3,1,"#### Description

This is part of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1078 which includes @luk036's changes to adds support for [""gitpod""](https://www.gitpod.io/) -- a solution which lets you create a automated development environment quickly and easily based on Docker. ",e5b7d2fb837e1d7abc79ad079da937c3240a7139,2021-06-03 23:27:27
1762,3,True,64,0,3,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a template SLURM submission script that can be used to submit a large VTR task run on a SLURM-managed cluster. I have also added some documentation on how to use this script to run easily using slurm.

The PR is tested on computecanada cluster (Niagara system)
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4702d9f7abb884fc8718789bc0c6fef49ac87750,2021-06-08 21:00:58
1761,1,True,76,8,1,1,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Undriven nets would cause segfault in resolving subtraction nodes. Solution is provided by connecting the to the pad node

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1748 #1738

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
bug fix

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
`make test`

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",45e7cf4fc63b908c7daa8b32a5ccf75921f6bf3e,2021-06-09 21:34:23
1760,3,True,2,62,4,1,"#### Description

The `BUILD_TYPE` variable can be used to select the CMake build type when using the wrapper Makefile. Additionally, a `_strict` suffix is supposed to enable VTR's strict compilation mode, but the name of the CMake variable responsible for doing this changed a while ago without the Makefile being updated. Thus, the request for a strict compilation was effectively ignored.

While the actual fix for this is fairly straightforward, I also tried to make sure similar errors may get caught early in the future by adding the `-Werror=dev` flag to CMake invocations in CI. This may eventually also catch unused variable warnings (which [were present](https://github.com/verilog-to-routing/vtr-verilog-to-routing/runs/2724152095#step:6:156) in the CI runs), but they are currently [not covered by the option](https://gitlab.kitware.com/cmake/cmake/-/issues/21412).

#### Motivation and Context

I happened to notice this while figuring out how the `BUILD_TYPE` machinery works for #1757.

#### How Has This Been Tested?

`rm -rf build && make BUILD_TYPE=release_strict` used to output:

```
CMake Warning:
  Manually-specified variables were not used by the project:

    VTR_COMPILE_OPTIONS
```

Now the warning is gone and it outputs:

```
-- VPR: building with strict flags
-- 	Adding CXX flag: -Werror
```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",7ec107d45aa3ea367d9f9807cdab88155159855d,2021-06-03 17:08:38
1759,27,True,251,88,11,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Before starting initial placement, the added code loops through the cluster blocks netlist to see whether any of the blocks have floorplan constraints that lock them to one grid location. For the blocks that are thus locked, the .is_fixed flag is set, and their locations are marked, meaning that the blocks will be skipped during initial placement, and they will not be moved during simulated annealing.

#### Related Issue
This pull request is related to adding floorplanning placement constraints to VPR, as described in this issue #932 

",57ae843129522aca59f5622924512592f51813f0,2021-06-22 16:25:27
1758,1,True,1,1,1,4,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
the following warnings are showing while `dev/upgrade_vtr_archs.sh` is called. Odin's XMLs are to read the configuration of each run. There is no need to go through the Odin directory looking for XML files.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
removing warning generated by `upgrade_vtr_arch.sh`

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",dcc5811f8983817fcf89ddf0eb3f8d395948711a,2021-06-09 21:44:29
1757,6,True,27,39,8,6,"#### Description
See #1754 for the motivation.

GCC 5 and 6 were still used for many CI runs, so the default was updated to GCC 11. This created a few new warnings that didn't exist in the older compilers, causing the `-Werror` job to fail - I've included the fixes in this pull request.

#### Related Issue
Resolves #1754

#### How Has This Been Tested?
All CI jobs work (again).

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",c8cc25eda5aae54c59c97e8f2d189532cc5e14b4,2021-06-03 17:07:44
1753,14,True,565535,1818,53,37,"#### Description
Adding files related to Koios benchmarks. Here's a summary of the files:
1. The benchmarks themselves (.v files in the benchmarks/verilog/koios directory)
2. A README file for the benchmarks that provides a link to the documentation, how to cite and who to contact.
3. The arch files that were used with Koios benchmarks in the arch/COFFE_22nm directory
4. Adding a brief description of the benchmarks in the benchmarks.rst file. This goes on the docs pages.
5. Adding a citation of the Koios paper in the bibtex file.

#### Motivation and Context
Adding a set of DL benchmarks for FPGA arch and CAD research

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I need to add tests. Will work with Vaughn on identifying the tests to add.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5d75317ee0595baa31390e9ca4b35b21d0e455e6,2021-06-14 18:05:22
1751,13,True,165,25,4,3,"…in macros at the start of initial placement

<!--- Provide a general summary of your changes in the Title above -->
This code does constraint propagation at the start of initial placement. It goes through all the macros, and checks for floorplanning constraints on each one. For the macros that have floorplan constraints, it calculates the smallest possible floorplan region for the entire macro, based on the floorplan constraints of each block within the macro. This is all done before initial placement starts so that during initial placement, when macros are being placed, the floorplan legality can easily be checked by seeing whether the head member of the macro is in the floorplan region that was calculated earlier.

#### Related Issue
This pull request is related to adding floorplanning placement constraints to VPR, as described in this issue #932 

#### Motivation and Context
This change makes it easier to check floorplan legality for macros during initial placement.




",5fe84dd71203845197d06b77c7c736bbe4c5b454,2021-06-15 19:19:29
1750,2,True,21,8,4,7,"#### Description

The CI compatibility tests currently only go up to GCC 9 and clang 8, which are both quite old. While clang 11 and 12 aren't in Ubuntu 18.04, clang 10 and GCC 11 are possible.

#### Related Issue
This will only work once #1749 is merged.

#### Motivation and Context
To test vtr with modern compilers.

#### How Has This Been Tested?
Since this only adds new tests, there's not much to test.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed",4535938066d66941216deb4b5c423f0818483ab5,2021-06-02 02:26:49
1749,1,True,10,0,1,1,"#### Description
Fixes #1745, see the commit message or the issue for details.

#### How Has This Been Tested?
The test suite still passes, and compilation is now successful with GCC 11.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3ef5c2bc74977cec6711cbf1932ebff496371cb6,2021-06-01 15:59:01
1747,8,True,138,93,7,6,"<!--- Provide a general summary of your changes in the Title above -->
This pull request is a follow-up PR on the #1693 

#### Description
<!--- Describe your changes in detail -->
- [X] Fully use ``RRGraphBuilder`` when building the lookup in routing resource graph. Eliminate the use of ``rr_node_indice``
- [X] Cut off the dead loop between two header files: ``rr_graph2.h`` and ``rr_graph_storage.h``. Previously, ``rr_graph2.h`` is included in the ``rr_graph_storage.h`` due to a shared data structure ``rr_edge_info_set``. However,  ``rr_graph_storage.h`` should be the primitive header files. Therefore, a new header file ``rr_edge.h`` is created to host the shared data structure ``rr_edge_info_set``.
- [X] Added an API ``resize_nodes()`` to ``RRSpatialLookup``  to pre-allocate memory efficiently
- [X] Added an API ``mirror_nodes()`` to `RRSpatialLookup`` to enable batch copy of indices.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This is part of the PR request plan on routing resource graph, being a follow-up PR on the #1693 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Motivated by @vaughnbetz 's suggestion, the top priority is to deploy the new data structure ``RRGraphBuilder`` in place of the legacy data structure ``rr_node_indices`` in routing resource graph builder functions.
This PR addresses the comment, where we fully remove the use of ``rr_node_indices`` in builder functions.
As a result, ``RRGraphBuilder`` data structure is the only one that builder functions are talking to.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Should pass all the existing tests, since this PR is about refactoring.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",587847397418cb0dc859676b48c637147aa77964,2021-06-01 21:00:29
1746,43,False,114,91,7,1,"<!--- Provide a general summary of your changes in the Title above -->
This pull request is a follow-up PR on the #1693 

#### Description
<!--- Describe your changes in detail -->
- [X] Fully use ``RRGraphBuilder`` when building the lookup in routing resource graph. Eliminate the use of ``rr_node_indice``
- [X] Cut off the dead loop between two header files: ``rr_graph2.h`` and ``rr_graph_storage.h``. Previously, ``rr_graph2.h`` is included in the ``rr_graph_storage.h`` due to a shared data structure ``rr_edge_info_set``. However,  ``rr_graph_storage.h`` should be the primitive header files. Therefore, a new header file ``rr_edge.h`` is created to host the shared data structure ``rr_edge_info_set``.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This is part of the PR request plan on routing resource graph, being a follow-up PR on the #1693 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Motivated by @vaughnbetz 's suggestion, the top priority is to deploy the new data structure ``RRGraphBuilder`` in place of the legacy data structure ``rr_node_indices`` in routing resource graph builder functions.
This PR addresses the comment, where we fully remove the use of ``rr_node_indices`` in builder functions.
As a result, ``RRGraphBuilder`` data structure is the only one that builder functions are talking to.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Should pass all the existing tests, since this PR is about refactoring.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ce731238f31f7b6217df54c5f93b395eff39bcc7,
1744,2,True,8,0,1,0,"Updated nightly presubmit configuration to include artifact collection for files ending in .gz. This is needed because all output files from nightly runs are zipped to save disk space, and so to collect those files the artifact collection had to be updated. The presubmit runs are the ones launced on every pull request.
",3e65986332245149d1cecd6152bb615b3feb1401,2021-05-28 16:49:31
1742,56,True,306,210,39,12,"<!--- Provide a general summary of your changes in the Title above -->

### Description
<!--- Describe your changes in detail -->
In this PR, I have implemented `RRGraphView::node_type()` throughout VTR. Every time `device_ctx.rr_nodes[index].type()` was called has been replaced with `rr_graph.node_type(RRNodeId(index))`. In order to do this, I followed a pattern like that shown below in every case where `device_ctx.rr_nodes[index].type()` needed to be replaced.

### Example Replacement
```diff
static void check_source(int inode, ClusterNetId net_id) {
    auto& device_ctx = g_vpr_ctx.device();
+   const auto& rr_graph = device_ctx.rr_graph;
    auto& cluster_ctx = g_vpr_ctx.clustering();
    auto& place_ctx = g_vpr_ctx.placement();

-   t_rr_type rr_type = device_ctx.rr_graph.node_type(RRNodeId(inode));
+   t_rr_type rr_type = rr_graph.node_type(RRNodeId(inode));
    if (rr_type != SOURCE) {
        VPR_FATAL_ERROR(VPR_ERROR_ROUTE,
                        ""in check_source: net %d begins with a node of type %d.\n"", size_t(net_id), rr_type);
    }
```

### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
These changes are a continuation of the work began by @tangxifan in PR #1693. Although this PR only implements one function through VTR, future pull requests of this nature that implement the RRGraphView API will include multiple functions. The changes made in this PR are fairly repetitive, so once they are looked over and merged into VTR, the rest of the API functions should be quite similar to implement.

### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I have run the regression tests for `vtr_reg_strong` along with the QoR testing found at `    $ ../scripts/run_vtr_task.py regression_tests/vtr_reg_nightly/vtr_reg_qor_chain`. I don't know the range of uncertainty that is to be expected in these tests, but the results from these QoR tests can be found below. The file containing all results can be found [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6555913/rr_graph_view_node_type.xlsx). And the file containing results with the inlined function is [here](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/6562514/node_type_inline.xlsx).




|  |VTR Before These Changes| WIth Changes in this PR| After inlining `node_type()`|
|--|--|--|--|
|vtr_flow_elapsed_time|	1|	1.01204436| 0.985755221|
|odin_synth_time|	1|	1.010760259| 1.001577787|
|abc_depth|	1|	1| 1 |
|abc_synth_time|	1|	0.965919937| 0.970080695 |
|num_clb|	1|	1| 1 |
|num_memories|	1|	1| 1 |
|num_mult|	1|	1| 1 |
|max_vpr_mem|	1|	0.998708931| 0.998329365 |
|num_pre_packed_blocks|	1|	1| 1 |
|num_post_packed_blocks|	1|	1| 1 |
|device_grid_tiles|	1|	1| 1 |
|pack_time|	1|	0.998771255| 0.987595496 |
|placed_wirelength_est|	1|	1| 1 |
|place_time|	1|	1.006280619| 0.98858469 |
|placed_CPD_est|	1|	1| 1 |
|min_chan_width|	1|	1| 1 |
|routed_wirelength|	1|	1| 1 |
|min_chan_width_route_time|	1|	1.01422609| 0.983911635 |
|crit_path_routed_wirelength|	1|	1| 1 |
|critical_path_delay|	1|	1| 1 |
|geomean_nonvirtual_intradomain_critical_path_delay|	1|	1| 1 |
|crit_path_route_time|	1|	1.013738605|  1.002929197  |

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b98b9523e1d6a1fc5637d2d8e85f232880720190,2021-06-14 16:09:08
1741,9,True,62,31,8,2,"#### Description
This branch will have changes to improve the usability and performance of user-defined floorplan constraints in vpr. 

Changes were made to floorplan-related routines in clustering like atom_cluster_floorplan_check to reduce the pack time, which was increasing when floorplan constraints were specified. Now the pack time is similar when running vpr with no constraints or large constraints.

Changes will also be made to the clustering process to improve performance with tight floorplan constraints. Attraction groups will be used to ensure that molecules with similar floorplan regions are packed together.

#### Related Issue
This is part of a series of PRs to add floorplan placement constraints to VPR. It is related to issue #932 

",8c6dc01d9c7f8b03475f06b1c28e8540035e80d6,2021-06-01 15:57:12
1739,2,True,1,1,1,8,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
In VNumber copy constructor with new length, the defined_size variable was not initialized. As a result, Odin_II would throw an error in case of facing new VNumbers without defined_size equal to true while they have already a size specified.  

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1738

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Bug fix!

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",24bafc3871bcf007ea13cf6555f560d189274ed7,2021-05-28 16:44:08
1737,1,True,19,6,1,1,A followup PR of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1731 which adds the requested code comments.,785722565d05c54f340047d7ba0eeacd57a32afb,2021-05-25 14:21:49
1736,4,True,40,18087,20,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

- `verify_odin.sh` could not run vtr_light_suite. The appropriate changes have made, so it can run and parse [vtr_light_suite](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/ODIN_II/regression_test/benchmark/suite/vtr_light_suite/task_list.conf) properly.
- Removing a non-exist param `-use_new_latches_restoration_script` in script_params of func_multiclock/vanilla config file.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Agenda of May 20th, 2021
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Extending regression test coverage

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ce0a5c1dda82ba5f4cf517007e5dc39392cea729,2021-05-26 17:58:20
1734,3,True,128,10,6,21,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Running Odin full regression tests by CI and Kokoro

splitting Odin's complete regression test into two stages:
1. Odin reg basic: performing Odin's [light_suite](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/ODIN_II/regression_test/benchmark/suite/light_suite/task_list.conf) [CI]
3. Odin reg strong: performing Odin's [heavy_suite](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/ODIN_II/regression_test/benchmark/suite/heavy_suite/task_list.conf) [Kokoro]

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Regression test coverage by CI

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ed470b488c012d2c5c03ba5863c42721c3321ff2,2021-05-26 00:27:57
1733,21,True,85,95,8,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The run_vtr_task.py script can generate vtr_flow.sh scripts by adding -system scripts option. Each script runs one (design, arch) pair of the specified task
In this PR, some bugs of this generation process is fixed:

- the script now generates a correct vpr command
- the script now generates the full cartesian product runs of the designs, architectures, and script parameters.
- the script adds executable permission to the generated shell scripts

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The generated shell scripts can be used to run multiple VPR runs in parallel on a large cluster.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",99c078b23e6a0bb6d991bf8a8bf2b65536560c65,2021-05-30 12:22:58
1732,1,True,2,2,1,1,"<!--- Provide a general summary of your changes in the Title above -->
Fixing up spelling mistakes within the VTR documentation

#### Description
<!--- Describe your changes in detail -->

The words 'Navigate' and 'messages' were spelled incorrectly and they
were found within the 'Commit Procedures' and 'Commit Messages and
Structure' sections of the documentation. The words were replaced with
the correct spelling.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This change was required to resolve minor issues with the documentation. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

The vtr_reg_basic and vtr_reg_strong tests were run and both tests successfully passed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e8c6b5238796890be71136ff5a9185d1f9ff8b6d,2021-05-19 19:31:01
1731,3,True,252,5,4,3,"#### Description
Added execution of post routing cluster pin fixup to genfasm via the `sync_netlists_to_routing()` function.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1730

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Correct FASM generation for annotated blocks that have ports with equivalent input pins.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Using the testcase attached to the issue #1730. Also this PR contains update to the `genfasm` test which verifies that FASM features from clb muxes correspond to those from rr graph edges.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cfbcb573dec902d695d825afbd8350faf2d3ae1e,2021-05-19 14:20:11
1728,111,True,3950,1544,240,25,"<!--- Provide a general summary of your changes in the Title above -->
Reorganized vtr-tasks by removing/moving the outdated tasks not run in CI. 
#### Description
Deleted tasks: timing_small,timing_chain,checkin_reg,basic_flow,regression_bidir, regression_fpu_hard_block_arch,regression_fpu_soft_block_arch

Moved tasks:arithmetic_tasks,func_multiclock,power,multiclock_mcnc to vtr_reg_weekly 
timing to vtr_reg_nightly,regression_mcnc to vtr_reg_basic 

#### Motivation and Context
To make sure that all the tasks are updated by being included in the CI and deleting outdated ones. 
",dc47444b114fb064b3bd44f08dc9b13468bd8b88,2021-06-11 13:18:55
1726,2,True,4,4,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c384431243978a7d55b1259b21974326af4ffae1,2021-05-11 20:59:58
1725,1,False,0,3,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",00dab314b20f3d765c1f4b30b9e878a8498f2996,
1724,5,True,19,4,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Updated the Titan README files to mention the location of the repo in the U of T EECG network. 
<!--- Describe your changes in detail -->

#### Motivation and Context
To document the location of this repo.
<!--- Why is this change required? What problem does it solve? -->
",ee005b007ff5d17a0b966a8f70a0662aa98252fd,2021-05-13 01:26:59
1723,2,True,21,15,1,1,"Updating the Basic Design Flow tutorial. 
<!--- Provide a general summary of your changes in the Title above -->

#### Description
The tests pointed to in the tutorial are outdated and golden_results don't include every parameter. Updating the tutorial to point to the basic regression tests at regression_tests/vtr_reg_basic would ensure that the design flow tutorial stays up to date.

<!--- Describe your changes in detail -->

#### Motivation and Context
Avoids the task of generating golden_results for the basic_flow tasks every time they get out-of-date. 
<!--- Why is this change required? What problem does it solve? -->


",5823a13d201fe346bdb9ec14dd0c2c39da9cbecd,2021-05-12 20:45:39
1722,1,True,132,0,5,2,"Signed-off-by: Seyed Alireza Damghani <sdamghan@unb.ca>
<!--- Provide a general summary of your changes in the Title above -->
Adding new test to verify unordered port in an instance

#### Description
<!--- Describe your changes in detail -->
follow up on #1710 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1699 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f67a1e8d32bee4202c0bc7cddcc37ea7ce0fc687,2021-05-10 17:34:12
1720,3,False,19,17,3,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

This PR is to run nightly tests with only symbiflow, so to speed-up test iterations",df74554278f47d737152fd8d2e11b5b9460f2086,
1719,2,True,6,3,2,1,This PR fixes https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1716,72ee736c88586b574377a86d492a3ad9debf7292,2021-05-06 17:21:50
1718,1,False,3,2,1,2,"Attempt to fix the broken images

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail --> The links for the images in the placer and router debugger documentation weren't working properly. The links have been changed and should work now.


#### Related Issue
<!--- Pull requests should be related to open issues --> Broken images on https://docs.verilogtorouting.org/en/latest/vpr/debug_aids/
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: --> https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1717

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",25f23f6f66803a4329eae9960b77d1455cc9a645,
1715,16,True,51,0,3,8,"…ase where packing stage of VPR is skipped

<!--- Provide a general summary of your changes in the Title above -->
In the vpr api, if the packing stage of vpr is skipped, the cluster_constraints data structure, which stores the floorplanning constraints of each block is initialized with an empty PartitionRegion for each cluster block.

#### Related Issue
This is an attempt to solve the issues discussed in #1711. Currently, there are seg faults during initial placement when individual stages of VPR are run. This is causing the nightly tests to fail.

#### Motivation and Context
Normally, the cluster_constraints data structure is loaded during packing. If packing is not done, the structure will remain empty, leading to seg faults when it is used in initial placement. This code should solve that since it loads the structure with empty PartitionRegions if the packing stage of vpr is skipped.


",25a37a6754a147f055f9d8e24f0c335eed25647d,2021-05-26 21:43:53
1714,1,True,497,61,3,4,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This is to test an initial placement failure case described in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1711

",a0d50b01dca60f44fc14eb738c5e4c389a412d99,2021-06-21 20:59:24
1713,1,False,7,2,1,8,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The new partition region code might not take into account that partition regions are not being set and constraints are not initialized. This PR is an attempt at fixing this.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1711

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d0e9bfa63587dffd0f8e72da12d27421fdd29d73,
1712,7,True,27,27,1,1,"
#### Description
--------------------- Describe your changes in detail ----------------


<!-- Specify true dual port mode next -->
<mode name=""mem_2048x8_dp"">
   I think it may be a mistake. The memory mode should be 4096x8. In this mode, I replace 2048x8 with 4096x8.
Moreover, I find the same mistake in other architecture files. For example k6_frac_N10_frac_chain_mem32K_40nm.xml.


",b0101c1254ab28019706548777bdc6289554b62c,2021-05-27 13:21:32
1710,1,True,29,6,1,4,"	
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Previously, the simple swap of two items at a time has been used as the sort approach for instance port connection, to reorder them according to the main module (function or task) that they are instantiated from. That would cause an error since we alter the array of ports each time, which results in an unexpected change in the array for future swapping. The new approach uses a helper array to order the ports and then reorder the instantiated instance ports.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
 #1699

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
bug fix

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. make test (ODIN-II)
2. Basic Regression Tests
3. Strong Regression Test
4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
5. Sanitized Basic Regression Tests
6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a5c33f2744326afe25acb79ae1aa2080a8370397,2021-05-07 21:56:57
1709,1,False,3,19,1,0,"
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
reverting the last commit to making sure about the cause of the Symbiflow task failure in CI
PR #1695

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c9940da298b2533739368fdbccb31d737f4b8410,
1707,1,True,1,1,1,1,"#### Description
Fixed a syntax error in Verilog LUT cell model in `vtr_flow/primitives.v`. The parameter `K` of the `LUT_K` cell was missing a default value.

#### Related Issue
None

#### Motivation and Context
To be able to do post-pnr simulation of a design.

#### How Has This Been Tested?
With Yosys that can now successfully parse the file.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",52a6190c169e860d0bcd6185dd32b41ac3ee1bb5,2021-05-26 21:50:30
1706,2,True,0,2139,1,1,"Removing the agilex_arch.xml file that was added a few months back.

#### Description
1. The naming of this file isn't correct. This is not really an agilex architecture. The main thing that's agilex like is the complex DSP slice. Based on recent discussions with Andrew Boutros, we prefer to rename this something like k6_N10*complex_dsp*.xml.

2. During some recent work, we found some issues with this architecture and fixed them. And we also created different variations of this architecture. These updated arch files will be checked in into the repo soon.

3. This arch is only used in the vtr_reg_coffe regression test, which is currently disabled. I'll enable vtr_reg_coffe when we checkin the new architectures. So, it's safe to delete this file.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",85ee98f115bc385fa11e40e63da0e042dc7ffb58,2021-04-13 05:34:52
1704,28,True,392,69,22,13,"#### Description
Adding floorplanning constraints checks to the placement move generators. When a move is being proposed, the blocks affected by the move are checked to see if they are moved out of their respective floorplan regions. If a move would cause a block to be moved out of its legal floorplan region, the move is aborted.

#### Related Issue
Changes related to issue #932 
",6371351d6a936c95d803cab44ef55beed0ecde9e,2021-05-13 23:55:48
1701,5,True,35,0,4,1,"…nightly config file

The configuration files for the regression tests needed to be updated to include files ending with "".gz"", since the output files from nightly files are zipped. This change is needed because no data is being collected because the filters for artifact collection are missing "".gz""
",127b07cda041f4a1d94f7faab5b7733d97a71573,2021-05-26 21:51:06
1700,3,True,33,33,6,6,"#### Description
Grammatical/spelling corrections and name addition to contributors

#### Related Issue
None

#### Motivation and Context
Fix typos

#### How Has This Been Tested?
Not required as no changes to the code base

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",2af8d0f5ac842ca89c4c1eda7539c91b03734732,2021-04-19 14:43:18
1697,3,True,66,66,3,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Regenerating new golden results for vtr_req_qor_chain_depop which is the cause of vtr_reg_nightly failure in CI

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Vtr_reg_nightly failure

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",692fa966fd468502707bcf96e4cbe34f3b425fbc,2021-04-01 14:56:07
1696,6,False,982,305,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
There was no support for an array of registers, instead, all were inferred as implicit memory. The support is added by considering a threshold of array size which is given by the user.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1665 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
New feature

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ef35bc2b58dcc7f84613939f276ed91ca6693e3e,
1695,1,True,19,3,1,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Odin_II buffers each signal in block statements like ASSIGN. Moreover, Odin_II eliminates BUF_NODE while doing the partial mapping. Since Odin looks up for clock signals before the partial mapping phase if the actual clock is assigned to a new signal Odin_II considers it as a new separate clock while it is the same as the actual one. This PR resolves the issue by considering the source of each buffered clock signal as the clock signal.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
ML-benchmarks: tiny_darknet_hls.v

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Bug fix

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. make test (ODIN-II)
2. Basic Regression Tests
3. Strong Regression Test
4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
5. Sanitized Basic Regression Tests
6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d7660265638dd30f967fdc19667070afc17a8c87,2021-04-14 12:53:41
1694,7,True,83,192,9,1,"<!--- Provide a general summary of your changes in the Title above -->
This is the final PR in the PR series #1667 and #1661  to replace node_side() API with is_node_on_specific_side() APIs

#### Description
<!--- Describe your changes in detail -->
- [X] Deprecate node_side() API
- [x] Deprecate node_sides() API

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
To address issue #1577 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
To address issue #1577 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Should have no impact to existing codes as the node_side() API is almost unused.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",0168c99814ec1c42b1e4ccfcbeece9a3fd78a3c9,2021-04-08 17:42:38
1693,35,True,462,48,13,14,"<!--- Provide a general summary of your changes in the Title above -->
This PR kicks off the refactoring effort of the routing resource graph -related data structures.
A detailed technical plan can be found at [link](https://docs.google.com/document/d/15m7IbVRbQYLxFQjIVNIZT3VjYDhAqK6cjqCxVuSVDGU/edit?usp=sharing)

The overall refactoring effort aims to 
- create a unified data structure ``RRGraphView`` as a centralized storage for all the routing resource graph -related information. See Fig. 1
- create a set of frame view object from the centralized storage ``RRGraph`` for client functions, which are suitable for ``rr_graph builder``, ``placer``, ``router``, ``GUI``, ``timing analyzer`` etc. See Fig. 2.
- This is to avoid massive updates to the codes of client functions when there is a change on the unified data structure. 
- Also it avoid large memory footprint for client functions, since each client function may only use a small portion (typically <50%) APIs of the unified object.

![image](https://user-images.githubusercontent.com/11499826/114082095-95ac8980-986a-11eb-99f1-adf93a2f4881.png)
Fig. 1 Illustration of the relationship between data structures

![image](https://user-images.githubusercontent.com/11499826/112546797-8a902e80-8d7f-11eb-8438-81fc409359db.png)
Fig. 2 Different levels of frame views of routing resource graphs to satisfy various needs from client functions.

The result/benefits of the refactoring efforts is
- The routing resource graph can be decoupled from VPR's core engine as a library. Unit tests can be enabled
- It is much easier for developers to develop custom routing resource graph builders thanks to the APIs of the unified data structure ``RRGraph``. A routing resource graph builder can be a library, decoupled from VPR's core engine. Many checking codes can be efficiently merged into the data structure and developers can save a lot of efforts in writing the atom-level sanity checks.
- Ensure that each client functions have a clean view of the routing resource graph, i.e. ``RRGraphView``. In other words, routing resource graph will be read-only and only accessors are exposed to client functions. Developers have no worries on developing their own placer/router etc.

#### Description
<!--- Describe your changes in detail -->
This PR adds:
- [x] A new object ``RRGraphBuilder`` as the writable data structure modeling a routing resource graph. It will encapsulate ``rr_nodes`` and ``rr_node_indices``. (To keep this PR small, currently just bring ``rr_node_indices`` in. This ``RRGraphBuilder`` will be **the one and only one interface** for routing resource graph builder functions.
- [x] A new object ``RRGraphView`` as the read-only data structure modeling a routing resource graph. It shares the data storage as the ``RRGraphBuilder``. This ``RRGraphView`` is designed to be a full featured frame-view for client functions. A few variants may be introduced in later pull requests, such as reduced frame-views for client functions.
- [x] The new object ``RRGraphBuilder`` and ``RRGraphView`` are added to ``DeviceContext`` and updated each time a routing resource graph is built
- [x] Develop a basic mutator in the ``RRGraphBuilder`` for updating the ``rr_node_indices``.
- [x] Deploy the mutator in routing resource graph building function. (May reduce to applying an example code change to validate the new object if massive code changes are required)
- [x] Develop a basic accessor in the ``RRGraphBuilder`` and ``RRGraphView`` for data queries on ``rr_node_indices``.
- [x] Deploy the accessor in placer
- [ ] Deploy the accessor in router (Deferred if massive code changes are required)

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ffb4bca7be1710727a82bdf5a4aca75fb40c4013,2021-05-26 16:23:39
1692,2,True,4,4,1,0,"#### Description

The warnings about mismatches between generation and usage environments for RR graph files were worded the wrong way around and had some typos.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",2dd569be89f02942c324e14e4e314ae2b3c25b6f,2021-05-27 13:20:09
1689,2,True,47,37,4,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
 - Previous changes in PR #1657 require golden results update for vtr_reg_coffe and titan_quick_qor tasks.
 - An improvement to check RAM inputs connectivity
 
#### Related Issue/PR
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
PR #1658
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. make test (ODIN-II)
2. Basic Regression Tests
3. Strong Regression Test
4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
5. Sanitized Basic Regression Tests
6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ab9ad23af71a1d9876fbb5321bba365754e1268f,2021-03-19 18:06:57
1686,1,True,0,1,1,1,"… to be updated.

See https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1666 for details.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5feaf81b5c3ab2929f4e03f018f5b4602adc1df0,2021-03-09 03:01:09
1685,1,True,16,5,2,0,"In the past pylint_check.py could only run on the entire repository.  Now you can provide arguments to individual files to check.  While you could always manually call pylint on your individual files, our script has certain rules that are ignored, so it's better to provide this functionality through the script.

Closes #1683 

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",88ede156ec324b1e6028026c5964d66078a00e19,2021-03-07 21:38:36
1684,2,True,3,2,3,0,"Rename inspect.py since this name clashes with a built-in python module.  Fixes #1659 

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",31d7d0c9a2257da43f7f1d82d720db8754196768,2021-03-07 15:30:12
1682,4,True,79,0,5,11,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR fixes an issue for which a fixed block could get swapped during placement

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1681


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Critical blocks and IOs cannot get swapped and must preserve the initial constraints.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",d9f05da554830627101c334a2701f50e8da6cb75,2021-03-12 15:47:53
1679,25,True,409,68,12,5,"Adding changes to the placement engine to ensure that floorplanning constraints are respected in initial placement and in subsequent moves. By the end of placement, all blocks with floorplanning constraints should have been placed within their specified regions. If the placement specified in the user-provided file is impossible, placement will error out.

#### Related Issue
Part of solution to issue #932 

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)


",82bd8e632b1f38380a56032c7ec4666e9c17d120,2021-04-05 17:36:55
1678,15,True,3,0,1,1,"This branch will be used to test how changes to the output of vtr_reg_nightly can affect disk space usage. The nightly working directory needs to be trimmed as it is currently taking 89 G and soon the runs may not be able to complete if it starts taking more space.

#### Description
The first change made was to add the command du -h --max_depth 2 to the CI script vtr-test.sh. This was done to get more insight into where the disk space is being used up.

#### Related Issue
#1666 


",01fe9ab2d275e75691a46ad27fe117d33ce26749,2021-03-18 15:20:09
1677,4,True,2,0,1,0,"Fix broken build not finding fprintf() due to missing stdio.h include.

Signed-off-by: Henner Zeller <h.zeller@acm.org>",aa4920c525e96e210a0b780532056eb4e7cf4fcd,2021-03-03 21:15:48
1674,1,True,6,0,1,1,"#### Description

There is logic to cleanup the VTR working space after `run_reg_test.py`, but if the `e` flag (terminate on error) is set, then the cleanup logic never runs.  This change un-sets the `e` flag around `run_reg_test.py` and forwards the result.

#### Related Issue

Might help with #1666 ",b596f9c629dfe4660921d908edaabf964b794a21,2021-02-26 15:54:39
1673,2,True,4153,2098,68,13,"<!--- Provide a general summary of your changes in the Title above -->


#### Description
<!--- Describe your changes in detail -->
A new function has been added to netlist creation to resolve the expressions used in an instance port connection of modules, functions or tasks. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1651

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
add feature support

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a31b2e81b89472495eaf7173829ca53bb0fc1d0c,2021-03-08 22:33:03
1672,4,True,216,35,8,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR solves an issue for which VPR cannot have directs within the same X, Y tile locations, specifically in heterogeneous tiles, where two different sub tiles have a direct connection (varying only in the sub_tile_offset).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
With the addition in SymbiFlow of new kinds of tiles and primitives, which are mostly heterogeneous (at the same X, Y location live different kinds of sub tiles), there exists connectivity between these sub tiles which was not present and verified before.

For instance, there is the GTP tile which have the following sub tiles:
- GTP_CHANNEL (primitive)
- IPAD
- OPAD

The IPADs and OPADs are connected to the GTP_CHANNEL primitive through a direct connection, hence no routing CHANX/CHANY is present.

The changes in this PR address and fix some bugs corresponding to this situation.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Basic, strong tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",d7b9732703bea038970ababe8063efcc62feb925,2021-03-03 15:46:57
1667,4,True,35,12,4,5,"<!--- Provide a general summary of your changes in the Title above -->
This PR aims to deploy the new node_side() API to rr_graph builder and router.

#### Description
<!--- Describe your changes in detail -->
This PR:
- [X] Replace all the node.side() API with node.is_node_on_specific_side() API in rr_graph builder and router.
- [ ] Patch routers' lookahead map building for multi-width and multi-height blocks. This will be patched in later pull requests, because key roadblocks have been identified: require prev_node list to be cached for each rr_node so that lookahead builder can know accurate positions for SINK nodes.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

To address issue #1580

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
In Titan architecture, a ``rr_node`` may appear in multiple sides of a logic block. However, VPR's rr_graph builder and router only assumes that a ``rr_node`` locates on only 1 side. There has been patches (#1621 and #1661) to extend the side support for ``rr_node`` and deploy to GUIs. This PR is a follow-up PR as planned to deploy the new API node.is_node_on_specific_side() in place of the to-be-deprecated API node_side() in the rr_graph builder and router.
After this PR, the old API can be safely removed.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b1157df990eea79ecc40fecd9a0d322a7aeabcc3,2021-03-23 23:22:52
1664,1,True,0,2,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Remove unnecessary parsed info that was used for placement debugging",86b5a14a3e5cefffe392e748500b521ae0f41d4d,2021-02-15 09:30:06
1663,8,True,112,6,5,4,"A proposed solution to https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1662
- Updated EBLIF cell parameter specification
- Added EBLIF parameter value validation on reading
- Added binary prefix to relevant parameters in post-routing Verilog netlist writing.

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1cbc9b90cc75b9b641e109fd75819401f5332b42,2022-03-24 17:53:28
1661,12,True,172,43,3,2,"<!--- Provide a general summary of your changes in the Title above -->
This is a follow up pull request for the PR #1621 
The purpose of this PR is to deploy the new APIs about the node sides of RRGraph to the *Graph User Interface* (GUI)

**Note**
This PR will not deprecate the old APIs and the unnecessary node_sides() APIs.
The deprecation will be done after lookahead map has been fixed, as the final PR in this series of patches

#### Description
<!--- Describe your changes in detail -->
Major changes are landed in the GUI part 
In the GUI part, the major changes to enable the drawing for lines between the IPIN/OPIN and CHANX/CHANY routing resource nodes.
As an IPIN/OPIN may have multiple sides, the drawer should identify the correct line (from the multiple possible connections) to display.

** A Side Note**
A separated PR will be created to solve the issue on the router lookahead map (as stated in issue #1580)
In the router lookahead map, a proper side should be picked from multiple sides of a rr_node so that the lookahead map can have an accurate estimation on the routing congestion.
As multiple sides are used in Titan architectures, a proof of the QoR changes is required!

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
To address issue #1577 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
To show correct RRGraph display for nodes/edges with multiple sides in GUI.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
**As multiple sides are used in Titan architectures, a proof of the GUI display is required!**

My major focus is on the Titan architecture where multiple sides are heavily used for rr_nodes.
- Before GUI patching (LAB in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107809196-ec448e00-6d27-11eb-8f14-cd8265562272.png)

- After GUI patching (LAB in Titan Architecture): You can see the connections on the top side has been correctly shown, which are driven by LAB.data_in (locate on TOP, LEFT, RIGHT sides)
![image](https://user-images.githubusercontent.com/11499826/107835056-6c351d00-6d55-11eb-9077-9a65d2aa27c2.png)

- Before GUI patching (PLL and I/Os in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107835435-b965be80-6d56-11eb-854d-719fefb993fa.png)


- After GUI patching (PLL and I/Os in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107835354-7b689a80-6d56-11eb-94f1-1bd71af197d0.png)

- Before GUI patching (M9K in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107835480-e4501280-6d56-11eb-93c9-892026b2bd3f.png)

- After GUI patching (M9K in Titan Architecture):
![image](https://user-images.githubusercontent.com/11499826/107835711-ad2e3100-6d57-11eb-853d-453715f842d4.png)


- Before GUI patching (DSP36 in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107835551-19f4fb80-6d57-11eb-8256-9f51549f8cf8.png)

- After GUI patching (DSP36 in Titan Architecture): 
![image](https://user-images.githubusercontent.com/11499826/107835762-dd75cf80-6d57-11eb-8df3-7d66ac7b7a07.png)

**Note that there is no difference on normal architectures.
- Before GUI patching (k6_N10_mem32K_40nm.xml): 
![image](https://user-images.githubusercontent.com/11499826/107836086-0cd90c00-6d59-11eb-86d5-d8700927c16e.png)


- After GUI patching (k6_N10_mem32K_40nm.xml): 
![image](https://user-images.githubusercontent.com/11499826/107835985-ae139280-6d58-11eb-938c-4339692647ff.png)


The changes will only affect GUI codes under ``vpr/src/draw``.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a3eebdc736e3702c64c478970ccbebeac7fb8828,2021-03-03 18:27:51
1660,2,True,5,2,1,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
According to Verilog Standard 2005, concatenate results are unsigned, regardless of the operands. 
IEEE.1364-2005 pp.65

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1634 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Bug fix

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
    1. make test (ODIN-II)
    2. Basic Regression Tests
    3. Strong Regression Test
    4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
    5. Sanitized Basic Regression Tests
    6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",35162b37042f1e5d6e32705c3a8c72f5e3cbd494,2021-05-25 19:03:57
1658,6,True,52,37,2,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
Closes #1647 
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",197eb93b4473178f1d11248b8393e9b4bc4a39f5,2021-03-15 22:54:22
1657,1,True,222,40,10,20,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Odin II considered the same memory access in LHS and RHS as different ports with different addresses for hard block memories. In this PR, I resolved this issue by checking the source of new address signals to the connected one if there were any. Moreover, the memory type would have considered 'DUAL_PORT_MEM' even if there was only one port with the same address signals due to the previous design. This issue also has been resolved by considering the 'SINGLE_PORT_MEM' as the default memory type and changing it to the DUAL_PORT_MEM if there is another address signal that is not connected previously.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1642 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
- Wrong signal connection
- Misinfering DPRAM instead of SPRAM

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

    1. make test (ODIN-II)
    2. Basic Regression Tests
    3. Strong Regression Test
    4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
    5. Sanitized Basic Regression Tests
    6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f38aa8f3eb023008542a02b5fd492eaf5e4b67fd,2021-03-03 18:26:57
1656,4,True,1031,20,9,8,Attempt to fix https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1655,5fe4b9b69a2714953f6cae589e11619e112f9a14,2021-02-25 18:22:21
1654,1,True,13,0,1,0,"#### Description

https://editorconfig.org/ is a common file that is understood
by virtually all editors and IDES that deal with code. With this
file, contributors to the code-base already have a good head-start
complying with the expected formatting rules.

Note, this also includes a trim_trailing_whitespace setting, that
will remove random whitespace at end of lines, which will reduce
merge conflicts on such lines. Some existing files have spurious
whitespace at the end of lines, so whenever they are edited first
under .editorconfig configuration they will be cleaned up.

#### Motivation and Context
In recent pull requests I noticed that I had to manually configure my editor to match the local customs. With a `.editorconfig` file, this wouldn've happened automatically. This is an issue all contributors face. Let's make it simple to them.",874e1571df261aa9ae6c3bc7c85a47a61ede9be9,2021-02-03 00:17:36
1653,1,False,6,3,1,2,"Recently I've encountered the assertion failure during clustering: `vpr/src/pack/cluster.cpp:1437 try_place_atom_block_rec: Assertion 'parent_pb->mode == pb_graph_node->pb_type->parent_mode->index' failed.` This PR is an attempt to fix it.

#### Description
While debugging I discovered that the issue seems to be caused by the packer changing mode of a parent pb without re-allocating appropriate children for that mode which results in a conflict. In other words: when trying mode B after mode A there are already children for mode A allocated while they shouldn't be.

With this PR I added cleaning of the pb being used to form a cluster using the `free_pb` function. The cleanup is done each time when `try_pack_molecule` fails to pack for a given mode instead of after all available modes are exhausted.

The proposed fix seems to be working. However, I'm not that familiar with the packer code to tell whether it is the appropriate way of fixing the issue. I'd welcome any suggestions if a better solution is more feasible.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
None

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
I've been working for supporting a VPR architecture that is used in the OpenFPGA project in SymbiFlow (https://github.com/lnis-uofu/SOFA/blob/master/ARCH/vpr_arch/k4_N8_tileable_reset_softadder_register_scan_chain_nonLR_caravel_io_skywater130nm.xml)

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
For now only locally using a few designs that triggered the assertion.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",042e69d7087a74df05a7218666746fc06b628bd4,
1652,5,True,1,4,1,0,"Very small cleanup that also allows for faster initialization.

No functional changes.",0f89e61ea1f2bd8c4ac6bcb642dd2546a3214e3b,2021-03-09 06:37:43
1649,1,True,3,1,1,0,"#### Description
<!--- Describe your changes in detail -->
Use CMAKE_INSTALL_DATADIR in order to install capnp files to a File Hierarchy Standard compliant directory.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
N/A

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
On Linux, with `CMAKE_INSTALL_PREFIX=/usr`, the current configuration places the capnp files in `/usr/capnp/`, which is a nonstandard directory. Using `CMAKE_INSTALL_DATADIR` results in `/usr/share/vtr/` instead, which makes more sense.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
`make install` places the capnp files under `CMAKE_INSTALL_PREFIX/CMAKE_INSTALL_DATADIR/vtr/`.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",0637a7781edc4c1c3f1788cea9eedc796a29c9c8,2021-05-27 13:20:37
1646,1,True,10,10,8,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
With `INTERPROCEDURAL_OPTIMIZATION`/LTO enabled, LDFLAGS from the environment are ignored.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
N/A

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
CMake takes the default linker flags from the LDFLAGS environment variable and initializes the targets' `LINK_FLAGS` with it. If `set_target_property()` is used to overwrite a target's `LINK_FLAGS`, these initial linker flags from the environment are lost.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
```
$ env LDFLAGS=-Wl,-z,relro cmake -B build -S . -DVTR_IPO_BUILD=on
$ grep relro build/vpr/CMakeFiles/vpr.dir/link.txt
```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b35fcfcd12aa00837627b282a6e50f65e420e9ee,2021-05-27 23:19:46
1645,1,True,3,3,3,1,"#### Description

The test binaries used for `make test`/ctest are also installed to the destination system using `install()` directives. This makes little sense, as the tests do not need to be run outside a development environment.

#### Related Issue

N/A

#### Motivation and Context

I am packaging vtr in the [vtr-git AUR package](https://aur.archlinux.org/packages/vtr-git/). The installed package should not contain unit test binaries.

#### How Has This Been Tested?

`make install` no longer installs test binaries, `make test` still works as expected.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e3958ae33c3828a4bc1822161b0547bd8041034d,2021-05-28 21:38:34
1641,35,True,499,102,20,7,"<!--- Provide a general summary of your changes in the Title above -->
With the changes in this branch, the clusterer will not pack molecules together that have conflicting PartitionRegions (meaning they have different floorplanning constraints).

#### Description
Most changes were made in /vpr/src/pack/cluster.cpp. The following changes were made in this file:
-In do_clustering, a new check was added for whether the block failed a floorplanning feasibility check.
-In start_new_cluster, the cluster is assigned an empty PartitionRegion, and that PartitionRegion gets updated to match the seed atom, if the seed atom has its own non-empty PartitionRegion
-In try_pack_molecule a new feasibility check for floorplanning feasibility was added
-A new routine, intersect_atom_cluster_part_regions is called in try_pack_molecule to check compatibility between the atom and cluster

#### Related Issue
This change adds functionality needed to address the changes wanted in issue #932 

",b807f83f9d160562db603e8dc9570848797ae53c,2021-02-27 20:09:13
1640,2,True,12,12,4,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Fixed minor spelling mistakes in documentation

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

This is a trivial fix and may not require opening an issue

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] Documentation

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [x ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1bff2df5402f2b901e40de8bf3e8c28824b019fd,2021-02-04 18:46:18
1639,1,False,6,7,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Update the documentation!

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The documentation represented incorrect information concerning the supported c_functions
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cd2e8250131dcd229401bc6733fa7215cc25a391,
1637,20,True,21,53,6,13,"<!--- Provide a general summary of your changes in the Title above -->
Made changes to vpr_stdout.log output
#### Description
1. Moved the printing of the VPR options to come before the circuit stats printing and the Building complex block graph message
2. Deleted the RoutingArch lines that used to be printed directly after the options

#### Related Issue
These changes were suggested in issue #1617 

",1a382ba0474e3bd696ebb2b3e9cddf04a8a71c5c,2021-05-28 16:48:37
1635,2,True,73,74,1,0,"<!--- Provide a general summary of your changes in the Title above -->
This PR is created to fix a compilation error that happens in place.cpp when we enable VPR_ANALYTIC_PLACE

#### Description
<!--- Describe your changes in detail -->
When VPR_ANALYTIC_PLACE is enabled, a goto statement skip the anneal and jumps directly to the quench. This was also skipping some variables used by the RL agent in the quench. The code refactored to solve this issue and use better coding style than goto.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",905c077ce31ca7d269a69b81e0d97a430d5a07b2,2021-01-17 22:04:34
1633,1,True,1165,462,20,4,"Support signed values for arithmetic shift

<!--- Provide a general summary of your changes in the Title above -->
Odin does not completely support **signed** values yet. As already the implementation of arithmetic shift operation has been done completely, a solution is proposed to have the signed values shift operation support.

#### Description
<!--- Describe your changes in detail -->
This commit resolves the missed hierarchical contents for IDENTIFIERs. Odin creates a new IDENTIFIER ast_node when faces global or local variable usage. However, critical information like variable _signedness_ is not transferred to the new node. So, the added code addresses this problem when Odin reduces expressions. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Commits #1560 and #1468
Issue #38


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

    1. make test (ODIN-II)
    2. Basic Regression Tests
    3. Strong Regression Test
    4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
    5. Sanitized Basic Regression Tests
    6. Odin-II Micro Tests


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",f2d12b8df9686efde9a8811a514209e4341b6bf9,2021-01-19 15:56:54
1631,1,True,375,186,24,1,,8e096512be5264e19768863107fc849f3ebcca00,2021-01-15 19:19:10
1629,1,False,8,8,1,2,"'goto' over variable initializations leave these in an undefined
state. This fixes the build in case ENABLE_ANALYTIC_PLACE is defined.

Signed-off-by: Henner Zeller <h.zeller@acm.org>

#### Description
This just fixes the build in case `ENABLE_ANALYTIC_PLACE` is enabled. No functional changes.",a17cc5b98d4a519a53849b375b1659e161204b8f,
1627,8,True,2,2,1,0,"I  worked on this issue **Create a link from readthedocs to the README.developers.md for titan benchmark running #388** and linked the titan benchmarks files from readthedocs to the README.developers.md.

",6333f93fef597a1c7065ad5f11c49bf7153f1203,2021-03-08 23:00:59
1626,3,False,0,0,0,1,"I  worked on this issue **Create a link from readthedocs to the README.developers.md for titan benchmark running #388** and linked the titan benchmarks files from readthedocs to the README.developers.md.

",65d76d53c6d1582ecadb010eb2d43205e6b31b91,
1624,8,True,3836,0,5,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a FPGA architecture XML file, which represents an Intel Agilex-like architecture. Delays and areas of various blocks are obtained from COFFE runs at 22nm technology node.

There is a big patch of comments on the top of the file describing the architecture in reasonable amount of detail.

We had created the COFFE_22nm directory recently to move all the architectures generated from COFFE here. The base architecture file used for this was stratix10_arch.xml file.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
There is no related issue. This was discussed with @vaughnbetz over email. Will add him to the comments to review the change.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The motivation was to have an architecture file where all delays and areas are obtained from COFFE. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I've run a few simple designs with this arch file. Since this is a standalone file, it doesn't affect anything else.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
None of these apply really. We don't need to any new tests.",dae91e72415b07e07d77d2449ff1ce837bb521e8,2021-01-26 20:34:03
1621,35,True,671,48,15,16,"<!--- Provide a general summary of your changes in the Title above -->
Improve the routing resource graph data structure to store all the node sides on which a ``rr_node`` may appear.

#### Description
<!--- Describe your changes in detail -->
Add a truth table to the ``rr_node_storage`` data structure which indicates on which sides a ``rr_node`` may appear.
The node sides are stored in an encoded format, where a `char` is used to represent if a `rr_node` appears on {TOP, RIGHT, BOTTOM, LEFT} sides. This keeps the rr_node storage size no changed.

This pull request introduces the following changes in the ``rr_node`` methods:
- **The current method ``node_side()`` is changed to access the first valid side for a given ``rr_node``.** The priority list is {TOP, RIGHT, BOTTOM, LEFT}. For example, if a node is on both TOP and BOTTOM sides. The method `node_side()` will return TOP. A fatal error will be thrown if the given ``rr_node`` has multiple sides.
- **The current method ``set_node_side()`` will set only 1 side to a given ``rr_node``, which overwrite all the previous side attributes.** For example, if a node was set to TOP side, using ``set_node_side(BOTTOM)`` will change the side attribute to BOTTOM side only.
-  Add a new method ``node_sides()`` through which developers can get a list of sides that a given ``rr_node`` may appear.
-  Add a new method ``node_on_specific_side()`` which is a shortcut for developers to find if a given ``rr_node`` appears on a specific side.
- Add a new method ``set_node_sides()`` which allows developers to set multiple sets to a given ``rr_nodes``.
- Add a new method ``add_node_side()`` through which developers can update side attributes incrementally.

More methods may be added upon the needs of routers as well as other client modules.

RR graph reader and writer have been updated to support the multiple sides
- XML file now accepts strings for multiple sides, e.g., ``TOP_RIGHT``
- Add a tiny RRGraph modeling a 11x8 array of Titan architecture in testing purpose

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
To address issue #1577 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Previously, the routing resource graph assumes that a ``rr_node`` appears ONLY on a side when it is an output/input pin.
However, as the advancing of routing architecture modeling in #1448 , a ``rr_node`` may appears on several sides in Titan architectures.
This hits the limitation of current data structure. As a result, only 1 side is stored, leading to a chain of problems, such as 
- Displaying these multi-sided nodes in GUI
- Router needs all the sides for a node to create accurate lookahead mapper
- etc.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Two new tests are added in this pull request, which focuses on testing the reader and writer of RRGraph XML
Instead, sanity checks are added to RR graph build-up functions, which ensure that node sides to set are consistent with the storage in RR graph.

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The pull request will change the way that client functions in placer, router and other VPR modules to access the sides for a given node in routing resource graphs.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [X] All new and existing tests passed
",66b7e7658845cedf5a5da07d2e805b1e18f2c77f,2021-02-02 07:12:17
1615,2,False,40,16,2,8,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
VPR spends a lot of time adding costs in `get_rr_cong_cost()` when used with SymbiFlow architectures, which is called many billions of times.

This PR precomputes the sum of base costs in each node set, and uses this to compute the congestion cost more quickly.

In addition, this fixes a bug where occupation costs are not updated for all nodes in a non-configurable set.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
This is to improve VPR's performance.

#### How Has This Been Tested?
Performance measurements are still in progress.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",994148bb7127db7542844135dff4fabc7ee158c2,
1614,2,True,3,3,1,5,"Faster, and also clearer states intention.

Signed-off-by: Henner Zeller <h.zeller@acm.org>

#### Description
Very small cleanup.",2f02cb679b160c9bc85afbaa112913f983942d7a,2021-01-16 05:20:08
1613,1,False,14,2,2,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Alternative approach to https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1609

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",fbae5de595572bcc190f29a2821295191b573f7b,
1610,1,False,10,0,1,3,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1564 reports a huge disk space usage after the completion of all the tests. This is likely a pre-existing issue that went un-noticed. This PR adds a check at the end of the VTR kokoro tests to verify what is the final amount of disk space used.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6aba55bad9910919a8a721b12750a771526d0f43,
1609,1,False,3,38,2,10,"
#### Description

This PR improves performance by not summing congestion on entry of a nonconfigurable node set.

#### Motivation and Context

Symbiflow architectures use nonconfigurable node sets to model complex channel geometry, such as L-shaped wires. When the router enters a nonconfigurable node set, it sums the congestion cost for all nodes in the set.

This simple operation is performed many billions of times, and is one of the top time consumers in the CPU profile.

#### How Has This Been Tested?
This has been tested with [fpga-tool-perf](https://github.com/SymbiFlow/fpga-tool-perf) on the Hydra cluster with SymbiFlow's modifications, and compared to the baseline, an addition to tests run on CI.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",392b973db050028af49f6e5a00b72a8b60ef5264,
1608,7,True,352,322,10,4,"#### Description

This early work in progress for migrating from Travis CI to GitHub Actions. Not perfect yet, but it seems to work so far. I'm an absolute ignorant on the VTR codebase and on previous CI usage. I just dropped some hours here. Hence, any experienced user please review!

#### Related Issue

- Ref #1493
- Close #847
- Close #1473

#### Motivation and Context

/cc @mithro 

Discussion in verilator: https://github.com/verilator/verilator/issues/2658

#### How Has This Been Tested?

It's CI plumbing, so self-tested. See below 👇🏼 

#### Types of changes

This is a breaking change regarding CI, but should not affect the codebase at all. Not sure what to check below.

- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

Too early to check any of the items below.

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7ce9af305c5ae1538ef60a5fff08bea7a631bd9f,2021-01-14 18:57:51
1604,1,True,3,0,2,3,"
- [ ] All new and existing tests passed
",056db8ab215fea0eea71affdaaae795351e3e779,2020-12-14 16:15:14
1602,3,True,111,24,9,0,Added a change to the XML Schema so that atoms and regions can be added in any order. Also added ability to provide regular expressions in place of atoms.,397ad0fce03d6bec72f5a063438bca4afc25086a,2020-12-08 14:52:30
1601,1,True,5,0,1,8,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description

This PR solves a coverty issue on the delay normalization factor calculation function for which, in corner cases, there might be a division by zero.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b6b53323579fea23df4895c7d6e25b4ba9bc020f,2020-11-25 15:50:48
1600,5,True,1452,0,17,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
All the changes made on this branch were to facilitate parsing vpr constraints files. An option called ""--read_vpr_constraints"" was created and the uxsdcxx library was used to generate parsing files based on an XML schema called vpr_constraints.xsd

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",3b3a874755fd4a4a6d763b6428c91ab4bf8ee434,2020-12-02 17:01:43
1598,1,True,28,14,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Follow-up PR to add comments requested in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1576

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",573e78cd1e11a1ef62d4da5b64f31b669c9aabff,2020-11-27 00:56:25
1597,6,True,2490,1014,56,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
In this PR, I am adding a documentation for the supported VTR utilities in libs/libvtrutil/ path. The documentation was added by adding doxygen-compatible comments to the source. 

The main target of the docs are:
- Give a high-level comment about each utility
- Give a detailed description of the public method of each utility

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR should help new developers to easily understand the utilities supported by vtr and use them more efficiently.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
To generate the docs:
- clone the branch
- `cd  docs/ `directory
- `make html`
- The updated html is in doc/_build/html/index.html

The newly added documentations are in VPR API section, under Utilities title

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4b3d0baae107d38de34dd9ceabfc619138cfc0df,2021-02-22 21:29:08
1596,1,True,0,110,6,1,"<!--- Provide a general summary of your changes in the Title above -->
This PR remove the legacy codes from VPR codes base due to the obsoleted options `trim_empty_channels` and `trim_obs_channels`.

#### Description
<!--- Describe your changes in detail -->
The options impact only two parts of VPR:
- The setup function `SetupVPR()` where the options are loaded
- The routing resource graph builder `build_rr_graph()` where the options are input arguments and force modification on routing channels.

#### Related Issue
<!--- Pull requests should be related to open issues -->
To address issue #1552 

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The dead codes are no longer used in any tests and their functionality have been fully covered by the [custom switch block feature](https://docs.verilogtorouting.org/en/latest/arch/reference/?highlight=custom%20switch#custom-switch-blocks).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This PR does just clean-up. The removed codes are never called in any tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",fc4f474e98af1d5a9d91b2b0a58b138b13682eae,2020-11-19 19:23:05
1595,1,True,9,0,1,1,"This is a code comment as requested in #1591

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7b566162534745527526a975f1e92e9d3f122ecd,2020-11-27 00:56:54
1594,2,True,5,1,1,2,"<!--- Provide a general summary of your changes in the Title above -->
This PR fixes a bug with direct connection lookup during identification of placement macro heads.

#### Description
<!--- Describe your changes in detail -->
The function `net_is_driven_by_direct` looks up the `f_idirect_from_blk_pin` array using logical block index and its pin index. However, the array stores information for physical blocks and their pin indices.

In this PR I've added translation from logical to physical indices and used them for lookup.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
While defining architecture for a QuickLogic FPGA that utilizes carry chains I've encountered a VPR segfault during placement. During debugging I've noticed that the lookup index used in the function in question is greater than the array size which shouldn't be happening. Looking of how the `f_idirect_from_blk_pin` array is allocated and what it stores allowed me to identify the issue.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
For now only locally.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",0a1a3f909bdb50ca08d80ebee4a5b6a0c04133f1,2020-11-19 15:19:31
1593,5,True,750,530,16,7,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
There are several utility functions in `vpr_utils` which belong to the `arch_util` file instead.

This because these utility functions should work only at the device level, and should be callable without the need of invoking VPR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1587

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f067688656920a180b8d665b76cdf29132e675a8,2020-12-10 17:22:57
1592,1,True,23,0,2,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
It might be useful to get only the fan-in edges of a certain destination node, and currently the RR graph APIs do not provide such a possibility.

This PR adds a fan-in list constructor and its destroyer so that the extra memory is freed once the purpose of the fan-in lists has been fulfilled.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",73c5be9308f73a6363a926cab771cea5d6f0ad0b,2020-11-19 17:39:35
1591,1,True,1,2,1,6,"This PR moves an assertion related to chain pack-patterns elsewhere to allow for pb_type modes that break a chain.

#### Description
Whenever there is a chain pack-pattern that passes through a pb_type with a mode in which chain-related pins are unconnected VPR raises an assertion. This happens at the pre-packing stage (the circuit doesn't matter). I've attached an example arch.xml file to allow reproduction of the issue.

In the attached example `arch.xml` there is a top-level pb_type `PB-CLB` that has two modes: `LUT4` and `LUT4_CARRY`. The former hosts the `LUT4` BLIF model (a classic LUT4) while the latter hosts a LUT that also has carry input and output pins for adder implementation `LUT4_CARRY`.

The assertion is throws specifically when the interconnect of the `LUT4` mode includes the carry-chain pin connections to the underlying pb_type where they are actually unconnected. The assertion says:

```
vpr/src/pack/prepack.cpp:1606 get_all_connected_primitive_pins: Assertion 'connected_primitive_pins.size()' failed.
```

which is kind of misleading.

By digging into the code I've realized that this assertion is placed incorrectly as it is being triggered when no connected pin is found within a specific mode which does not necessary mean that the pin is not connected in other modes.

My proposal in this PR is to move the assertion right after the recursive check done in `get_all_connected_primitive_pins` to allow for such situations. This way the assertion will get triggered only if a carry pin is completely disconnected (in all modes).

#### Related Issue
None

#### Motivation and Context

I'm using the V2X tool (https://github.com/SymbiFlow/python-symbiflow-v2x) to generate pb_type XMLs. The tool automatically generate interconnects for modes regardless whether all pins are connected inside a mode.

I found that the issue can be worked around by simply removing the unconnected pin connections from a mode interconnect. However, I'd like the architecture specification to be more flexible as having such unconnected pins is not an error as the carry chain isn't really broken. Its just requires a specific mode to be selected to complete it. This is the reason for this PR.

#### How Has This Been Tested?
I wrote a test arch.xml file that is attached below to demonstrate the issue. The upstream VPR (i.e. from master) fails with it while the one with the fix from this PR completes successfully.
[arch.xml.tar.gz](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5510147/arch.xml.tar.gz)

The issue can be reproduced by running packing of any circuit with this architecture. The fail occurs at the prepacking stage and is not related to the circuit itself but rather to the arch.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

I'm not sure yet how to include the test with the attached arch.xml into the VTR flow but I can do that if it is requested.",bcd247d2d9962f8320b8bc3ea815c85cfc3fc2e8,2020-11-12 18:20:47
1589,2,True,113,32,3,0,"The old autolabeler GitHub App is no longer supported and broken. The new GitHub actions autolabeler is maintained by GitHub.

See https://github.com/actions/labeler#common-examples for defining patterns. The globs use ""minimatch"" syntax found at https://github.com/isaacs/minimatch",8b2c7b09df192f068a49e079d6a4b5dfbff1662a,2020-11-08 15:07:46
1588,2,True,27,22,9,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR adds the Lookahead and Place delay matrix computation times to the parsed metrics.

In addition, the Placement Timer is moved within the `try_place` function, so to not include the delay matrix lookup computation time.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a51820f435d636d68a860e644a0fd1436fee67ed,2020-11-12 18:34:41
1586,2,True,9,2,1,0,"#### Description

This adds a missing library (gcov) used by the profile guided optimization configuration, and adds a new variable to specify where to store the profile data (VPR_PGO_DATA_DIR.)

#### Motivation and Context

This is to enable PGO and make it more convenient to collect profile data.

#### How Has This Been Tested?

I have tested `VPR_PGO_CONFIG=prof_gen` and `VPR_PGO_CONFIG=prof_use` on my machine.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a119c23fe9d77faf2f4cba2c1396edf6ee6ab421,2020-11-11 19:20:09
1585,1,True,111,67,8,0,"…nctions

This PR has some changes that were requested on the new_constraints_class PR that has been merged. The changes include adding comments and turning some class member functions into global functions.
",f8631b352cf372dca4771edb9bc90b3407226c14,2020-11-05 16:36:49
1584,1,True,1,0,1,2,"<!--- Provide a general summary of your changes in the Title above -->

This Pr updates the code owner

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",098ef1a852378dc4940b2425036587590491323b,2020-11-08 14:56:32
1583,1,True,2,0,1,1,"This commit changes the OdinII maintainer

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",146f7c2b8b15eb8def0fcf4149cf0c951d8056d1,2020-11-03 18:03:23
1582,5,True,110,88,7,11,"#### Description
This PR adds some fixes so that `mingw-w64` `gcc` can successfully compiler `vpr`. _Only `vpr` is known to compile as of this PR._

Specifically:

* Use `_aligned_malloc` and `_aligned_free` on Windows instead of 
* Change `long` to `uintptr_t` or `intptr_t` based on context in `libvqm`.
* Do not include `sys/mman.h` header in `libvtrcapnproto`.

#### Related Issue
This PR should close #1317, but includes additional fixes so that compilation succeeds using `gcc` targeting native windows exes.

#### Motivation and Context
Per @vaughnbetz in [#1317](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1317#issuecomment-720684030), getting a Windows compile without Cygwin is desired, but hasn't worked in a few months.

#### How Has This Been Tested?
See below in Checklist for how I tested changes. `long` to `uintptr_t` or `intptr_t` should be a no-op on LP64 systems like Linux (and thus have no effect on the compiled code). However, _I am unable to test immediately on Linux_.

Environment:

* CMake command line:

  ```
  cmake -G""Ninja"" -DCMAKE_INSTALL_PREFIX=/mingw64 -DWITH_ABC=OFF -DWITH_ODIN=OFF ..
  ```

* System:

  ```
  William@DESKTOP-H0PMN4M MINGW64 ~/Projects/FPGA/vtr-verilog-to-routing
  $ uname -a
  MINGW64_NT-10.0-18363 DESKTOP-H0PMN4M 3.0.7-338.x86_64 2019-07-11 10:58 UTC x86_64 Msys
  ```

* Compiler:

  ```
  William@DESKTOP-H0PMN4M MINGW64 ~/Projects/FPGA/vtr-verilog-to-routing
  $ g++ -v
  Using built-in specs.
  COLLECT_GCC=C:\msys64\mingw64\bin\g++.exe
  COLLECT_LTO_WRAPPER=C:/msys64/mingw64/bin/../lib/gcc/x86_64-w64-mingw32/9.2.0/lto-wrapper.exe
  Target: x86_64-w64-mingw32
  Configured with: ../gcc-9.2.0/configure --prefix=/mingw64 --with-local-prefix=/mingw64/local --build=x86_64-w64-mingw32 --host=x86_64-w64-mingw32 --target=x86_64-w64-mingw32 --with-native-system-header-dir=/mingw64/x86_64-w64-mingw32/include --libexecdir=/mingw64/lib --enable-bootstrap --with-arch=x86-64 --with-tune=generic --enable-languages=c,lto,c++,fortran,ada,objc,obj-c++ --enable-shared --enable-static --enable-libatomic --enable-threads=posix --enable-graphite --enable-fully-dynamic-string --enable-libstdcxx-filesystem-ts=yes --enable-libstdcxx-time=yes --disable-libstdcxx-pch --disable-libstdcxx-debug --disable-isl-version-check --enable-lto --enable-libgomp --disable-multilib --enable-checking=release --disable-rpath --disable-win32-registry --disable-nls --disable-werror --disable-symvers --enable-plugin -- with-libiconv --with-system-zlib --with-gmp=/mingw64 --with-mpfr=/mingw64 --with-mpc=/mingw64 --with-isl=/mingw64 --with-pkgversion='Rev2, Built by MSYS2 project' --with-bugurl=https://sourceforge.net/projects/msys2 --with-gnu-as --with-gnu-ld
  Thread model: posix
  gcc version 9.2.0 (Rev2, Built by MSYS2 project)
  ```

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

First three are not applicable. As for the tests...

I have only compiled `vpr`, as that is at present the only part of `vtr` that I plan to work on. When I try running `python run_reg_test.py vtr_reg_basic`, the test hangs without any output, most likely because I only installed `vpr` and not the rest (fwiw, `abc` is known to compile fine on Windows).

However, when I run `test_vpr`, and `test_fasm`, I get the following output:

`test_vpr`:

```
William@DESKTOP-H0PMN4M MINGW64 ~/Projects/FPGA/vtr-verilog-to-routing/build/vpr
$ ./test_vpr.exe

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test_vpr.exe is a Catch v1.11.0 host application.
Run with -? for options

-------------------------------------------------------------------------------
read_arch_metadata
-------------------------------------------------------------------------------
../vpr/test/test_vpr.cpp:18
...............................................................................

../vpr/test/test_vpr.cpp:18: FAILED:
due to unexpected exception with message:
  Failed to open file

VPR FPGA Placement and Routing.
Version: 8.1.0-dev+0ff5a3d89-dirty
Revision: v8.0.0-2892-g0ff5a3d89-dirty
Compiled: 2020-11-03T01:40:31
Compiler: GNU 9.2.0 on Windows-10.0.18363 AMD64
Build Info: Release IPO VTR_ASSERT_LEVEL=2

University of Toronto
verilogtorouting.org
vtr-users@googlegroups.com
This is free open source code under MIT license.

VPR was run with the following command-line:
test_vpr test_read_arch_metadata.xml wire.eblif --route_chan_width 100


Architecture file: test_read_arch_metadata.xml
Circuit name: wire

Loading Architecture Description
Loading Architecture Description took 0.00 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB)
-------------------------------------------------------------------------------
read_rr_graph_metadata
-------------------------------------------------------------------------------
../vpr/test/test_vpr.cpp:114
...............................................................................

../vpr/test/test_vpr.cpp:114: FAILED:
due to unexpected exception with message:
  Failed to open file

Loading router wire lookahead map
Loading router wire lookahead map took 0.00 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB) VPR FPGA Placement and Routing.
Version: 8.1.0-dev+0ff5a3d89-dirty
Revision: v8.0.0-2892-g0ff5a3d89-dirty
Compiled: 2020-11-03T01:40:31
Compiler: GNU 9.2.0 on Windows-10.0.18363 AMD64
Build Info: Release IPO VTR_ASSERT_LEVEL=2

University of Toronto
verilogtorouting.org
vtr-users@googlegroups.com
This is free open source code under MIT license.

VPR was run with the following command-line:
test_vpr ../../vtr_flow/arch/timing/k6_frac_N10_mem32K_40nm.xml wire.eblif --route_chan_width 100


Architecture file: ../../vtr_flow/arch/timing/k6_frac_N10_mem32K_40nm.xml
Circuit name: wire

Loading Architecture Description
Loading Architecture Description took 0.03 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB)
Building complex block graph
Warning 1: io[0].clock[0] unconnected pin in architecture.
Building complex block graph took 0.04 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB)
Load circuit
Load circuit took 0.00 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB)
-------------------------------------------------------------------------------
connection_router
-------------------------------------------------------------------------------
../vpr/test/test_connection_router.cpp:110
...............................................................................

../vpr/test/test_connection_router.cpp:110: FAILED:
due to unexpected exception with message:
  Failed to open file

===============================================================================
test cases:    19 |    16 passed | 3 failed
assertions: 59875 | 59872 passed | 3 failed
```

`test_fasm`:
```
William@DESKTOP-H0PMN4M MINGW64 ~/Projects/FPGA/vtr-verilog-to-routing/build/utils/fasm
$ ./test_fasm.exe
VPR FPGA Placement and Routing.
Version: 8.1.0-dev+0ff5a3d89-dirty
Revision: v8.0.0-2892-g0ff5a3d89-dirty
Compiled: 2020-11-03T01:40:31
Compiler: GNU 9.2.0 on Windows-10.0.18363 AMD64
Build Info: Release IPO VTR_ASSERT_LEVEL=2

University of Toronto
verilogtorouting.org
vtr-users@googlegroups.com
This is free open source code under MIT license.

VPR was run with the following command-line:
test_vpr test_fasm_arch.xml wire.eblif --route_chan_width 100


Architecture file: test_fasm_arch.xml
Circuit name: wire

Loading Architecture Description
Loading Architecture Description took 0.00 seconds (max_rss 0.0 MiB, delta_rss +0.0 MiB)

~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~
test_fasm.exe is a Catch v1.11.0 host application.
Run with -? for options

-------------------------------------------------------------------------------
fasm_integration_test
-------------------------------------------------------------------------------
../utils/fasm/test/test_fasm.cpp:171
...............................................................................

../utils/fasm/test/test_fasm.cpp:171: FAILED:
due to unexpected exception with message:
  Failed to open file

===============================================================================
test cases:    14 |    13 passed | 1 failed
assertions: 11377 | 11376 passed | 1 failed

Error 1: fasm placeholder 'prefix' not defined!
```

Looks like most things are working, though it appears that the test binaries don't like me running them directly from the build directory. How should I go about testing with these binaries _properly_?",e4eb8a0a8ea636ef57afd7a14d444d676bc1c690,2020-11-19 19:25:07
1579,1,True,19,9,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

There seems to be a bug in check_rr_graph related to the check on the multiple connections between RR nodes.

While dealing with https://github.com/SymbiFlow/symbiflow-arch-defs/pull/1711 to fix the RR graph due to the presence of only one node for all the possible sides of a pin, I encountered the VPR error below:

```
Message: in check_rr_graph: node 279 (CHANX) connects to node 149 (IPIN) 2 times - multi-connections only expected for CHAN->CHAN.
```

Given that the comment prior to the check say that this pair of nodes can have multiple connections, I spotted a possible bug in the if statement.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9825c7f0990e1c3b2a8e2f945e24cfab81ef8ba8,2020-11-02 10:34:05
1576,15,True,303,265,25,51,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR aims at making the delay normalization factor used in the based cost calculation to be more representative of the real underneath device fabric.

Previous to this PR, the calculation of the const_indices' delays/resistance/capacitance was based on heuristics, which proved to be insufficient for complex RR Graphs such as the Series7 one.

All the nodes in the RR graph are now checked and their switches delays averaged, therefore we check now for every node instead of picking them as samples.

The main differences between the previous indexed data calculation are:
- `short` switches are no longer increasing the total delay values.
- If a node does not have any switch (due to the previous point), it's delay contribution won't be added to the whole sum.
- The delay normalization calculation is solely based on the previous rr_graph_indexed data instead of being based to some fixed values (such as `clb_dist`).
  - If nodes were not added and a cost index has null values, it won't contribute to the final delay normalization value.


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Base costs for Series7 device had a 15x reduction making the delay and base costs not comparable anymore.
The 15x reduction was due to an uncaught bug in the VtR/SymbiFlow fork, which get caught as soon as I had tested the upstream master against SymbiFlow tests.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Currently, all strong and basic test run through completion, but some of the strong tests do report a change in the observed metrics, which in all cases but one seem to be a positive change (less CPD, wire length, etc).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ed6c45610cf440c92172d9c362bb806530024dea,2020-11-19 19:26:01
1575,1,True,42,42,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR fixes an error that happens with old GTK version due to a bug in checking the available GTK version

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8f0dc6ebcd68f178fe0c84190a2e9f109a410e31,2020-10-20 18:21:38
1574,2,True,19,11,18,4,"Moving COFFE 22nm architectures from arch/timing to arch/COFFE_22nm
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
1. Moving 22nm architectures generated by using COFFE to a new
location (arch/COFFE_22nm). This shouldn't change anything functionally.
This is being done purely for organizational purposes.

2. Updating the paths to arch files in the task file files, for
the architectures that have moved to COFFE_20nm directory.

3. Updating comments about how the delays and areas in some
architectures were obtained (obtained from email conversations with Vaugh B. and Mohamed E.)

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
No issue exists. This was discussed in email threads with @vaughnbetz 


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This is being done for purely organizational purposes. No functional difference.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Ran vtr_reg_basic and vtr_reg_strong test suites. All tests passed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
None of the above.

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1c01005108197a247a8376585609d2aec29f8a18,2020-11-08 15:02:36
1573,4,True,21221,0,4,17,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR adds a new design to the VTR benchmark suite. The design is a Google TPU-like design and is a good representative of Deep Learning (DL) applications. 

There are two designs actually - one that uses a 32x32 matrix multiplication unit and another that uses a 16x16 matrix multiplication unit. 

There is a large comment section on the top of each file, which mentions the FPGA architectures that these designs have been tested with, the clock frequency/critical path obtained on each architecture and also the resource usage. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
No issue exists for this. This was discussed in email threads with @vaughnbetz .

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
In the current VTR benchmark suite, we don't have any benchmarks that are DL/ML related. Adding a DL/ML design will be helpful for researchers aiming to explore FPGA architectures for DL/ML applications.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Adding these doesn't modify an existing functionality. So, I haven't run any existing tests. I've run these VTR flow with these designs on the FPGA architectures specified in the files.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ x] My change requires a change to the documentation
- [ x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c115a0003943eacc844ad7d8bd42eef97852fa75,2020-11-08 15:28:29
1572,1,True,11,11,6,1,"Timeout was too low and causing long CI to fails, this commit increases
the timeout to prevent failures
@vaughnbetz thanks for binging my attention to this!

related to CI problem on #1548 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",fe79e711cbb400cc3a8652462b5265291fc14257,2020-10-14 00:04:06
1570,205,True,3375,681,148,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
In this PR a new placement algorithm is implemented. The new algorithm uses different directed moves in addition to the original random one. It also implements a Reinforcement Learning (RL) agent that chooses the optimal move type at each time step. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
As the device/ design size increases, the placement solution space increases exponentially. Hence, It is crucial to implement new techniques that can explore the solution space in a short runtime. Hence, in this PR, I have implemented some of the directed moves proposed in the literature and proposed new ones to target WL and timing optimization. To determine the probability of selecting each move type, Reinforcement Learning techniques were implemented. Several RL techniques are implemented as the best performing one was chosen as the default option. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The change was tested on VTR benchmark suite after excluding the tests smaller than 10k primitives and Titan23 benchmark suite. Different runtime/QoR points were compared to the master branch. 

The results are shown in [https://drive.google.com/file/d/1nNjJxhlBWXC8dTv1K5EhCv_Sq3fW2APM/view?usp=sharing ](url).
The VTR_summary and Titan_summary sheets shows a comparison between the master branch with default options and the new branch results with the proposed new defaults. It shows achieving the same or even better QoR while reducing the overall runtime 16% to 33% on average.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",91d70d5001f4ab7fe4d968149ad19853c946e27c,2021-01-05 20:45:15
1569,4,True,916,26,13,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This set of changes is designed to allow running full synthesis with custom .xml configuration supplied to ODIN as part of run_vtr_flow procedure. ODIN can now read command line parameters and mix them with configuration file. Also involves a couple of fixes to run_vtr_task and run_vtr_flow.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
The discussion was held [here](https://github.com/CAS-Atlantic/vtr-verilog-to-routing/pull/24)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The change allows to configure experiments and enable custom ODIN arguments, since currently run_vtr_flow redirects extra command line arguments are redirected to VPR, so there is limited ability to modify ODIN parameters without editing run_vtr_flow.py 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
There is a regression test and default results supplied within ODIN

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",703907b7f70bd65615b09766526efa178e349149,2020-12-14 16:16:00
1568,3,True,15,5,2,8,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR fixes an issue related to buffered nodes.
During the rr_graph_indexed_data calculation, the state of the switches of different segment type nodes are being checked and, currently, if two different computation of the buffering state of two nodes belonging to the same cost_index (e.g. same segment type), VTR throws an error.

The changes in this PR prevent VTR to throw the error, but instead, as the buffered switches ""win"" against the non-buffered ones, if a conflict is found when checking the buffering state of the switches of two nodes of the same segment type.
In case of conflict then, the buffered state of a node is set to one as there is no other possibility (e.g. the conflict can only be between zero and one).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1564#issuecomment-704348704

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Complex RR graph structure fail due to this too restrict check on the buffering state of some segments.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Strong reg tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f4d1c2608c89405c3b2b6e9c59eaca8e1d3ac69b,2020-10-14 14:32:34
1567,1,True,14,7,4,0,"Remove lingering references to old .pl files (now that we have switches to .py scripts for flow)

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context


#### How Has This Been Tested?
Existing CI tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",fef8bf8fc0de959099b94526c0e5759e0d1f8510,2020-10-07 15:31:01
1566,5,True,120,74,1,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Summary of changes:

1. Traverse through input and output pins of blackbox primitives and populate timing_arcs, Tsu, Thld, Tco in local netist_writer data structure.

2. Store and output the correct reference clock ports in SDF writing.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/SymbiFlow/vtr-verilog-to-routing/issues/537

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
There are multiple issues related to SDF writer for Blackbox primitive

1. The primitives being modelled as Blackbox have combinational and sequential timings. In present --analysis code, BlackBox combinational and sequential timings are not getting populated

2. Blackbox could have more than 1 reference clocks (e.g. Dual Port RAM). Current SDF generation does not handle timing checks w.r.t. specific clock. It uses a generic name ""clk"" to write out timing checks

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- Turned on analysis option and generated the SDF for following test suite
https://github.com/QuickLogic-Corp/symbiflow-arch-defs/tree/quicklogic-upstream-rebase/quicklogic/pp3/tests

- ran the vtr_reg_strong and passed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5dc8e8363a10114db8b786858e3a53aca1b5f60c,2020-10-08 11:00:44
1565,1,True,8,15,3,1,"The commit addresses several errors
CID 212805:  API usage errors  (PRINTF_ARGS)
Related to #1496

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The printf function used as part of the odin_error, was not even treated with a warning, while was caught as coverity scan.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Makes the code cleaner

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Executed make test in ODIN_II directory

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",7db7c892978c7a3a7e9a736ebde119d818a86359,2020-10-06 15:57:37
1564,20,True,349,7,14,28,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This is an initial PR to have the SymbiFlow XC7 architecture integrated within the `vtr_flow`.

There is an initial download step of the latest SymbiFlow package, with the extraction of the Artix 50T data to have it working within VPR:
- Arch XML
- RR graph
- Router lookahead
- Place delay matrix lookup

A very simple initial circuit file has been added, which represent a synthesized counter.

This PR is still marked as WIP for two main reasons:
- There is an issue with the architecture or too strict VPR checks around buffered switches. In fact, to let the test pass, I had to temporarily demote a VPR_ERROR to a warning. ([Issue](https://github.com/SymbiFlow/vtr-verilog-to-routing/issues/548))
- Need to either allow to correctly read symlinks within VPR to get the RR graph and other data files, or have the vtr_flow accept the addition of additional <flags, file> pairs and add them to the VPR command. The data files (RR graph, etc.) should be located in the `arch` directory.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
With the Symbiflow/VTR fork being almost equal to the upstream version, it is possible now to insert SymbiFlow tests within the vtr_flow. This helps to track possible regressions against SymbiFlow architectures, as well as increasing the robustness of the test suite. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
New symbiflow counter test added.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cf68a3a8497be179cda35876f9e47a6a3ffaef57,2020-12-15 17:37:31
1561,1,True,163,0,1,0,"Adds a unit test for the ConnectionRouter.

#### Description
This unit test is both to verify functionality, and as a starting point to experiment with the router.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
Unit tests allow quicker iteration because they run quickly and make it easier to locate bugs. Furthermore, they serve as documentation on to do something, and a starting point for changes.

Specifically, I'm working on parallel routing algorithms, so this is a starting point for that.

#### How Has This Been Tested?
The unit test passes in `make test`.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",42d484d76a333b3fbcc9bf69d89c4f0e5d80428f,2020-09-29 19:40:04
1560,2,True,14988,275164,284,2,"<!--- Provide a general summary of your changes in the Title above -->
#### Description
<!--- Describe your changes in detail -->

- Moving Constant Shift from partial_mapping to netlist_create_from_ast
- Supporting the Variable Shift using Barrel Shift design
- Passing a new variable in the entire netlist_create_from_ast to keep the value of assignment size.
- Adding benchmarks to cover all possible Shift operation criteria, such as operands' signedness, Arithmetic or Logical and Constant or Variable Shift.
#### Related Issue
Issue #38 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Odin-II still has not supported the entire Shift feature which is an essential operation in hardware programming and Verilog. By moving Constant Shift to the netlist_create_from_ast, the netlist node creation for the Constant Shift operation has been removed. Also, this approach adds the Variable Shift which has not been supported yet.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. make test (ODIN-II)
2. Basic Regression Tests
3. Strong Regression Test
4. Basic Valgrind Memory Tests (also, Valgrind memory tests for all other regression suits)
5. Sanitized Basic Regression Tests
6. Odin-II Micro Tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",8f45ccdddc38bc7a642263623597da52d94495cf,2020-09-24 17:59:35
1559,2,True,6,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This check seems to be causing an issue on the latest version of g++, where it's complaining about checking the sign on an unsigned type. See the issue linked for more information.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Closes https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1539

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Cleans up the build output, otherwise you get a warning everytime vector_map is referenced.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I built it successfully, and tested it on a super small circuit, everything seems in order.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",508dbbdfc1abef48a5acc3a7ac4be3f546b72d80,2020-09-29 22:07:45
1558,3,True,110,4,3,0,"This PR adds graphics to visualize the odin flow as well as graphviz support in sphinx to build them

",fe86c1831fa594aa2b572a011e1523b91d79b902,2020-09-24 18:00:39
1557,1,True,8,5,2,1,"
#### Description
Fix Coverity Scan for t_placer_costs in place_util.h.

**Original report:**
Please find the latest report on new defect(s) introduced to Verilog to Routing found with Coverity Scan.

1 new defect(s) introduced to Verilog to Routing found with Coverity Scan.
1 defect(s), reported by Coverity Scan earlier, were marked fixed in the recent build analyzed by Coverity Scan.

New defect(s) Reported-by: Coverity Scan
Showing 1 of 1 defect(s)


** CID 214341:  Uninitialized members  (UNINIT_CTOR)
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/vpr/src/place/place_util.h: 51 in t_placer_costs::t_placer_costs(t_place_algorithm)()


________________________________________________________________________________________________________
*** CID 214341:  Uninitialized members  (UNINIT_CTOR)
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/vpr/src/place/place_util.h: 51 in t_placer_costs::t_placer_costs(t_place_algorithm)()
45         double timing_cost;
46         double bb_cost_norm;
47         double timing_cost_norm;
48     
49       public: //Constructor
50         t_placer_costs(t_place_algorithm algo)
>>>     CID 214341:  Uninitialized members  (UNINIT_CTOR)
>>>     Non-static class member ""timing_cost_norm"" is not initialized in this constructor nor in any functions that it calls.
51             : place_algorithm(algo) {}
52     
53       public: //Mutator
54         void update_norm_factors();
55     
56       private:

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
",9e03a13faadd3018c6d573c44f47ddf8566da7d3,2020-09-22 02:58:24
1556,1,True,14,4,1,3,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR relaxes the assertion about the pin number when the model port is a clock input during prepacking.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1546

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

If an input PAD needs to be treated as a clock generator to add the possibility to have SDC constraints, VPR would throw an error on the PAD primitive as the clock pin would not be valid (according to the assertion), given that the input clock pin would be at position 0 instead of 1.

With this PR, the assertion is relaxed, in a way that now, if the driver block is of an `.input` type, the assertion does not get triggered.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",66835ae3e0c9bd147003767ed2186f47a784fe5b,2020-09-22 14:12:18
1555,4,True,61,105,6,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR refactors the code that allocates and loads the legal placement locations by
1. Moving the corresponding routines from vpr_utils.cpp to place_util.cpp as they are only used in placement
2. Removing num_legal_pos structure that only holds the number of elements in each vector and using .size() instead.
3. Merging alloc_legal_placement_locations and load_legal_placement_locations routines into a single routine
4. Adding a Doxygen compatible comment for the new function

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR addresses issue #1544 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR cleans the code up to improve code maintainability. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR refactors the code that allocates and loads the legal placement locations by
1. Moving the corresponding routines from vpr_utils.cpp to place_util.cpp as they are only used in placement
2. Removing num_legal_pos structure that only holds the number of elements in each vector and using .size() instead.
3. Merging alloc_legal_placement_locations and load_legal_placement_locations routines into a single routine
4. Adding a Doxygen compatible comment for the new function

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR addresses issue #1544 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This PR cleans the code up to improve code maintainability. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4d29a52c6afe948f8cbc2a525188b80b61b3d259,2020-10-08 17:18:11
1554,1,True,0,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
remove unused variable assignment  in draw.cpp that was caught by Coverity scan

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",429d4faf81fd8be89c2686a4dac99978ece504fc,2020-09-21 18:47:02
1553,1,True,2,2,1,1,"Although we moved to the Python flow scripts, there are a couple references to the Perl scripts in `.travis.yml`.  This fixes those.

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",06b706627ab0ab032e45bc971247d7f6983f0910,2020-09-22 17:25:33
1551,4,True,0,4321,6,4,"Remove old perl scripts that are no longer used by the VTR flow.

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
#1509 #1429 introduced new python scripts to replace the Pythons scripts.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",39a3884f1ec1991605a12aaf80f369983acbe1f9,2020-10-21 18:39:12
1549,1,True,22,0,1,1,"Added a section to talk about generating new golden results when a reg test is failing.
",8d2e2182603428ed176fc231485aea50b781feff,2020-09-21 23:40:10
1548,2,True,268,0,3,11,"<!--- Provide a general summary of your changes in the Title above -->

#### Description

This PR adds the note about documenting VTR code with Doxygen.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1471

#### Motivation and Context

The created document will give a brief introduction on how to use Doxygen for documenting the code. 
It will be useful for new developers

#### How Has This Been Tested?

I tested it locally. Additional tests and preview are available in the RTD CI.
[[CI PREVIEW]](https://vtr--1548.org.readthedocs.build/en/1548/dev/code_documentation/)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",148534da644c84ee5698c9aeb491a4fa897fbff7,2020-10-13 16:59:51
1547,1,True,3,2,1,1,"Signed-off-by: Andrew Butt <butta@seas.upenn.edu>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
In the case where a design contains more SLICEMs than there are CLBLM_Ls in the architecture, the initial placement would still accept the CLBLM_L as a valid placement tile, resulting in a lack of sub_tiles to make the placement. This happens because there was no distinction of valid sub_tiles for a SLICEM, so the CLBLM_L still has free SLICELs allowing CLBLM_L to be chosen as a placement tile for a SLICEM while not having any free SLICEM sub_tiles. This fix only checks the free locations of valid sub_tiles, causing CLBLM_L to be rejected for placement of a SLICEM and allowing the CLBLM_R to be used instead.

I made this fix when using the symbiflow-arch-defs defined architectures, but the issue is relevant for all architectures with heterogeneous tiles.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1298 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This fix allows designs that use a large percentage of available heterogeneous sub tiles to be placed without error.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The fix has been tested locally, but it might be useful to add a test with some small test architecture.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5cf005ba3979478a65cfd18b3302bf705101bc24,2020-09-25 20:03:12
1545,1,True,0,924,6,1,,48191df6d9af8e914a28a110c669bde3cb80303f,2020-09-16 15:50:59
1543,2,True,170,110,3,1,"#### Description
#1529 
- [X] Created placer context for accessing various data structures.
- [X] Moved timing update related routines to place_timing_update.h/cpp.
- [X] Moved connection delay related routines to place_delay_model.h/cpp.
- [X] Added documentation on Override Delay Model.

#1534 (Discussion) #1542 (Merge)
- [X] Merged t_placer_costs and t_placer_inverse_costs.
- [X] Use t_annealing_state to reduce function argument list's length.
- [X] Refactor t_annealing_state update routines.

**(This PR)**：
- [X] Moved t_placer_statistics to place_util.h/cpp and clean up related routines.
- [ ] Change all pass by pointers to pass by references (only for utility structures in place_utils.h).
- [ ] Wrap timing update related classes into a single object and either 
          **(1. pass by arguments)**
          **(2. move it into the placer global context)**

Future PR ideas:
- [ ] Move all the bonding box cost (wiring cost) routines into new files.
- [ ] Move all the placement consistency checking routines into new files.
- [ ] Move all the placer status report/logging routines into new files.

#### Motivation and Context
Refactor place.cpp to modularize it and reduce its length and complexity.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

",4ce01cfe8e94d7b63273885333322acb8d0a1e3d,2020-09-15 14:52:17
1542,4,True,596,418,3,0,"
#### Description
A PR split out from the larger PR #1534 
This PR is checked out at one of the intermediary commits that passed the code review.
Merging this PR will make it easier for reviewers to review code in #1534, where new commits have already been pushed.
",6f31f7a0ca93d1ac7fe4e9ea3c891c95609a8d50,2020-09-14 23:04:43
1541,1,True,2,1,1,3,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This fixes an issue when reading placement files.
Placement files can be read for two different reasons:

1. Prior to the routing stage if the flow is divided in three diffrent calls to VPR P&R stages
2. To read placement constraints files. 

In SymbiFlow, there are a set of tests which are automated and the verilog design alongside with the PCF constraints is automatically generated. The PCF constraints will translate into a placement constraints file.

The issue is that, during the various test design generation, some parameters may allow for some IO signals to be unconnected after synthesis, conflicting with the fact that VPR throws an error if a block specified in the placement constraints file is not present in the packed netlist.

Instead of throwing an error, this PR downgrades the error to a warning.

Another possible solution would be to encapsulate the check in a sub-routine that can be disabled at run-time with a flag (https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/25efd6670f14c1f23d976ef820ead8ef9b7c5e37/vpr/src/base/read_options.cpp#L1309-L1314).
This would require a sub-routine as the errors would otherwise be disabled in all the original routine, and those are errors which should not be disabled.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
SymbiFlow tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ad91333db0458df466f45203294cc03efe8ec16d,2020-09-15 14:06:32
1536,5,True,63,58,10,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Followup of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1449.

This PR is a followup to solve some outstanding comments on the lookahead extended map that require some more work.
To not have to wait a full CI build once again, these changes are applied to this followup PR

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",eeb9f85926451ca29402ff0209bc8db6d8ec1a42,2020-09-16 16:02:25
1535,13,True,820,0,11,14,"<!--- Provide a general summary of your changes in the Title above -->
A draft header file containing an overview of the new constraints class was created. The constraints class will read in constraints information from an XML file. This information will be used during the packing and placement stages of VPR

#### Motivation and Context
This class is being created to address issue #932 Add Placement Constraints to VPR
",687105bd46839ac548ad6f7cc996b65723f86610,2020-10-27 16:38:50
1534,6,False,728,490,3,10,"#### Description
#1529 
- [X] Created placer context for accessing various data structures.
- [X] Moved timing update related routines to place_timing_update.h/cpp.
- [X] Moved connection delay related routines to place_delay_model.h/cpp.
- [X] Added documentation on Override Delay Model.

#1534 **(This PR)**
- [X] Merged t_placer_costs and t_placer_inverse_costs.
- [X] Use t_annealing_state to reduce function argument list's length.
- [X] Refactor t_annealing_state update routines.

Future PR ideas:
- [ ] Move all the bonding box cost (wiring cost) routines into new files.
- [ ] Move all the placement consistency checking routines into new files.
- [ ] Move all the placer status report/logging routines into new files.
- [ ] Put timing update related structures into placer global file. 

#### Motivation and Context
Refactor place.cpp to modularize it and reduce its length and complexity.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

",4ce01cfe8e94d7b63273885333322acb8d0a1e3d,
1532,9,True,84,140,9,0,"run_vtr_flow.py is currently looking for executables (abc, vpr, etc) on the PATH instead of using the paths to the compiled tools within the VTR repository.  This fixes that issue

#### Description
Add new paths.py with python Pathlib paths for all VTR executable paths.  Use these paths in run_vtr_flow.py

#### Related Issue
#1523 

#### How Has This Been Tested?
Regression tests
As per #1523, tested vtr_reg_string with abc executable on PATH.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2b7daca2da1dd3fc1a1e3bb899ded7cb04091d00,2020-09-11 15:28:22
1531,3,True,79,5,2,4,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Additional in-code comments around physical tiles, logical blocks and sub tiles.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1527

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a417607c95cfb9e46a9e29cd1ffcf3c995e26499,2020-09-16 07:56:26
1530,1,True,1,1,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
When reading the place constraints file (`.place`) to fix some clusters, there was a bug in the token count. More precisely, the if statement that checked the token count did not take into account that there can bee more tokens than the ones specified due to the possibility to add comments to each line that generate several tokens when parsing a line.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e0c2a82f25ff10b37ebed35ffec342fbbfdffb60,2020-09-09 14:09:30
1529,3,True,847,600,12,8,"
#### Description
PR in progress. More to come...
- [X] Created placer context for accessing various data structures.
- [X] Moved timing update related routines to place_timing_update.h/cpp.
- [X] Moved connection delay related routines to place_delay_model.h/cpp.
- [ ] Merge t_placer_costs and t_placer_inverse_costs.
- [ ] Use t_annealing_state to reduce function argument list's length.

#### Motivation and Context
Refactor place.cpp to modularize it and reduce its length and complexity.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

",2f1b25d67f4eaae7c81187e8a288923128e0143a,2020-09-11 01:55:54
1528,1,True,3,3,1,1,"```
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/simulate_blif.cpp: 564 in is_node_ready(nnode_t *, int)()
558 npin_t* pin = node->input_pins[i];
559
560 bool has_missing_driver = false;
561 for (int j = 0; j < pin->net->num_driver_pins && !has_missing_driver; j++)
562 has_missing_driver = pin->net->driver_pins[j]->node == NULL;
563
>>> CID 214202: Null pointer dereferences (REVERSE_INULL)
>>> Null-checking ""pin->net"" suggests that it may be null, but it has already been dereferenced on all paths leading to the check.
564 if (!pin->net || has_missing_driver) {
565 bool already_flagged = false;
566 int j;
567 for (j = 0; j < node->num_undriven_pins; j++) {
568 if (node->undriven_pins[j] == pin)
569 already_flagged = true;
```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] All new and existing tests passed
",04b4c31065fc2dd4de7f857bda9acba4f0803d49,2020-09-09 19:35:02
1525,1,True,1,1,1,8,"This is a short commit that helps fixing the build breakage, with suggesting proper library.
Simplifies ease of use

Signed-off-by: Georgiy Krylov <georgiy.krylov@unb.ca>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Since the changes mid-August, the build on the main branch would fail if libgtk-3.0-dev was failing.
The suggested to the CMake error message fix resolved it for me, while the original message was 
insufficient

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Building using the suggested library succeeded. Ubuntu 19.10
gcc version 7.5.0 (Ubuntu 7.5.0-3ubuntu1~19.10) 



#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
N/A

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed

Since it is a ""documentation"" change, nothing should be affected.
",02be4bd64752ebb06247c542241e1d3a695aa920,2020-09-08 13:32:36
1522,10,True,416,132,13,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR follows #1287 . In this PR, some code refactoring was done while preserving the same functionality.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Taking into consideration some code review comments on #1287 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
test that the UI is working for multiple VPR benchmarks
test that the feature is disabled if the compilation or the code flag is disabled

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ x] All new and existing tests passed
",fb6cda309452f46c1c5d10ec660613c2eb0e3ccc,2020-09-10 17:11:43
1521,1,True,1,1,1,0,"fixed the image link for toggle block internal documentation.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The link for the gif showing how block internals work was incorrect and the gif wouldn't display on the website. I corrected the link in this PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e8a831f6e1330abf75712a9297a40926e5f27b64,2020-09-03 23:11:02
1519,1,False,1,1,1,0,"I ran into a problem with kokoro when running checks for branch: initial_analytic_placer
This branch contains no real changes and it is here just to see if there's a problem with kokoro.

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d8a2061215b0d37b20d0d07fa509c563e69ef8da,
1518,2,True,9,34,1,2,"<!--- Provide a general summary of your changes in the Title above -->
Refactored check_sink to use the traceback's net_pin_index so that code can be simplified. Also fixed the weak sink check.

#### Description
<!--- Describe your changes in detail -->
- Allow net_pin_index of the traceback to be passed into the check_sink function.
- use the net_pin_index so we can get rid of the loop through all sinks for a match.
- implemented strong check by making sure that we hit a netlist pin exactly once.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The old check was a weaker check as it wasn't actually checking that we find a sink matching each pin in the net; it just checks that we find N sinks for a fanout N net, and each sink appears to connect to a block that is reasonable (matches some pin on this net).  it was really just counting them and making sure we hit N sinks that were reasonable, but not that each was different. So a strong check replacement is needed.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- Passed Travis CI tests
- VPR succeeded for the larger new Titan DLA_BSC benchmark using post-fit netlist and input pin equivalence to RAMs and DSPs

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",80414b4eeb77f18bdd3f8f63cb01ba1314821975,2020-09-02 13:47:54
1517,1,False,15,15,4,1,"`make format` makes these changes on my machine.

#### Description
I ran `make format`.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
I would like `make format` to not make an format changes on master.

#### How Has This Been Tested?
Standard CI tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4f311ff36df74da8b3dfa09d035ec79b76b7371b,
1516,2,True,42,5,3,0,"Update RR graph node IDs in node and edge metadata when using RR graph node reordering.

#### Description
Bitstreams produced with node reordering (a `--reorder_rr_graph_nodes_algorithm` other than `none`) were not building with `fasm2bels` due to scrambled metadata.

#### Related Issue
#1270 

#### Motivation and Context
This fixes metadata when using RR node reordering.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
`fasm2bels` tests now pass on [`fpga-tool-perf`](https://hydra.vtr.tools/jobset/dusty/fpga-tool-perf#tabs-jobs).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7811b27cefd0bf12f23a18c7c04ba66870ffaf1b,2020-09-02 15:08:17
1515,1,True,6,5,1,0,"The fix_pins placer option no longer takes the third argument of a place file specifying I/O pad locations. The documentation was updated to reflect this change, and to say that the same task can now be done using fix_clusters.

",f627ca71e8da5d0ff6b72e7886ea0659cfabec7d,2020-09-03 23:11:52
1514,1,True,42,42,1,4,"Fixes #1513.

https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-widget-set-margin-left
> gtk_widget_set_margin_left has been deprecated since version 3.12 and
> should not be used in newly-written code.
>
> Use gtk_widget_set_margin_start() instead.

https://developer.gnome.org/gtk3/stable/GtkWidget.html#gtk-widget-set-margin-right
> gtk_widget_set_margin_right has been deprecated since version 3.12 and
> should not be used in newly-written code.
>
> Use gtk_widget_set_margin_end() instead.",304f548d44d872351dcb3f34fd70b51191435f6a,2020-08-29 19:54:37
1512,233,False,4050,725,102,2,"This pull request will be making the same changes as the manual_move_generator PR. Due to many unclear failures in manual_move_generator PR, I've created a new branch to help debug those failures.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The manual move generator allows the user to set moves during placement. After indicating the move, the user is presented with the costs of the move and can choose whether they want to accept or reject it.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",540d4a602a0b7d7110c209317b576826e28b8d47,
1511,2,True,5,17,1,2,"This moves Travis to use `bionic` which is Ubuntu 18.04.5 LTS and has support until April 2023.

The ""End of Standard Support"" for Ubuntu 14.04.6 LTS was April 2019 which has meant things like the llvm upstream packages have started to remove support. For example from https://apt.llvm.org/;
> Aug 20th 2019 - Ubuntu Trusty removed (EOL)

Fixes #1505
",98c3b172d9a130786236ac96fde7fe4661463221,2020-08-28 19:22:21
1510,1,True,21,8,5,11,"Added a requirements file  

#### Description
This is needed because there are new packages required by the new python code in this [pull request](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1509)

#### Related Issue
No related issue.

#### Motivation and Context
We should document required packages.

#### How Has This Been Tested?
Run the new python scripts without the required packages, see it fail, run `pip install -r requirements.txt` and rerun the new python scripts

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3fbcec11c01a807a5428c4546bc6c308398d7f6e,2020-09-12 23:28:16
1509,3,True,2741,160,54,16,"run_reg_test, run_vtr_task, parse_vtr_task and parse_vtr_flow have all been converted to python

#### Description
Using the [old python rewrite branch](https://github.com/verilog-to-routing/vtr-verilog-to-routing/tree/vtr_script_py_rewrite_old) as a starting place, I converted run_reg_test.pl, run_vtr_task.pl, parse_vtr_task.pl and parse_vtr_flow.pl to run_reg_test.py, run_vtr_task.py, parse_vtr_task.py and parse_vtr_flow.py.
These should be direct replacements of the perl counterpart.
Be aware that I placed the parse_vtr_task and parse_vtr_flow within the python library created by the run_vtr_flow pull request.

#### Related Issue
[The issue this partially fixes](https://github.com/SymbiFlow/ideas/issues/16)

#### Motivation and Context
We want to be able to run the vtr test suite without requiring perl to be installed.

#### How Has This Been Tested?
All regression tests pass by using run_reg_test. 
I tested the scripts individually and together, ensuring all parameters are enabled and work.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality): run the python script counterpart instead of perl 
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed: This is contingent on the golden results failure being fixed by [this pull request](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1479).
",8344ec47327bca5e8e698f17b47c0d50f128ec64,2020-09-17 17:28:22
1508,15,True,191,165,16,8,"<!--- Provide a general summary of your changes in the Title above -->
**[Edited]**

In this pull request, I have refactored the rt_node and traceback structures, adding a new member in the structure to keep track of the net pin index  (ranging from 1 to fanout) of sinks. I've also updated all parts of the code to properly store and access this new member.

#### Description
<!--- Describe your changes in detail -->
- Fixed **traceback_to_route_tree()** function to create and connect separate rt_nodes if the same rr node index is hit more than once walking the traceback.
- Added a new member in the rt_node and traceback structures to keep track of the net pin index of sinks (ranging from 1 to fanout).
- When a new rt_node is created, made sure to add the node's associated net pin index to the new member if it is a sink node. If it's not a sink, -1 is stored. Same applies for traceback instances.
- Updated various other functions to use this new member instead of using the **rr_sink_node_to_pin** mapping,
- Modified **print_route** routine to print out sink net pin index to the router file (.route).
- Modified **load_routing** routine to read in sink net pin index from the router file (.route) and store it in the traceback.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1475

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
As part of a Stratix IV architecture experiment, we tried forcing a greedy and false pin-equivalence to the M9K, M144K, and DSP inputs (meaning that although equivalence is set to ""full"" on the top level input pins, the local routing of these blocks is still partially fully connected).

When running benchmarks with this experiment, VPR failed in routing because it was attempting to delete the same node twice from the route tree. This happened because the the clustered netlist builder for logic blocks mapped the same net to multiple pins in a port, resulting in multiple rt nodes being created with the same rr node index. However, the code is inconsistent: when building up the route tree from traceback, only one rt_node is created for each rr node index found in the traceback, so edges are created between the same two nodes multiple times; this is problematic during deletion.

This never happened in the past because pin equivalence had always been applied to the LABs. The LABs have proper pin equivalence set up in the architecture capture. In a fully equivalent port, each pin should be mapped to a unique port, so the clustered netlist builder doesn't connect a net more than once to a port if it goes to multiple equivalent inputs in this case.

While investigating the case, I found multiple other issues that would arise if multiple sink-type rt nodes share the same rr node index. Several parts of the routing code need to use the net pin index of a node, but the rt_node structure only retains the node's rr node index value, so the rr node index is translated into its corresponding net pin index through  the **rr_sink_node_to_pin** mapping, which could only map a rr-node index to ONE of its corresponding net pin indices.

If the architecture capture is modified properly with true equivalent ports to the DSP and ram blocks, this problem can be avoided. However, this is still a bug that we should address. If we one day take different speed paths to the same sink for different target_pins, we want to associate the route tree branch with the target_pin we were trying to route to (and hence make sure we get the branch with the timing we expect).

One way to fix this problem is to make **rr_sink_node_to_pin** a multimap, but that still makes it difficult to determine which pin a particular rt_node corresponds to if its node index maps to several net pin indices.

The best way to fix this once and for all is to have net pin index stored in the rt_node structure as well, so no more mapping is required.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- Tried running large ML designs (e.g. DLA variants) through VPR with greedy and false pin-equivalence to the M9K, M144K, and DSP inputs, which succeeded with results that make sense.
- Tried running large ML designs (e.g. DLA variants) through VPR with the existing SIV architecture capture, which succeeded with the same resource usage results as before. Fix did not increase VPR runtime.
- Passed regression test and QoR checks

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",45f56233bb0c621f1bd58d5e38afe5b2bfefc420,2020-08-31 16:14:19
1507,2,False,73,23,3,0,"Currently the LLVM apt repo is a little bit unreliable, hence we need to move the compiler install to a later stage were we can do things like retries. This also means that any LLVM failures will only affect the steps that actually need the clang compiler.

TODO before merging;
 - [ ] Set up a local caching apt-proxy.
 - [ ] Figure out if we should move more from the `packages` section to be manually installed.",380b72f6dca6e91510ec7a2e09569a606f2ac57a,
1506,1,True,1,1,1,0,,37a0477f0744fb5cfa796401af9a40312e0feadd,2020-08-28 00:28:01
1504,39,True,2919,65,19,17,"Analytic placer algorithm itself is in analytic_placer.cpp, and cut_spreader.cpp
See analytic_placer.h, cut_spreader.h for algorithm summary

An off-the-shelf linear algebra package, Eigen is added to solve matrix equations
A new CMake option, **VPR_ANALYTIC_PLACE** is added.
CMakeLists.txt are modified to check eigen dependecy, if VPR_ANALYTIC_PLACE is set to ON (current default is ON, can change in $VTR_ROOT/CMakeList.txt). If Eigen3 is not found, analytic placement will be disabled, until user manually install eigen3 and rebuild.

A new VPR option **--enable_analytic_placer** is added, false by default
When disabled, the original placement algorithm is run
When enabled, AP takes over after initial_placement, and returns a legal placement to annealer. Annealer is disabled by setting first_t = 0, and goes straight to quench for further optimization

VTR_LOG now captures stats at each iteration of AP.

A new strong test is added to test this option and flow. 

VTR benchmark results for various AP configurations are attached here:
[AP benchmarks (1).xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5185472/AP.benchmarks.1.xlsx)
Notable: for latest revision of AP, place_time for (AP stall=15, quench*25, quench timing recompute * 5) improved by **over 25%** compared to old result. Every AP configuration may need to be rerun to update all the runtime numbers.

Usage example:
(ensure CMake option VPR_ANALYTIC_PLACE is ON when building)
$VTR_ROOT/vpr/vpr  <architecture>.xml    <netlist>.blif   --enable_analytic_placer true

#### Related Issue
#1503#

#### Motivation and Context
To experiment and research Analytic Placer. See related issue for more details.

#### How Has This Been Tested?
vtr_reg_basic, vtr_reg_strong, vtr_reg_titan, with --enable_analytic_placer true
runs are successful but fails golden test as it produces different results, which is expected
with --enable_analytic_placer false it passes all test.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",757f990f3e26c89351f9979b760148f4c388819c,2020-09-09 23:20:53
1502,1,True,389,221,9,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR adds support for tristate gates to the rtl arithmetic library
Also fixes string display to convert unbounded binaries to decimal strings without converting to integers.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f4319b5ecdd56774733fe1600a84607a605a0512,2020-08-25 04:48:27
1501,28,True,1356,441,15,24,"#### Related Issue
simplified version of #1450 for easier code review and merging.

#### Copy of the note in the original PR
Hi @HackerFoo. Please checkout this draft PR to see if it's easier for you to review. 
New features:
1. ```try_swap()``` routine along with ```analyze_setup_slack_cost()``` routine.
2. The new ```PlacerSetupSlacks``` class in ```timing_place.h/cpp```
3. Three new timing update related routines: ```update_timing_classes()```, ```update_timing_cost()```, ```perform_full_timing_update()``` in ```place.cpp```.
4. VPR option to turn on setup slack analysis during placement quench: ```--place_quench_metric {auto, timing_cost, setup_slack}```

My steps for this PR:
1. ```PlacerSetupSlacks``` is an imitation of the class ```PlacerCriticalities```, and is utilized to get setup slacks from Kevin's Tatum timing analyzer.

2. I changed the original ```recompute_criticalities()``` to ```update_setup_slacks_and_criticalities()``` so that both categories of values can be updated.

3. One problem now occurs. Originally, each time the timing graph is updated by calling ```timing_info->update()```, the criticalities are updated as well. These updates use incremental techniques so that they only checkout modified atom pins returned by the timing analyzer. However, now the timing graph might be updated only for the setup slacks (without having criticalities updated). On the next iteration of criticalities update, it cannot use the incremental technique anymore, since more pins will have been modified than the ones the timing analyzer currently returns. In this case, the criticalities have to be recomputed from scratch (going through each sink pin).

4. To resolve this issue, I created the ```t_timing_update_mode``` class to keep track of the slack/criticality update status. ***No documentation on this structure at this commit.***

5. Now with the timing stuff down, I need to implement the setup slack analysis during the placement quench stage. So I made a vpr option ```--place_quench_metric``` to ask the user whether or not to turn on the new analysis technique in the quench.

6. I modified the ```try_swap()``` routine so that, if using the slack analysis, it will do a timing_update to get slacks, analyze, and then decide whether or not to accept the move based on the slack improvement. If accepted, the timing update will be kept; if rejected, I revert the timing update so that the slacks in the timing graph returns to their original values. 
Note that these timing updates will not involve changing criticalities (hence I had the consideration for point #3 and #4), and I've made a lot of testings to make sure that the timing update reversion works.",06c9cf6425e435ef9af7ceca96a8039908f2e176,2020-09-09 00:19:53
1499,20,True,229,4,3,5,"<!--- Provide a general summary of your changes in the Title above -->
Running Quartus Fitter using a Stratix IV device can introduce some one-LUTs in the post-fit netlist that makes it harder for VPR to place and route. So if we want to run VPR with the post-fit netlist, the existence of these one-LUTs can hurt wire length and timing results. Adding a function in vqm2bliff to get rid of these one-LUTs before converting the post-fit VQM to BLIF

#### Description
<!--- Describe your changes in detail -->
In the cleanup netlist stage of VQM2BLIF, a netlist is built and the buffer/inverter nets are removed. I've added a function in this stage that serves to remove any feeder one-LUTs in the netlist as well.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
VPR performs better with the one-LUTs removed.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested on some large Titan benchmarks such as the FFT and DLA variants

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4dd3a83a6205bad1b6ec5cfea892e5216a2513c5,2020-08-28 00:45:51
1498,1,True,56,23,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Changed format to be more insightful and useful.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",67c1628f9789b6445ba054c0e7a64438a5182d5b,2020-08-24 16:34:12
1497,1,True,4,4,2,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
warnings are thrown on gcc 10.0.1

```
../ODIN_II/SRC/include/MixingOptimization.hpp:38:38: warning: extra ';' after in-class function definition [-Wextra-semi]
   38 |     MixingOpt() { _enabled = false; };
      |                                      ^
      |                                      -
../ODIN_II/SRC/include/MixingOptimization.hpp:55:6: warning: extra ';' after in-class function definition [-Wextra-semi]
   55 |     };
      |      ^
      |      -
../ODIN_II/SRC/include/MixingOptimization.hpp:161:24: warning: extra ';' after in-class function definition [-Wextra-semi]
  161 |         : MixingOpt(){};
      |                        ^
      |                        -
In file included from ../ODIN_II/SRC/MixingOptimization.cpp:29:
../ODIN_II/SRC/include/netlist_statistic.h:7:59: warning: type qualifiers ignored on cast result type [-Wignored-qualifiers]
    7 | static const uintptr_t mult_optimization_traverse_value = (const uintptr_t)&traversal_id;
```

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",97a87a9d54fad67307ca964fa51c02b7ba1c2a2f,2020-08-21 21:22:56
1496,5,True,2731,11,25,2,"#### Description
These changes address problem of ODIN's inability to use smaller number of multipliers than it is requested by the circuit. The changes are designed to work with multipliers first, should be easy to extend to adders and other blocks due to the class hierarchy introduced.


#### Motivation and Context
This change is required since sometimes, the synthesis flow for fixed layout would break even if the logic could be attempted to be implemented in soft logic that is not used otherwise. Moreover, setting a limit to number of hard blocks for auto layouts might change  the shape of a device and could prevent from growing the device unnecessary.

The discussion about the design choices was happening in CAS-Atlantic fork of  the repository, available by https://github.com/CAS-Atlantic/vtr-verilog-to-routing/pull/7

#### How Has This Been Tested?
The testing suite is included. Involves simulator verification for correctness, sanitizer checks for several cases: no arch, just mults, fracturable mults

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",6359c1d74786af68a198cdba3f7b702f36c3b8fa,2020-08-21 19:22:57
1495,2,True,99,43,6,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
memory leak on copied node initial value.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",673d0d3fb7f155e922a9c99ec43ee832d44e3b88,2020-08-21 14:34:57
1494,15,False,1178,45,13,3,"<!--- Provide a general summary of your changes in the Title above -->
The manual move generator allows the user to set moves during placement.

#### Description
<!--- Describe your changes in detail -->
The manual move generator allows the user to set moves during placement. After indicating the move, the user is presented with the costs of the move and can choose whether they want to accept or reject it.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Currently, the moves in placement are chosen quite randomly, and this feature allows the user to set specific moves.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2af4b7ac0c457d82de2b0b968443dad24565a863,
1491,13,True,76,14,5,4,"<!--- Provide a general summary of your changes in the Title above -->
To allow VPR to run the large TItan designs with the post-fit netlist, some changes to VPR and the architecture had to be made.

#### Description
<!--- Describe your changes in detail -->
architecture changes:
1. added stratixiv_clkena clock control primitive
2. added four more PLLs, for a total of 16 to model the global clocks on the Stratix IV device

VPR changes
1. fixed forever loop issue in auto device resizing. It is possible for the loop to get stuck if the design used too many resources of a particular type (more than the device limit), so it will keep looking for larger devices without finding one that could fit the resource. Added a check in there to limit the loop

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Allows for running larger circuits with the post-fit VQM. This gives results closer to that of Quartus II.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested on the FFT and DLA Titan benchmark variants
Passed Travis CI tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] Bug fix (change which fixes an issue)
- [x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",c075052747012061869ef3ef753796317cf9895c,2020-08-27 03:34:16
1490,9,True,210,186,4,7,"…functions

<!--- Provide a general summary of your changes in the Title above -->
Two new functions - read_place_header and read_place_body - were created to replace read_place and read_user_block_loc. Read_place and read_user_block_loc had some similar code that could be condensed into the same function, which was done in read_place_body.

#### Description
Read_place_header now reads in the first two lines of a place file, this used to be done in read_place. Read_place_body reads in either a place file (minus the header) or a constraints file, which used to be done in two separate functions: read_place and read_user_block_loc. 

#### How Has This Been Tested?
Tested with fix_clusters option (which calls read_place_body) on individual circuits. Also tested that functions work when loading a placement file. Also checked that it passes basic and strong reg tests.


#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",5192d2cbe4fcf616a9d6097862f3e1b14092db09,2020-09-08 13:55:12
1489,3,True,200,42,3,2,"
#### Related Issue
#1467 

#### Example report
[ipin_report.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5099061/ipin_report.txt)

#### Reproduce
1. cd to the VTR root directory
2. ./vtr_flow/scripts/run_vtr_flow.pl ./vtr_flow/benchmarks/verilog/diffeq2.v ./vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml -crit_path_router_iterations 100 --max_logged_overused_rr_nodes 50 --route_chan_width 32 --generate_rr_node_overuse_report on -temp_dir report_test
3. ls report_test/report_overused_nodes.rpt

#### Note
I added block information for OPINs as well. If this is not desired, I'll discard this feature.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6ef581f5c5128222817bce10e44f981265843215,2020-08-21 01:48:14
1488,1,True,165,7,2,0,"<!--- Provide a general summary of your changes in the Title above -->

```
New defect(s) Reported-by: Coverity Scan
Showing 1 of 1 defect(s)


** CID 212134:    (PRINTF_ARGS)


________________________________________________________________________________________________________
*** CID 212134:    (PRINTF_ARGS)
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/verilog_bison.y: 1105 in ieee_filter(int, int)()
1099                            if(ieee_version < ieee_2001)
1100                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 2001 or newer\n"",return_type)
1101                            break;
1102                    }
1103                    case vUWIRE: {
1104                            if(ieee_version < ieee_2005)
>>>     CID 212134:    (PRINTF_ARGS)
>>>     Argument ""return_type"" to format specifier ""%s"" was expected to have type ""char *"" but has type ""int"".
1105                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 2005 or newer\n"",return_type)
1106                            break;
1107                    }
1108                    /* unsorted. TODO: actually sort these */
1109                    case vsCLOG2:
1110                    case vsUNSIGNED:        //fallthrough
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/verilog_bison.y: 1067 in ieee_filter(int, int)()
1061                    case vWHILE:    //fallthrough
1062                    case vWIRE:     //fallthrough
1063                    case vWOR:      //fallthrough
1064                    case vXNOR:     //fallthrough
1065                    case vXOR: {
1066                            if(ieee_version < ieee_1995)
>>>     CID 212134:    (PRINTF_ARGS)
>>>     Argument ""return_type"" to format specifier ""%s"" was expected to have type ""char *"" but has type ""int"".
1067                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 1995 or newer\n"",return_type)
1068                            break;
1069                    }
1070                    case voASLEFT:  //fallthrough
1071                    case voASRIGHT: //fallthrough
1072                    case voPLUSCOLON:   //fallthrough
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/verilog_bison.y: 1100 in ieee_filter(int, int)()
1094                    case vINCLUDE:  //fallthrough
1095                    case vINSTANCE: //fallthrough
1096                    case vLIBLIST:  //fallthrough
1097                    case vLIBRARY:  //fallthrough
1098                    case vUSE: {
1099                            if(ieee_version < ieee_2001)
>>>     CID 212134:    (PRINTF_ARGS)
>>>     Argument ""return_type"" to format specifier ""%s"" was expected to have type ""char *"" but has type ""int"".
1100                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 2001 or newer\n"",return_type)
1101                            break;
1102                    }
1103                    case vUWIRE: {
1104                            if(ieee_version < ieee_2005)
1105                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 2005 or newer\n"",return_type)
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/verilog_bison.y: 1086 in ieee_filter(int, int)()
1080                    case vPULSESTYLE_ONDETECT:      //fallthrough
1081                    case vPULSESTYLE_ONEVENT:       //fallthrough
1082                    case vSHOWCANCELLED:    //fallthrough
1083                    case vSIGNED:   //fallthrough
1084                    case vUNSIGNED: {
1085                            if(ieee_version < ieee_2001_noconfig)
>>>     CID 212134:    (PRINTF_ARGS)
>>>     Argument ""return_type"" to format specifier ""%s"" was expected to have type ""char *"" but has type ""int"".
1086                                    delayed_error_message(PARSER, my_location, ""error in parsing: (%s) only exists in ieee 2001-noconfig or newer\n"",return_type)
1087                            break;
1088                    }
1089                    case vCELL:     //fallthrough
1090                    case vCONFIG:   //fallthrough
1091                    case vDESIGN:   //fallthrough
```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",df5ad9e0e4ebe46e69af8c7b74a1fa3284311242,2020-08-19 22:17:56
1487,3,True,1413,733,27,1,"
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Added node_identifier to the ast_node_t structure which purpose is to contain the identifier of the node (replacing child[0] for some). Big things this affects are modules, tasks and functions. The rest of the code has been updated to handle this change. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This change should be beneficial for hierarchal implementation.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

make test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",5dc1ebf1aa473dc89387e81d6a7e283fff78f672,2020-08-19 23:14:28
1484,3,True,31,5,4,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
VPR, by default, removes and prunes away all the blocks that have no fanout.
This PR makes it possible to annotate the models to have be marked as **special**, so that, during the sweeping process, they do not get removed.

By default, all the models are treated as **normal**, therefore no change in any architecture file regarding the regression tests is required.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Symbiflow issue related to VPR: https://github.com/SymbiFlow/symbiflow-arch-defs/issues/1470


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
In Symbiflow, more specifically Series7 devices, there are special blocks that do not require output nets to function correctly. One example is the IDELAYCTRL, which takes as input a reference clock and a reset signal, without the need of outputting anything.

Given that the reference clock and the reset signal needs to be routed in order to have the IDELAYCTRL correctly functioning, this critical block cannot be swept away.

The usage of the annotation for the `model` is required as the netlist could potentially contain blocks that need to be swept, therefore a more generic approach wouldn't be possible.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
basic and strong regression tests

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6a2df92eb3e7e4975f3e6252ce157db4726345bc,2020-08-21 21:45:19
1483,4,False,43,4,1,3,"<!--- Provide a general summary of your changes in the Title above -->
added documentation for the new feature: manual move generator. This feature allows the user to set moves during placement.

#### Description
<!--- Describe your changes in detail -->
The documentation explains the purpose of this new feature and how to use it. The issue with the images for the debugger documentation have also been fixed.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
It guides the user in using the manual move generator

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1d6bd10b0f9e0ecb13327113769bad0972ea8d60,
1482,1,False,2457,457,119,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This adds buffif0, buffif1, notif0 and notif1 to the frontend
as well as the multiplexer ~onto which it maps to in the backend~.
The mapping ~to the multiplexer~ is done during ~partial mapping~*during output blif* as a soft implementation since the tristate buffers can have a hardware equivalent and it would be possible to map these in the future.
We map late so that instantiate a tristate should not require to manually add the unconn manually.

some liberty was taken to also move some decoded mux onto multiplexers to reduce the number of logic elements required.
The memory decoder was also simplified into a single logic element.

### TODO
- [ ] add test for bufifs

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
inouts require tri state logic

#### How Has This Been Tested?
reg ligt and strong

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes **TODO**
- [x] All new and existing tests passed
",2bb9bc554b1e683a953a303ab3ad0b51ce06a01f,
1481,1,True,1,1,1,1,"documentation was incorrectly spelt.
",5882f84419926c5368696788652b19201cfaa623,2020-08-20 21:50:58
1480,3,True,13,1,1,2,"The suppression file has now been added to the new run_vtr_flow.py 
#### Description
The old perl script included a suppression file to suppress various memory leak errors when sanitizing was enabled.  This functionality was missed in the initial conversion of run_vtr_flow to python but it is being implemented here. 

#### Related Issue
Should fix [this issue](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1470)
This could possibly fix [this issue](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1478)

#### Motivation and Context
Memory leaks in the vtr_reg_strong tests come up when sanitizing is enabled. This occurs mainly on the tests mentioned in the above issues. This causes some CI tests to fail on master.

#### How Has This Been Tested?
I unfortunately have been unable to reproduce the errors locally and am unable to test this fully. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f9b5977d7e9f3500e081da144e364b6e6b6dfffa,2020-08-14 14:30:45
1479,14,True,66,57,9,17,"We are not running some qor tests that we should be run. This is on vtr_reg_strong that it can be seen. This has been fixed

#### Description
There are some tests that instead of comparing to the golden results, it compares to a second output from vtr. if one of these tests comes before a test that does need to compare to the golden results, the boolean value that tells the parser to compare golden results is still false and just doesn't do any qor tests on that test.
After fixing this bug, there are 36 failing tests on the vtr_reg_strong test. These same tests are also failing on my python version, the golden standards are completely different from what vtr is outputting.

#### Related Issue
No issue yet.

#### Motivation and Context
Vtr_reg_strong test passes when it actually is not testing the results of some tests and it in fact should actually be failing.

#### How Has This Been Tested?
Run the vtr_reg_strong and make sure that all results are checked on the qor tests that should be

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed: fixing this bug brings up failures that we did not know about:



[This is the output](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071688/vtr_flow.txt) when vtr_reg_strong is run.

The following tests fail when vtr_reg_strong is run with their corisponding vpr.out file attatched:

- strong_eblif_vpr: the golden results may just need to be updated. 
[conn_order_vpr.out ](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071701/conn_order_vpr.txt) 
[test_eblif_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071704/test_eblif_vpr.txt)

- strong_unroute_analysis: qor tests might need to be turned off for this test, but be aware that we currently expect the flow to fail on one of these but it doesn't fail currently. that's something that needs to be looked into. 
[common_--route_chan_width_20_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071720/common_--route_chan_width_20.txt)
[common_--route_chan_width_8_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071722/common_--route_chan_width_8.txt)
[common_--route_chan_width_8_--analysis_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071723/common_--route_chan_width_8_--analysis.txt)
[common_--route_chan_width_20_--analysis_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071724/common_--route_chan_width_20_--analysis.txt)

- strong_clock_aliases_set_delay: this is failing with a file does not exist error.
[strong_clock_aliases_set_delay_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071731/strong_clock_aliases_set_delay_vpr.txt)

- strong_pack_disable
[strong_pack_disablek_6_frac_N10_40nml_mult_5x6_vpr.out](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/5071735/strong_pack_disablek_6_frac_N10_40nml_mult_5x6_vpr.txt)

",977c1517c891b6ef1be9ad7c43c00be6c62a83ea,2020-08-29 16:23:25
1477,1,True,35,3,3,1,"#### Description

Saves around 20 out of 30 seconds in circuit cleaning on baselitex 7-series flow per VPR invocation.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

We've noticed that the circuit cleaning time was large relative to the overall runtime (30 seconds into 120 second total run).  A profile run showed about 20 seconds being spent in a simple string copy to determine if a model is either inpad/outpad.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",45939ec2dafc88753a71d747c604eba9f1bd9801,2020-08-14 14:31:14
1474,1,True,153,107,5,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR ad a vtr regression test filter that:
- only runs verilog based test
- combine a set of vtr tests together into one
Also add:
- ability to continue a test such that the directory are combined into one
- display previous test results

#### Motivation and Context
simplify test infrastructure and speed up tests.

#### How Has This Been Tested?
odin test suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5f60b214cffd26188c6b7b18f515f50eada79576,2020-08-08 00:07:03
1472,6,True,23,15,1,0,"Expected failures now work when show failure is off.

#### Description
From the below issue, expected failure tests were failing if the show failures tag was not included. This has been fixed. In addition a regressed issue with error reporting has been fixed in conjunction with the show failures tag. 

#### Related Issue
[This is the issue ](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1459)that has been fixed

#### Motivation and Context
The vtr_flow should be able to expect failure when show failure is off. 

#### How Has This Been Tested?
Regression tests run with show_failure and without.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9fbeed5b579acabf1dd4246e8fd26e1dab9cf064,2020-08-08 15:08:51
1469,2,True,765,773,48,3,"
<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR improves the error messages to give the file full path and also context lines during error reporting 

```
==========================
Detected Top Level Module: 	bm_function_1
==========================

/workspace/vtr-verilog-to-routing/ODIN_II/regression_test/benchmark/verilog/syntax/bm_function_1.v:40:1: error[AST]:  Missing declaration of this symbol simple_func
    38 | endfunction
    39 | 
    40 | assign part1 = simple_func(a_in[`BITS-1:0], b_in[`BITS-1:0], c_in[0], d_in[0]) & a_in;
          ^~~~
    41 | assign part2 = simple_func(b_in[`BITS-1:0], a_in[`BITS-1:0], c_in[0], d_in[0]) & a_in;
    42 | assign out1 = part1 & part2;

../ODIN_II/SRC/ast_util.cpp:820: long int get_size_of_variable(ast_node_t*, sc_hierarchy*): Fatal error
[1]    1616891 abort (core dumped)  ./odin_II -V regression_test/benchmark/verilog/syntax/bm_function_1.v

```

#### Motivation and Context
beter debuggability

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",eaea9f50cc5fe19fb8419ffdf12c813311675666,2020-08-07 04:42:50
1468,6,True,1664,1004,25,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR:
- add the ieee_std verification before passing over tokens in flex
- completes the reserved keyword support,

TODO:
- add c functions support

#### Motivation and Context
verilog 2005 support

#### How Has This Been Tested?
no new test was added since this does not ast support.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b293b871147370d5641bb5b5e5869a20a18f1fc5,2020-08-06 20:45:49
1466,8,True,67,72,11,2,"Removed pad_loc_file string as it was no longer needed.
",66ffcded14a479cff015ed3f3809dada4c958e09,2020-08-14 20:47:05
1463,5,True,282,60,2,3,"#### Description

Make some improvements to the bucket heap.  This PR adds some dynamic rescaling to the bucket heap and adds fully randomized popping.

The fully randomized popping from the front bucket was always the intention, but it was initially believed that the cost of implementing that would be prohibitive.  It isn't that expensive to do, and improves the worst case handling a bit.

The other bit change is dynamic bucket rescaling, which was an issue identified originally, but didn't manifest in the initial test cases.  However, with some placement seeds, the non-rescaling version of the bucket heap can become cost insensitive, and as a result have poor convergence qualities.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

In some cases of tougher congestion resolution, the semi-randomized pop and lack of bucket scaling resulted in the bucket heap degrading to a semi-random walk.  By adding some dynamic bucket scaling, this behavior is limited.   This new bucket heap balances the initial behavior early in the router flow where costs are well behaved (mostly cost == time), and then transitions well into the case where costs are poorly scaled (cost == congestion).

#### How Has This Been Tested?

A failing 7-series circuit + bad seed was iterated on, and then tested with the board 7-series circuit list.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e4fdee757dc8b13f233788d4a0066d9c648c6789,2020-08-13 17:40:33
1462,1,True,1,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

In resolve_top_parameters_defined_by_parameters an error is thrown if it surpasses the recursive limit. The limit is an integer but was being printed with a %s not %d. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6bba7e063ab96c044ac73c8fd3d04767d79d6ee8,2020-08-04 21:04:14
1460,3,True,22,14,1,1,"The max_router_iteration value being passed into run_vtr_flow was not passed onto vpr.

#### Description
The default value for the parameter crit_path_router_iterations was overriding the inserted value of max_router_iteration, if max_router_iteration  was directly input. This has been fixed

#### Related Issue
[This issue is fixed here.](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1458)

#### Motivation and Context
It is important to be able to pass parameters directly to vpr as well as pass them through the vtr flow. 

#### How Has This Been Tested?
Ran the titan tests as described in the issue, and ensured that the max_router_iteration value passed in was the one VPR was given

#### Types of changes
- [x ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ x] All new and existing tests passed
",29b6480367353bae19ae9595979c6732ca99596e,2020-08-01 15:30:26
1457,1,True,12,4,1,0,"<!--- Provide a general summary of your changes in the Title above -->
Made some changes to the description of the fix_pins option of VPR based on changes to its functionality. Also added a description of the new fix_pins option.

",393b6815e5bfd9b40263f25eae7ebe8917b91bd7,2020-07-30 13:01:54
1456,1,True,274,29,10,1,"

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Added two new functions (one calling the other) that are called during create_netlist and only in the top module to solve parameters early.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

issue1369

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Odin was failing because it wasn't solving it's parameters early enough.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Passed make test.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",747eb6b927f4027ee81e7b4e9faab972a5c23262,2020-07-30 15:39:11
1455,13,True,307,1,11,31,"#### Description
Add the option **--max_logged_overused_rr_nodes N**, which is set to N=20 by default.
When each routing attempt fails, if the # of overused nodes is less than or equal to N, then print out the diagnostics of the overused nodes.

Add the option **--generate_rr_node_overuse_report on/off**, which generates a detailed report on overused RR nodes if the final routing attempt fails (i.e. the routing process has failed).

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1453

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4204c908afc6bc9f2e53818b33122f4c3cd96d46,2020-07-30 18:27:22
1454,1,True,232,22,6,9,"#### Description

VPR currently has unbounded memory usage as a result of #1032.  This PR caps the heap memory usage at 4x the number of nodes in the entire graph.  This is likely overkill for non-RCV routers.  For RCV based routers, this pruning will be problematic, but there likely needs to be a bounded memory limit for RCV based routers too.

#### Related Issue

#1032

#### Motivation and Context

The current heap implementations (both BinaryHeap and Bucket) can consume an unbounded amount of memory if the router is exploring bad paths that have incrementally better costs.  This has been observed to allow memory usage to grow to consume the entire RAM of ~128 GB machines in pathological cases.  Based on analysis, this memory usage around ~1000 heap entries for each node in the graph.

In #1032 other optimizations were identified, such as updating the best cost to node during insertion, rather than node pop, but even in that case the pathological behavior can result in unbounded memory usage.  This PR bounds the memory usage even in that pathological case.

#### How Has This Been Tested?

- [ ] Exists tests pass
- [ ] Failing unbounded memory case no longer consumes unbounded memory

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",89fa2a821010d93ddafa48e1147a4a8b45c8bdab,2020-07-29 20:46:37
1451,3,True,24,1,1,10,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Change the colour of the flyline delay text to black. I also gave it a very small offset so that it does get seperated from the line it's printed over if zoomed in, but is still clearly related to said path. Ideally one would also draw a white box behind the text so it's clear, but ezgl doesn't make this very ez. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

A visual example of the issue below.
https://imgur.com/Zu5VrQd

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I tested it on a random circuit and architecture and verified that it only effects flyline text, in the intended manner.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",828e9689c44fdcbce245abb45109a8e446ac8cd4,2020-08-08 15:09:54
1450,24,False,2173,1035,17,10,"
#### Description
Add an interface for a 1-to-1 mapping between CLB pins and setup slacks from the timing analyzer. Refactored place.cpp (replaced recompute_criticalities with three new routines) so that setup slacks and criticalities can be updated together or separately. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9f186669ee4af1736af3fdc36346f49de3dbd475,
1449,18,True,2658,278,24,16,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a new lookahead map method called **extended map**. This new kind of lookahead takes the same mechanisms of generation of the cost map as found in the **connection box** based lookahead currently implemented in the SymbiFlow/VTR fork, and uses the OPIN -> CHAN and CHAN -> IPIN delay information from the upstream lookahead map.

This PR includes new code to perform the node sampling which is more robust with respect to the current implementation, but takes more time to compute, hence the need of parallelize the graph exploration to fill the map costs.

Even with parallelization, though, the lookahead generation takes too long for the current regression tests in VTR, therefore the choice of adding a completely new lookahead type (extended map), so not to interfere with the current implementation.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
There is no issue currently open, but this PR is one of the last ones needed to fully upstream the SymbiFlow/VTR fork's changes needed to perform P&R using upstream VTR for 7-series devices.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The current lookahead map implementation is not sufficient to provide accurate estimates during the router expansions for 7-Series devices. This results in high run-times with bad CPD results. To achieve better results, the lookahead build strategy needed to be improved (at least for 7-series).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The new lookahead has been tested on SymbiFlow architectures: the issue keeping track of the progress is [this one](https://github.com/SymbiFlow/vtr-verilog-to-routing/issues/517)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",31115000688be15d6c8840053cd6bc4bb2d301f5,2020-09-11 21:39:34
1448,21,True,473,1260,84,43,"<!--- Provide a general summary of your changes in the Title above -->
Fix-up the bug in the Routing Resource Graph which occurs when an input/output pin locates on multiple sides.

#### Description
<!--- Describe your changes in detail -->
Modify the rr_graph builder to
- Allocate only a unique rr_node for those input/output pin locates on multiple sides.
- The unique rr_node can be indexed through the fast look-up on different sides.
- relax some constraints in check rr_graph to support the fix-up on rr_graph

#### Related Issue
<!--- Pull requests should be related to open issues -->
This pull request is a splitted pull request from #1355 to address the bug found in rr_graph

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Current rr_graph builder allocates individual rr_node for the input/output pins locating on multiple sides.
This causes that router can map different nets to these rr_nodes which corresponds to the same pin.
In such case, the routing results are illegal.
This bug is observed mainly in the Stratrix4 architecture but not limited to it.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Passed regression test with QoR failure. Expect to fix the architecture XML to meet QoR

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",eaea31bf17eb7e328ebbc92ca0eae816484a1c44,2020-09-16 18:58:35
1447,5,True,79,0,1,1,"added documentation on using the new debugger

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
this documentation clearly outlines how the user can utilize the placer and router debugger. It explains features, available variables and operators.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change results in a more complete documentation and avoids confusion for future users who want to use this debugger.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a128b3369e07592260c6004b27a1599eb3a86c42,2020-08-08 15:14:55
1446,2,True,16,0,1,1,"Toggle Block Internal documentation

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
added documentation for ""Toggle Block Internal"", both in the buttons table and as its own heading. animation to be added

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1397

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
this change will lead to a more complete documetnation

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6886e84fd54fa26f75c9113ed80b05eab02c901e,2020-07-27 22:07:37
1445,1,True,15,3,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Stop using glob for regression tests architecttures in odin

#### Related Issue
PR #1436 added a new architecture and the regresssion test added it due to globbing

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",095849c4fd3e31c1b1c188816d21ba8d67a5abe9,2020-07-21 13:31:53
1443,10,True,203,0,3,4,"Add python lint checking, requiring that new Python files pass pylint checking.

#### Description
Added a script, `dev/pylint_check.py` which calls the `pylint` python linter on python files in specified directories.

Currently it is configured to locate all python files in the following directories (recursively), subject to feedback in this pull request.
  * `dev`
  * `ODIN_II`
  * `ace2`
  * `doc`
  * `vpr`
  * `vtr_flow`

The new script includes a list of all existing Python files in these directories that fail linting, and these files will be ""grandfathered"" in, meaning they do not need to pass linting at the moment. However, in the future we would ideally clean up these files so that they pass linting.

A travis CI test is added that ensures this script passes, meaning no (non-grandfathered) python files fail linting.  This will ensure all future Python files added to the repo pass linting.

`pylint` is highly configurable.  Currently, it is running under default configuration (no checks are skipped).  In the future, if we feel some checks are unwarranted, we could modify the configuration.

#### Related Issue
#1434 

#### Motivation and Context
Since we are about to move the core scripts to Python (#1429), it makes sense to set this in place now. 

#### How Has This Been Tested?
New Travis CI test, and lint testing on the new script added in this PR.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",378be647c66d0a641538e75bca028fd328575ac9,2020-07-23 19:11:42
1442,1,True,2,5,1,0,"
#### How Has This Been Tested?
odin regression

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",dbc224c8c3b503dc6b2e295d1a2b319ccbd3623b,2020-07-20 13:49:10
1441,1,True,1,1,1,0,"Made a slight change to the placement file format documentation. The change explains that the subtile number must be in the range 0 to (grid[i][j].capacity - 1). It also explains that the subtile numbers at a particular location do not have to be used in order.
",135c737b9fe7e7c76c919c1f0e91a1343d6dd236,2020-07-20 15:02:16
1440,6,True,1067,1112,31,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This changes the simulator to use librtl during simulation to respect the expected behavior.
This will allow the simulator to support 'z' for unconn values for inout later.
the 'z' support is left to do still later

#### Motivation and Context
add potential support for 'z' in odin simulator

#### How Has This Been Tested?
the odin regression

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",29ce95b0371c9f091510b249ea0510291a289c1f,2020-07-19 21:41:25
1439,1,True,3,3,1,0,"Some of the external subtrees originally under 'kmurray' have been moved
to the verilog-to-routing origanization. Next time they are updated in
VTR (i.e. via dev/external_subtrees.py --update) they will pull from the
new repo locations.
",a9ae9da12fc2158a8d465867bed95a0c4f165672,2020-07-27 22:05:21
1438,11,True,287,307,15,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
Final optimization decision on PR #1396.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Optimization (change which speeds up code)
#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",fe1ee4cb4df90f2e8606c0193a3ecef9e0ed1df7,2020-07-19 23:36:41
1437,13,True,5360,4108,65,21,"Adding a Python auto-formatter

#### Description
Add new target `make format-py` which runs the `black` python auto-formatter on all .py files

#### Related Issue
#1435 

#### Motivation and Context
With the change of the scripts to python #1429, now is a good time to introduce a python automatter.

#### How Has This Been Tested?
New CI test verifying python code is formatted

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",9b21fb1e57dd0f79fee6ef4c17a633f156429949,2020-08-14 16:39:18
1436,2,True,1237,14,7,13,"#### Description

The previous netlist reader didn't accommodate blocks with number of in ports == 0.  The result would that the first port would be created as an in port, instead of an out port. 

#### Related Issue

#1402

#### Motivation and Context



#### How Has This Been Tested?

- [x] Failing test case from #1402 passes
- [x] Add new arch to test problem and run it in vtr_reg_basic

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",e5f6532d07c3795847770ccf47acb22bbdf07428,2020-07-22 16:38:50
1433,9,True,643,97,20,5,"… an x, y, subtile location


VPR had the option fix_pins to allow users to fix I/O pads to certain locations. The fix_clusters option was added to allow them to fix any block (I/O or otherwise) to an x, y, subtile location. It has the same arguments that fix_pins has - free, random, and user. Using the user argument entails providing a .pads file, just like fix_pins.

#### Description
Added fix_clusters in the place group options in the read_options.cpp and argparse_test.cpp files. 

#### Related Issue
The related issue is: Add Placement Constraints to VPR #932 
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/932

#### How Has This Been Tested?
The fix_clusters option was tested with running vpr with an architecture file that has clbs with a block capacity of greater than one. The vtr_reg_basic and vtr_reg_strong tests were also run.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9f0515f3327ec2fabbea4a5d460de8acf9f21eaa,2020-07-29 15:45:50
1432,4,True,539,37,17,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Made two changes. The first being odin now recognizes localparameters and doesn't error. The second fix is defparam cannot override localparams but instead throws a warning.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Issue 1406

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Adhere to the verilog standard.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Added new benchmarks and passes old benchmarks that used to fail.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2822edddc5573ea0707a719d54e43d4ba7bda7da,2020-07-20 18:06:43
1431,1,True,3,5,1,0,"I had made some changes to the documentation previously on another branch, but further changes were needed so I closed the pull request for that branch and created this one. 
The changes to the file formats documentation were made to reflect that now any block can have its location specified by x, y, subtile numbers - not just I/O blocks as it said previously.
",3ac1d321b6c8da792dcf8ea1640e0e74988e4449,2020-07-16 19:40:34
1429,98,True,2989,30,26,6,"I converted run_vtr_flow.pl to run_vtr_flow.py

#### Description
Using the [old python rewrite branch](https://github.com/verilog-to-routing/vtr-verilog-to-routing/tree/vtr_script_py_rewrite_old) as a starting place, I converted the run_vtr_flow.pl to run_vtr_flow.py
Also from the old rewrite I imported and cleaned up the python library that is used by the run_vtr_flow.py script. 

#### Related Issue
[The issue this partially fixes](https://github.com/SymbiFlow/ideas/issues/16)

#### Motivation and Context
We want to be able to run the vtr test suite without requiring perl to be installed.

#### How Has This Been Tested?
I enabled the regression tests to be run on the python script. I currently have two sets of the regression tests being run on travis, the perl script is run on one set of regression tests and the python the other.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality): run run_vtr_flow.py instead of run_vtr_flow.pl
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a80427539e99b899265d21924a56f9907db1a5de,2020-07-30 17:25:01
1428,1,True,1,1,1,0,"### Description

The maximux value of cost_index limits the number of segments to max
~(count / 2), because CHANX and CHANY segments each get a cost index.

At int8, the maximum number of segments is ~64, which can easily be
exceeded.  The 7-series arch has ~100 segment types.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

The 7-series arch uses ~100 segment types, which cannot be stored in an `int8_t`.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b8b59ead16f4238ae7666baa4c1ff2f203275daf,2020-07-16 17:22:37
1427,2,True,1105,1134,42,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Improve odin error reporting by propagating originating, file line and column all the way down to netlist nodes

#### Motivation and Context
Some nodes errors were cryptic without its originating context.
We improve this by pushing location from the parser down to the ast nodes and the netlist nodes will inherit the context.

#### How Has This Been Tested?
pre commit suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",10e027e3b41027e4ca9d2f0badedb8e7298dd47b,2020-07-15 13:06:37
1425,1,False,3300,1,108,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Adjusted the configuration files of each keyword task to include the k6_N10_mem32k_40nm.xml architecture. Regenerated the results to update the json files accordingly.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Issue 1422

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

The additionaly architectures were unecessary

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Ran make test and everything passed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",326c2e7e5ea3ede900a062c6e57a24766d60ecfe,
1424,2,True,86,55,3,0,Fix leak in assignment operations,4a40a4f8b946e97ab2c033da64169f9b36aafb7e,2020-07-11 22:34:06
1423,2,True,329,11918,119,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
this PR a post processing hook point to the parser and adds a hook to flip expected failures to success and vice versa 

#### Motivation and Context
improve regression testing

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0dc09e3f95fcc75dddb2551c00c7424ebf144bfc,2020-07-11 19:48:13
1421,1,True,555,2,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
typo in xnor prevented it from being enabled

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4c01da5c0c2abdfcb8e38dcb6f3b4b210da06caf,2020-07-11 03:49:15
1420,2,True,78,9,3,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
fix mem leak in preprocessor when using undef

#### Related Issue
 #1401

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9308b9dad84336243539b4410cdb4b2095c3b2ce,2020-07-11 03:48:35
1419,1,True,25,4,1,0,"Currently odin only prints out null if the value is the default value, 

```
  Failed . . . . . . . . . . . . . . . preprocessor/undef/k6_frac_N10_frac_chain_mem32K_40nm
    - exit                                [-1-]{+null+}
    - leaks                               [-1-]{+null+}
  Failed . . . . . . . . . . . . . . . preprocessor/undef/k6_N10_40nm
    - exit                                [-1-]{+null+}
    - leaks                               [-1-]{+null+}
  Failed . . . . . . . . . . . . . . . preprocessor/undef/k6_N10_mem32K_40nm
    - exit                                [-1-]{+null+}
    - leaks                               [-1-]{+null+}
  Failed . . . . . . . . . . . . . . . preprocessor/undef/no_arch
    - exit                                [-1-]{+null+}
    - leaks                               [-1-]{+null+}
  Ok . . . . . . . . . . . . . . . . . DEFAULT
```
this PR fills back in the DEFAULT and remove it from the comparison.

we load the DEFAULT when loading the json and trash its entry.

we will reclaim it before printing it back out

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9486393e8a098f6633ea5280af19e77ec6d02f2d,2020-07-11 02:52:48
1418,3,True,111,9,5,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
this adds preprocessing hooks to the log parser.
the user can now specify runtime hooks for the log parser and call out line by line the 

#### Related Issue
PR #1416 was unable to merge because of string mismatch


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f0f80de1ceebba79c41bd9b1a1d75cab934c4149,2020-07-11 01:33:02
1417,2,True,11,5,1,2,"
#### Related Issue
#1402

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",74c4250f7f39183d2085ff25b7f492471798136e,2020-07-13 19:18:38
1416,11,True,22315,6052,624,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Created benchmarks for each keyword.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Adds testing.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Passes make test.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3eaaf644a4e5740f60aa88829602431b82512c3a,2020-07-10 22:10:03
1415,8,True,95448,30,5,0,"#### Description
<!--- Describe your changes in detail -->
Added a 'legacy' sub-directory and moved the old architecture file in there. Also added three older variants from the Titan repository into the 'legacy' directory to keep as record (upgraded files using upgrade_arch.py). Updated README accordingly.

#### Related Issue
Titan Architecture README is out of date #1412

#### Motivation and Context
Reorganizing the files and updating the README are necessary to keep the files easily accessible.

#### How Has This Been Tested?
No code change; no testing required.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8ac35d2dd5a490b8302489aa6e777b3a90590302,2020-07-16 17:06:18
1414,5,True,1529,20315,36,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Add asan support to the odin regression parser 

#### Motivation and Context
add memory leak counts to the JSON to have more insightful errors

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",78dcfa8342a56a3288fb5dff5b44cde68db9f242,2020-07-10 13:27:41
1413,1,True,23,3,2,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
update odins banner

#### Related Issue
we were behind a few version

#### Motivation and Context
allow better debugging of user errors

#### How Has This Been Tested?
n/a

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e0277071e0bdce6128e8e99deb0bd7a70a9e6caf,2020-07-09 15:18:23
1404,0,False,0,0,0,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This flips from three valued logic to quad valued for simulation to allow for disconnected logic to propagate their value.
This will be espacially helpfull for inouts #1292  and multi driver as in #1398.

#### Motivation and Context
improve simulation and work towards inout support

#### How Has This Been Tested?
N/A

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c62dcaf832476f474bb673ac9ad00073ce1542b9,
1403,1,True,2,0,1,0,"#### Description
Get verbosity back from bison, since the macro YYERROR_VERBOSE seems to not provide detailed output as of bison v:3.6.4

#### Motivation and Context
The parser errors where uninsightful with the newer bison

#### How Has This Been Tested?
odin full regression test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0388355e49cc75462ab3a755f009416a87be488c,2020-07-07 14:38:09
1400,6,True,3102,0,3,8,"<!--- Provide a general summary of your changes in the Title above -->
Added three new architectures that are created using COFFE_22nm delays:
-  Stratix-10-like architecture
-  Stratix-10-like architecture with 4-bit adders per ALM and two carry chains each spanning 5 ALMs
-  Stratix-10-like architecture with 5 ALMs having 4-bit adders each and 5 ALMs without arithmetic logic
",d59dcd31810c7947137fa1046573ff47cef41804,2020-07-27 22:11:05
1399,1,True,437,426,3,7,"+ Outputs MISMATCH instead of SIGABRT on simulation failure
+ Allows passing regex for tests to run

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Adds support for using regular expressions to specify a subset of tests to run.

e.g. `./verify_odin.sh -t regression_test/benchmark/task/syntax syntax/bm_*`

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c8fc2e8998b839d8b9bcd96ce1c4d35c4ba5f5a7,2020-07-05 01:38:59
1398,1,True,729,336,30,9,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This adds multiple driver pins on a net to enable support for multiple assignments to a single wire.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This is a precursor step to implementing _inout_s as they require at least two drivers to be useful.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

A new test based on the example from the Verilog 2005 standard has been added to the odin_ii suite.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",68af4f9f040bf0fbd697394c0e4b5097e9e90719,2020-09-01 22:59:56
1396,12,False,419,325,16,8,"#### Motivation and Context
**pres_cost**, aka the present congestion cost, is one of the factors used by VPR routing to measure the congestion of a node on the rr_graph. Originally, it exists as a data field stored within a hot data structure that is being referenced frequently during the routing process. The optimization removes this data field and calculates the cost on the fly whenever it is actually needed. This tradeoff is between 
       a more cache-friendly data structure + removing unnecessary updates
and
       slightly more computations.

#### Related Issue
#1387

#### How Has This Been Tested?
The only tests that had failed during the refactoring process were the analysis only and breadth-first routing regression tests (vtr_reg_strong). Right now these issues have been resolved.

I will do a QoR testing soon.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [X] Optimization (change which speeds up code)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",068d8dda0fa213a1e2fb29c4737b9a394c116929,
1395,94,True,2609,271,23,24,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR is a work in progress and still has a significant overhead on top of the regular VPR flow

- RCV is an algorithm which allows for hold time violations to be resolved by allowing the router to create longer connections where necessary
- Paper with more info here: https://www.eecg.utoronto.ca/~vaughn/papers/tcad2008_rcv.pdf
- Work done by: Ming Yang Kun, Richard Ren and David Baines

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I tested this in a variety of scenarios on both the titan benchmark suite, as well as qor reg chain. Results of the data are located here:

UPDATED TITAN: https://docs.google.com/spreadsheets/d/10omM-uNtj-8o-3DnEfGh7C6fznX8va63Y85yTmocNqE/edit?usp=sharing
UPDATED QOR CHAIN: https://docs.google.com/spreadsheets/d/1pJdYBgbMMMudm0-0STI7htba0uHOeQ7VXBu1NcMzAME/edit?usp=sharing

As well I analyzed the results of which in a document here:
https://docs.google.com/document/d/1mZoHqO3H5mYvD44dt2-Ai-eIc4rlrHm4dhSMOlLKmqo/edit?usp=sharing

In summary, when RCV is turned off there should be minimal runtime impact due to the extra if statements in the core router code. I've tried to minimize this in a number of ways. 

When RCV is turned on, there is a more significant impact on runtime, which is mostly caused by the route budgeting. However even in a lot of beyond worst case hold cases, it still is able to resolve intercluster hold violations mostly. There is still work to be done for larger circuits, as well as possibly dealing with intra cluster hold violations. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",aaec4fa67f80e1dc1f93821f7588b64b2797eb6a,2020-09-10 18:50:05
1393,1,True,319,423,9,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Changed the function so it makes sure there are enough characters to have an octal number because it caused a memory leak before. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Issue 1339

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Remedies memory leak

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",21aeca5603543e786ea8ce608a256b7342e8c90f,2020-07-04 00:47:18
1392,1,True,1,0,1,0,"made critical path lines thicker for better visualization in the GUI.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
added line 3183 which sets the line widths for critical paths to 4 which is thicker than the current lines and thus will be clearer in the GUI.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
[https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1391#issue-650217985](url)

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
In some circuits, the critical paths are too faint and hard to locate, the new setting uses thicker lines that are easier to visualize.
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e5df5e8e55de34f597540a47118b1c3f4a4aab11,2020-07-03 21:31:56
1390,4,True,1045,509,10,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Updated the documentation. Now it has three sections: installation,user guide and developper guide. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Documentation was lacking.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6f529b1f8e70825c9e8f6d4fd88d64542dc8ea67,2020-07-03 15:26:59
1389,1,True,50,0,1,0,"
#### Description
Update regression results to fix recent update in vtr_flow.
The vtr_flow got two new verilog files but the expected results for the odin regression tests had not been updated yet.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",37bae0174021d6920a442cd88503c078e3c07c38,2020-07-02 12:07:02
1388,2,True,69,35,4,7,"#### Description

Update libblifparse git subtree.

#### Related Issue

#### Motivation and Context

eblif extensions for .attr and .param have support for string parameters, which may be contain strings which contain spaces.  libblifparse has been updated to support a simple string quote, with escaping character support initially. 

#### How Has This Been Tested?

libblifparse has new tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2a3b399bd760389d24d2fea1416686d4276b1a8e,2020-07-03 01:34:00
1386,2,True,181,0,6,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description

This PR provides the Sphinx API documentation for VPR Contexts and Netlists, taken from the source code by Doxygen. 

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1328

#### Motivation and Context
This PR provides basic information about key VPR structures. The provided API documentation might be a convenient reference for new people in the project. 

The main motivation behind the mentioned changes is to create comprehensive API documentation for the project.

#### How Has This Been Tested?
I tested the changes by running the documentation building locally. The same build is available in the CI

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d3bc0e5249d069c7bdb5a4c4af1bb9286b36b441,2020-08-07 00:39:23
1384,1,True,1,1,1,0,Visualization was misspelt (trivial fix),8f76f671d538134a9c4e8d860c0513dd0a587c96,2020-06-29 14:54:20
1383,10,False,275,103,9,0,This PR is only for running tests for https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1205 with different `--seed` flags.,854fbbbb26ce6e9f47a23a0c60138b1625a3152d,
1382,4,True,25,7,7,2,"#### Related Issue
#1378

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [X] All new and existing tests passed
",af0be2067ee58458e9f3fb3a0b5cdd617e122219,2020-06-28 20:31:30
1381,1,False,7,0,3,2,"#### Description

This demonstrates #1378

#### Related Issue

#1378

#### Motivation and Context

This adds the most basic test, a wire between an in port and an out port.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b48f811f47bb55c8178371e5b75079f0ceeadb00,
1380,2,True,147,9,5,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR fixes the clock net aliasing for SDC commands other than `create_clock`

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1379

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Clock aliases need to be used for other SDC commands and not only create_clock.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I have added a regression test that uses set_max_delay sdc constraint

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f5d5d2b6fa5f29bcfbdf54ed84efd86dafaeedd3,2020-07-03 21:12:03
1376,2,True,7,5,1,7,"#### Motivation and Context
Trying to speed up the VPR router by detecting its various performance bottlenecks and remove them by optimizations. This PR should not change any of the VPR router's functionalities.

This PR is still undergoing changes. I will update more commits if I manage to optimize other areas of the code.

#### What Has Already Been Optimized?
1. Optimized overused info calculation. Noticeable speed up when running very large titan benchmarks, where the number of nets is large and many router iterations are performed.

- Tested on the LU8+Flagship and Stereovision+Tian benchmarks. No significant speedup.
- Tested on the Bitcoin+Titan benchmark. Appreciable speedup.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [X] Optimization (change which speeds up code)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",88eea0d047cbde098025d7ba6ff45debca9dda8f,2020-06-30 18:53:53
1375,1,False,3,5,1,0,"Updated the section of VTR documentation about placement file formats to reflect that subtile numbers can be used to specify the locations of any blocks, not just I/O blocks.",eb1e9bb1d651c45ec2ecb007498423057c6c5588,
1374,1,True,2,2,1,0,"@jeanlego 
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Changed the regix in basic.toml of error and warning to be able to pick up messages inputed by the $display function in a verilog file when creating the simulation and synthesis jsons. The syntax for it to be picked up is: $display(""Warning::CAPATALIZED_THING "");
Usually the capatalized thing is the function the benchmark is testing. This should be used for benchmarks to indicate if a test should pass or fail. Also, if it fails what is going wrong/not functioning properly. A future PR with make a new title called ""Expecatation"" instead of warning.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

New feature

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Ran make test passed
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3559d1dffece81df686ed6f47ea1a46a0467e72c,2020-06-30 02:27:16
1373,7,True,195,42,9,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Move expression evaluator into vtrutil, and add tests.",df44bf8b0bca9552fd5c4011d0fb2a8568d9401f,2020-06-19 23:16:49
1372,1,False,6,404,3,0,"

<!--- Provide a general summary of your changes in the Title above -->
@jeanlego 

#### Description
<!--- Describe your changes in detail -->
Changed the regix in basic.toml of error and warning to be able to pick up messages inputed by the $display function in a verilog file when creating the simulation and synthesis jsons. The syntax for it to be picked up is: $display(""Warning::CAPATALIZED_THING <message>""); 
Usually the capatalized thing is the function the benchmark is testing. This should be used for benchmarks to indicate if a test should pass or fail. Also, if it fails what is going wrong/not functioning properly. A future PR with make a new title called ""Expecatation"" instead of warning. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

New feature.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Make test tested it. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d036a3b9f330d234a49eda017a6c2dbb400c9488,
1371,2,True,11,1,2,0,,63418ea9219eefd7afce7f3bf12832f5ca117906,2020-08-13 20:55:10
1370,1,False,1,0,1,1,"Small documentation change to add future work to fix_pins, partially as an exercise in documentation update practice to go over with Sarah.
",f20e769b34b3fd3542d6a83cec536e6eeafe47a0,
1367,2,False,358,199,3,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a new node sampling method, taken from https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1351.

It adds a region-based sampling, with each region of the grid containing a set of representative grid points, which on their behalf have a set of nodes to be expanded using dijkstra.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1325

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The current sampling method in the `router_lookahead_map.cpp` code does not provide enough entries in the cost map for Series 7 devices.

The sampling method proposed in this PR has been extensively tested in SymbiFlow, and proved to have the lookahead generator to produce a correct and efficient lookahead.

The main issue is performance. In fact, the number of samples to expand is much greater than the previous method, hence the lookahead computation takes longer time, hence the addition of the per-region parallelization.
Unfortunately, even with a parallel lookahead computation, all the regression tests take longer time to compute.
However, the idea behind the lookahead is to have it computed once only per device. While this is ok for already designed devices (such as Series 7), this may be impossible for devices that are being generated using VtR, where the lookahead cannot be precomputed.

It may be possible to switch the sampling method and the lookahead computation with a command line argument, so that the faster original lookahead generation can still be used.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Basic regression tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b80858c0bc097527f669e733d4309bd25b094218,
1365,4,True,13,22,1,1,"Changed get_net_wirelength_estimate() in vpr/src/place/place.cpp to
use linear equation, as in get_net_cost(). Original quadratic formula
offers no advantage over the linear one: similar runtime and QoR.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
VTR_benchmarks & titan_benchmarks
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",1bfcd598d5cd0602de063212e86c3b2f76462113,2020-06-16 23:45:07
1364,4,True,3,3,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Code in ShowSetup.cpp was checking if unsigned values were negative as a slightly redundant input sanitation step. As well one of the checks was off by one. This should fix it

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Was causing an issue in the coverity scan.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4aaf2497fee61a69458ad597e43fc32d884aefd7,2020-06-17 11:59:58
1363,1,True,51,0,3,0,"Signed-off-by: Keith Rothman <537074+litghost@users.noreply.github.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds debug prints during the router profiling (when the `#define PROFILE` is active).
This PR is part of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1351 and has been split as it does not strictly belong to the lookahead context.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
No issues

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This helps in the debug process of the router behaviour

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5c4e43f73d3cf989a36d44ac36f646240a192a91,2020-06-16 13:34:35
1362,2,True,4,2,1,0,"
Added various graduate and summer student names to contributors.
",3ce41385753559b5ddeb9d508d36435cf83d29af,2020-07-14 17:22:26
1361,3,True,43,0,1,2,"#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [X] New documentation (no change to functionality)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",40e8bef7c3d0e21d07c4e80098b74dca8072ea14,2020-06-15 13:26:57
1360,1,True,1907,1321,46,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description

This commit changes the style of code comments in `vpr/src/base` to Doxygen compatible. The changes allow for using the source files for generating Sphinx API documentation.

These changes allow for documenting important VPR data structures like:

- VPR contexts 
- Netlists

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1328

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

The proposed changes are related to the second step of providing support for the API documentation (https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1328)

#### How Has This Been Tested?

<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

- I rebuild the VPR according to the [building instructions](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/BUILDING.md#building-using-the-makefile-wrapper)
- I've run the VTR tests using:
    ```
    ./run_reg_test.pl vtr_reg_basic
    ./run_reg_test.pl vtr_reg_strong
    ```  
    Both tests where successful.
- I've generated the Doxygen HTML using the same settings as in the [documentation](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/doc/_doxygen/vpr.dox) and verified it manually. It is accessible [[HERE]](https://storage.googleapis.com/symbiflow-scratch/rw1nkler/vtr-verilog-to-routing/826ce24/html/files.html)

- I checked if the generated Doxygen log does not produce suspicious information. The log is available [[HERE]](https://storage.googleapis.com/symbiflow-scratch/rw1nkler/vtr-verilog-to-routing/826ce24/doxygen.log)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",11b31b9edf611aee9e8066aca835f40166644502,2020-06-20 12:25:41
1359,2,True,110,110,4,0,Needed due to algorithm changes in #1296 ,7829e14308b448b9b365095aec6354cb1c5d4db7,2020-06-12 12:12:46
1358,1,True,1,0,1,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Fixes the problem with missing links to markdown files in the documentation. The problem was introduced by https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1354. 

#### Related Issue

Resolves https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1357

<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This change is necessary to correctly show full content of the documentation.

#### How Has This Been Tested?

Markdown Code Symlinks extension seems to work correctly since the relative path given in 
https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/README.developers.md#external-subtrees:
```
To simplify the process of working with subtrees we use the [`dev/external_subtrees.py`](./dev/external_subtrees.py) script.
```
is changed to the correct link to the file on GitHub:
https://vtr--1358.org.readthedocs.build/en/1358/dev/developing/#external-subtrees

Correctly generated documentation can be found in readthedocs CI.

<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e9594acbf17e5e3c0268cb3572b8bb58ca3c2caa,2020-06-11 18:24:30
1356,2,True,2,4,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Improves valgrind integration in run_vtr_flow.pl, specifically:

- Uses a unique exit code for valgrind failures (22) which is distinct from normal exit codes
- Includes the valgrind log in the regular tool log files, which ensures they show up when a failure log is printed (e.g. on TravisCI). Previously the vaglrind output was placed in a separate valgrind.log file which was rather mysterious.
- Treats detected memory leaks as errors, since most VTR tools are now leak-free in regular usage. This should detect new leak regressions.",59ff88f3f5d315b525a04472a6082549305fbc27,2020-06-11 15:05:54
1355,57,True,2534,12,21,38,"<!--- Provide a general summary of your changes in the Title above -->
Add codes to fix up the net swapping due to routing optimization when logic equivalent pins are defined in `pb_type`.
The fix-up is called when routing is finished successfully.

#### Description
<!--- Describe your changes in detail -->
- Add post routing cluster block pin fix-up. The results are stored in the `ClusterContext` without modifying the original `clb_nlist`.
- Add post routing net annotation to `rr_nodes`. The results are stored in the `RoutingContext`. The modification is required as it is fast to create such annotation for all the nets and ``rr_nodes``. This database is frequently inquired by the post-routing fix-up function. This can avoid frequent searches on the `rr_graph` and ``ClusteringContext` data structures.
- Add util functions to find physical tile pins with given capacity offset to the `vpr_utils.cpp`. The modification is required because the old function `get_physical_tile_pin()` does not consider the `z_offset` in any sub tile's capacity when finding the pin index. This will cause a wrong pin index is founded when multiple sub tiles with `capacity > 0` are defined under a physical tile.

#### Related Issue
<!--- Pull requests should be related to open issues -->
To address the [issue](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1347).

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
- This feature has passed existing regression tests.
- New test cases should be added as planned in the [issue](https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1347).

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [X] All new and existing tests passed
",801848d5557e0f34795ec5fd74bdc61c297feff0,2020-11-08 15:14:44
1354,1,True,110,15,9,4,"<!--- Provide a general summary of your changes in the Title above -->
This commit adds support for Doxygen and Breathe, allowing for generating Sphinx API documentation for C++ code

#### Description

- Add Doxygen configuration files for:
    - vpr
    - abc
    - ace2
    - ODIN_II
    -  blifexplorer
- Add Breathe plugin with the configuration for the mentioned projects
- Convert documentation to Python3 in order to satisfy all the dependencies

I've added functionality to skip API generation if Doxygen is not installed. It is also possible to skip regenerating the documentation after setting `SKIP_DOXYGEN` environment variable to `True`.

#### Related Issue

Resolves https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/568
The changes related to this PR were proposed in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1328

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

The changes were proposed in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1328. They allow for documenting C++ code in Sphinx.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

The changes have been tested on private readthedocs instance of VTR documentation:
https://readthedocs.org/projects/rw1nkler-vtr-docs/builds/11219328/

Preview of the API documentation for the chosen files is available here:
https://rw1nkler-vtr-docs.readthedocs.io/en/api_demo/api/vpr/
It uses code from the following branch:
https://github.com/rw1nkler/vtr-verilog-to-routing/tree/api_demo

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",42c20a466b425c6162c8aad50d266d1697025f94,2020-06-11 13:24:34
1353,5,True,240910,1190,10,2,"#### Description
This PR is to merge the VTR titan architecture file changes from import_titan_arch into master.

#### Related Issue
There are no related issues.

#### Motivation and Context
In previous VTR releases, titan benchmark and arch files are downloaded from the web (using command ""make get_titan_benchmarks"") and are extracted into their corresponding VTR directories. However, as we upgrade the titan architectures files, there is a mismatch between the latest versions of the titan architecture files and the ones from the titan release. Moving forward, we would like to keep the latest titan arch files in VTR instead of extracting them from the titan release. To achieve this, I moved the latest titan arch files into <vtr>/vtr_flow/arch/ and upgraded their formats. I also modified the script so that when you run ""make get_titan_benchmarks"", it would still download the titan benchmarks into the appropriate directories, but would no longer overwrite the existing arch files in <vtr>/vtr_flow/arch/ 

#### How Has This Been Tested?
1. started from a clean build, made sure that the correct arch files are in <vtr>/vtr_flow/arch/, and that the titan benchmarks have not yet been downloaded.
2. ran ""make get_titan_benchmarks"",
3. checked that the correct titan benchmarks have been downloaded to their corresponding VTR directories, and that the arch files in <vtr>/vtr_flow/arch/ have not been overwritten
4. Tried executing a simple titan flow from the ""Running the Titan Benchmarks"" tutorial (https://docs.verilogtorouting.org/en/latest/tutorials/titan_benchmarks/).
5. made sure the results are correct.


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7e3308562deea9a62d0dc0b81bfdb0d826ce2169,2020-06-12 21:54:54
1352,1,True,1,1,1,0,,343eea1d690c84fa0a5c8c301a9aa430fc7e839b,2020-06-09 04:03:33
1351,41,False,2096,1131,19,6,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is an initial Draft with the effort of getting the lookahead map work well with the Series 7 architectures.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
The issue tracking what needs to be done and all suggestions is here: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1325

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Currently, the SymbiFlow VTR fork implements the [connection box lookahead map](https://github.com/SymbiFlow/vtr-verilog-to-routing/tree/wip/lookahead_sampling2) which has been tested to work well with Series 7 devices.
The idea is to get the lookahead map code produce similar results, so that eventually, there can be only one lookahead code being used.

In case the two different approaches cannot be merged, an alternative would be to have a common utility library for the different lookaheads.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1334f91de907429abc576b3dbef72cfc0d3221aa,
1350,1,True,2,2,2,0,,c2e7aa6bfba067d543e8261a8753e6a80f885e94,2020-06-08 17:38:50
1349,1,True,1,1,1,0,Fixes Coverity CID 210706,343eea1d690c84fa0a5c8c301a9aa430fc7e839b,2020-06-08 15:45:26
1348,3,True,10,4,1,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Added a new name column to the segment usage by type statistics print out. This prints the human readable names of the wires, which is a lot more useful than an index.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1327

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
More useful statistics

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested with Stratix IV architecture, and another to ensure the formatting works and the names make sense. Example printout from the Stratix IV
 
Segment usage by type (index): name type utilization
                                ---- ---- -----------
                                  L4    0      0.0662
                                L16    1       0.076

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",41287cabf0ad27a557c311baea24b95164049b31,2020-06-11 13:45:20
1346,1,True,1,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Update ODIN II Contributors in README
",419e62fd1f3457dfd0761923f969ddd03d4051b2,2020-06-04 19:29:55
1345,1,True,63,0,1,4,"In particular document different ways of speeding up compilation.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Document ways of speeding up VTR compilation for faster edit-compile-debug cycles (particularly compilation time).

Thanks for @dpbaines for asking questions about this which prompted writing this down.",637a30c57efa1eaae86e6925dae9b9a7d36f7335,2020-06-05 03:49:10
1344,1,True,17,7,1,3,"<!--- Provide a general summary of your changes in the Title above -->
Fix the bug of memory leaking when disable packing is enabled

#### Description
<!--- Describe your changes in detail -->
Free allocated memory when the packer fails at pre-packing stage. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
This aims to address the issue [https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1334](url)

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
My take on this memory leak is that the linked list of molecules is not freed automatically when VPR packer throws a fatal error.
Therefore, codes were added to  free the linked list before throwing a fatal error.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Currently CI looks fine. But I would like to see the problem is solved in kokoro.

<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [] All new and existing tests passed
",6485638667020cb15c6d2b4019f797dbc0c8f999,2020-06-08 21:00:33
1343,10,True,151,24,5,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Adds support for drawing SOURCE and SINK RR nodes in VPR graphics.

Also cleans-up RR drawing combobox options, and avoid expensive copying of RR nodes in pin drawing.",7b80024d2511bbc5a2f9191c32543e3c477a1d34,2020-06-05 03:48:47
1342,1,True,62,62,2,0,"Update needed to store correct geomean non-virtual intra-domain CPD for
combinational circuits.

Since #1330 we now always produce the above metric.",b5ccf1b321a2d27e845a6ba089abc3b038a79778,2020-06-04 16:15:53
1341,30,True,211,28,10,3,"#### New Features
A regression tests' command-line option: **-check_incremental_sta_consistency**

#### Motivation and Context
Sanity check that full and incremental STA produces the same packing, placements, routing and timing reports (7 files in total).
**my $packing_file = ""$benchmark_name"" . "".net"";
my $placement_file = ""$benchmark_name"" . "".place"";
my $routing_file = ""$benchmark_name"" . "".route"";
my $setup_timing_report = ""report_timing.setup.rpt"";
my $hold_timing_report = ""report_timing.hold.rpt"";
my $unconstrained_setup_timing_report = ""report_unconstrained_timing.setup.rpt"";
my $unconstrained_hold_timing_report = ""report_unconstrained_timing.hold.rpt"";**

#### How Has This Been Tested?
Tested on Arch_Flagship + Stereovision3.v, Arch_Flagship + LU8PEEng.v, and Arch_Titan + Neuron Benchmark.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [X] All new and existing tests passed
",f9f004a446ceb35d1010fe3f3784e3c1778a6457,2020-06-16 18:24:46
1340,160,True,11410,0,29,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Imports the vqm2blif tool which was separately maintained for the Titan flow, but depended on various VTR libraries. Including it in VTR will ease maintenance.
",46263a7bf916df1bc52611a06e2dbce871541dd5,2020-06-03 22:21:46
1335,1,True,11873,1,203,0,"
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Created benchmarks for each gate (ie and, xor, etc) that test the width capabilities and different methods of calling said gates. Some .vh tests call a .v test that is standardized and rely
on the width to be defined as well as the operation and possibly if it's binary or unary. There is a wire test (1 bit wide), an index test and then 3 seperate width tests: wide, int_wide, ultra_wide, which are 3 bit wide, 32 bit wide and 256 bit wide respectively. These seperate width tests are called in two different manners. The range catagory calls on a gate with the range inside (ex not([2:0]out,[2:0]in)) while the replicate catagory calls on the gate with an outside array (ex not ar[2:0](out,in)).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Creates more tests.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a7fc95a77d8721ad25f4893b19c078ae424d5367,2020-06-04 19:19:21
1332,9,True,285,0,2,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Simply added logging for all user specifiable command line arguments, which will be output to the vpr log file. If no argument is specified it will display the default value of said option. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1326

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Before, only some of the options were output, meaning that users looking back on previous runs of VPR may not know the internal values for some options that were specified. Thus this commit adds those logs. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I ran a flow ch_intrinsics.v with a random architecture and different command line arguments, and saw that it output significantly more options.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a37cccfddd908a6a9bac885948f47dfc029bb440,2020-06-12 00:38:56
1331,6,True,6030,1,93,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Created a section in regression tests for benchmarks that test compiler directives. Also, added to basic.toml an expectation tag that will describe if tests are meant to be passed and why they would fail. This will show in the json simulation file.  

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Tests the functionality of compiler directives and reveals bugs.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f0980ab485940ff0ff5a3e5ec6260bec0ecafbac,2020-07-06 13:13:37
1330,7,True,325,325,75,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Provides the same timing metrics after placement, as we do after routing.",c4ae3fa32eefe76c637403b425a13d17a3b0e90d,2020-06-03 00:01:28
1329,6,True,286,36,7,0,"#### Related Issue
Related to the incr_sta pull request. #1296 

#### Motivation and Context
Add new regression tests to sanity check that full STA and incremental STA produces the same files. Current only support checking files produced by the option --post_place_timing_report.

Current DIFF-ing status:
1. *.net: Final packing file generated by the option –net_file [file_name]. SHA256 hash difference for atom_netlist_id.

2. *.place: Final placement file generated by the option –place_file [file_name]. SHA256 hash difference for Netlist_ID.

3. report_timing.setup.post_place.rpt: Intermediate timing file generated after placement and before routing. Identical.

4. *.route: Final routing file generated by the option –route_file [file_name]. Substantially different since the incr_sta is not integrated into the routing yet.

5. Other post-route timing reports: Also substantially different. I noticed that a lot of the timing statistics are the same, but the names/numberings of names, registers, LUTs are different.

#### How Has This Been Tested?
Tested on Arch_Flagship + Stereovision3.v and Arch_Flagship + LU8PEEng.v
Still need to test Arch_Titan + Neuron.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [x] All new and existing tests passed
",96b3454e15158e55a6816f6d7dabdb44efedacb4,2020-06-04 09:43:34
1324,1,True,1,1,1,1,"#### Description

Adding Antmicro to the contributing companies list in the README to reflect the commitment.

#### Related Issue

N/A

#### Motivation and Context

Antmicro have been contributing to VTR for quite a while, and expect to continue to do so for the foreseeable future related to our dedication to open source FPGA as well as customer projects. We want to raise prominence of the tool among the organizations we participate in - RISC-V and CHIPS, so showing commitment / contributions from more companies helps in this endeavor.

#### How Has This Been Tested?

N/A

#### Types of changes

N/A

#### Checklist:

N/A",e4162c1cdc076823812bd4b8a1f124849a55275a,2020-06-01 13:21:50
1321,2,True,141,33,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Update commit procedures to match current workflow.

Provide guidance on suggested commit message style and commit structure.
",01ecc50719775adc41ee1fec118dc970c497a197,2020-06-01 17:46:01
1320,4,True,53,1,3,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Created output_vector_headers_equal which compares the tokens of each vector header and ignores white spaces. This function calls on string_to_token_array which tokenizes each string and returns as an array as well as initializes a pointer passed to the size of the array. Before a strcmp was used.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Issue #1291, a bug that says the vector headers are mistmatched if the blank spaces differ.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

There was a minor bug and this remedies it.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

I ran through make test. As well, I created a seperate c file where I could test different headers easily to ensure they passed and failed when they should.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ad609c27bd458592d5cd468f619c827c086ed5dd,2020-05-27 19:05:49
1319,23,True,277,7,7,3,"added command line options: draw_block_outline, draw_block_text, clip_routing_util, net_max_fanout, set_net_alpha, to the user interface.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Added the 3 of the 5 mentioned options in the main.ui file. Added their callback functions in draw.cpp. Added the other 2 widgets and buttons in buttons.cpp. The alpha value in the intra_block.cpp can be adjusted with the gui now and the command line options are all in the gui as well.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This way the user can make all changes to the circuit through the gui only, which is easier and more intuitive.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I ran vpr with disp on, on multiple circuits and made sure the buttons and widget make their corresponding change.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",de5a25de9a1f96eb7a97c41ec8037f0b6e5fdda7,2020-06-04 14:01:47
1318,3,True,53,0,1,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
I added a simple checker that checks for continuity between traces in read_route.cpp, if a weird discontinuity is detected it throws an exception, and tells the user which net and line threw the error. This is an improvement over the segmentation fault that happened before hand.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1307

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Following the issue described by Andrew; where the program would crash if VPR is given an externally produced route file, it was determined that the bug was caused by the introduction of a 'dangling branch', which is when the route trace has a discontinuity between traces.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
I ran the regression tests and as expected there is no impact on the normal flow. I also ran several flows, and played around with the generated route files, checking to see if random moving or deleting of nodes caused errors, which they did. Furthermore I checked to make sure it wouldn't cause issues if the route file was not modified. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cea4b63689db11816027aea23b6690af1c384f2d,2020-06-09 17:08:18
1316,1,True,749,230,10,20,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
NOTE: The environment that I will clarify in the following is related to using hard adders.

The first dummy adder in the split adder chain is responsible for the general carry-in of the circuit. The inputs of the first dummy adder are connected to the ground and the cin is connected to the carry-in of the entire hard adder. Currently, the cout of the first dummy adder is connected to the cin of the next adder. However, the sumout of the first dummy adder, which contains the value of the general carry-in, should connect to the next cin. This is come from ""ground+ground+cin=sumout+cout.""

#### Related Issue
#912

#### Related files
1-bit hard adder
[test1.v.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686804/test1.v.txt)
[test1_input.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686805/test1_input.txt)
[test1_output.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686806/test1_output.txt)
[out1.blif.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686803/out1.blif.txt)

3-bit hard adder
[test2.v.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686811/test2.v.txt)
[test2_input.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686812/test2_input.txt)
[test2_output.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686813/test2_output.txt)
[out2.blif.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4686810/out2.blif.txt)


#### Command
```
./odin_II -a ../vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml -V test1.v -t test1_input -T test1_output -o out1.blif
```
```
./odin_II -a ../vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml -V test2.v -t test2_input -T test2_output -o out2.blif
```

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b07836932412636938ab7038b305a364bdc9d08c,2020-06-09 02:58:15
1315,1,True,8,8,2,0,"### CID 210518:  API usage errors  (PRINTF_ARGS)
```
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_util.cpp: 1329 in assert_constant_positionnal_args(ast_node_t *, long)()
>>>     CID 210518:  API usage errors  (PRINTF_ARGS)
>>>     Argument ""i"" to format specifier ""%d"" was expected to have type ""int"" but has type ""long"".
1329                     error_message(AST, node->line_number, node->file_number,
1330                                   ""%s node expects a constant at positional arguments [%d]\n"", ast_node_name_based_on_ids(node), i);
```
### CID 210517:  Resource leaks  (RESOURCE_LEAK)
```
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_elaborate.cpp: 1115 in build_hierarchy(ast_node_t *, ast_node_t *, int, sc_hierarchy *, bool, bool, e_data *)()
1110             if (child_skip_list) {
1111                 child_skip_list = (short*)vtr::free(child_skip_list);
1112             }
1113         }
1114    
>>>     CID 210517:  Resource leaks  (RESOURCE_LEAK)
>>>     Variable ""child_skip_list"" going out of scope leaks the storage it points to.
1115         return node;
```
### CID 210516:  API usage errors  (PRINTF_ARGS)
```
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_util.cpp: 1324 in assert_constant_positionnal_args(ast_node_t *, long)()
>>>     CID 210516:  API usage errors  (PRINTF_ARGS)
>>>     Argument ""arg_count"" to format specifier ""%d"" was expected to have type ""int"" but has type ""long"".
1324             error_message(AST, node->line_number, node->file_number,
1325                           ""%s node expects %d positional arguments\n"", ast_node_name_based_on_ids(node), arg_count);
```
## CID 210515:    (PRINTF_ARGS)
```
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_util.cpp: 1442 in c_display(ast_node_t *)()
>>>     CID 210515:    (PRINTF_ARGS)
>>>     Argument ""argc_node"" to format specifier ""%d"" was expected to have type ""int"" but has type ""long"".
1442                                 error_message(AST, argv->line_number, argv->file_number,
1443                                               ""specifier character [%d] is not associated with a constant, node is %s"",
1444                                               argc_node, ast_node_name_based_on_ids(argv));
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_util.cpp: 1416 in c_display(ast_node_t *)()
>>>     CID 210515:    (PRINTF_ARGS)
>>>     Argument ""argc_node"" to format specifier ""%d"" was expected to have type ""int"" but has type ""long"".
1416                                 error_message(AST, argv->line_number, argv->file_number,
1417                                               ""specifier character [%d] is not associated with a constant, node is %s"",
1418                                               argc_node, ast_node_name_based_on_ids(argv));
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/ODIN_II/SRC/ast_util.cpp: 1403 in c_display(ast_node_t *)()
>>>     CID 210515:    (PRINTF_ARGS)
>>>     Argument ""argc_node"" to format specifier ""%d"" was expected to have type ""int"" but has type ""long"".
1403                     error_message(AST, node->children[0]->line_number, node->children[0]->file_number,
1404                                   ""specifier character [%d] has no argument associated with it"", argc_node);
```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",75f255838895c233d13420582b719e7830026ddf,2020-05-25 12:19:33
1314,5,True,61,4,3,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#1313 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a012b7f112c10d25dbc5ca6aebde7ad67d425059,2020-06-18 14:45:06
1309,10,True,766,2,15,8,"<!--- Provide a general summary of your changes in the Title above -->
This pull request aims to enhance users' experience in VPR packer.
It allows users to specify if a ``<mode>`` of a ``<pb_type>`` in the architecture XML to be visible/invisible to VPR packer.

#### Description
<!--- Describe your changes in detail -->
Changes are made to ``libarchfpga`` and VPR packer to support the feature.
- New XML syntax ``packable=<bool>`` has been added to ``libarchfpga`` as a property of XML node ``<mode>``. 
- Data structure ``t_mode`` has a new variable of ``packable`` to store the property.
- VPR pack is modified to flag infeasible packing when 
    - Packer tries to consider pack patterns that are defined in an unpackable ``<mode>``
    - Packer tries to map resource to a ``<pb_type>`` under an unpackable ``<mode>``
    - Logic block router tries to expand edges that belong to an unpackable ``<mode>``
- Documentation has been updated for the new syntax

#### Related Issue
<!--- Pull requests should be related to open issues -->

<!--- If suggesting a new feature or change, please discuss it in an issue first -->
This issues has been presented and discussed during the VTR developers' meeting at FPGA'2020.
Currently, it is hard to debug a ``<complexblock>`` with a deep hierarchy, especially due to multi-mode ``<pb_type>``. 
Packer may drop the ball due to a dangling net/connection or other minor issues in the ``<pb_type>``, which VPR's architecture checker will not flag fatal errors.
When packing fails, it is hard for users to spot which ``<mode>`` or which  ``<pb_type>`` causes the problems.

<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Now, users can use XML syntax ``packable`` to specify if a ``<mode>`` of a ``<pb_type>`` in the architecture XML to be visible/invisible to VPR packer.
By default, every ``<mode>`` is packable.

For example, 

    `<mode name=""lut6"" packable=""false"">`

When users define an unpackable ``<mode>``, any child ``<pb_type>`` and any mode under the children will be unpackable.

As such, users can turn on/off any ``<mode>`` for packer and quickly spot which ``<mode>`` causes packing to fail.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
It passed CI regression tests without QoR changes.
Passed artificial XML with unpackable mode definition.

<!--- Include details of your testing environment, and the tests you ran to -->

<!--- see how your change affects other areas of the code, etc. -->
No impact on other codes except packer.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ X] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ X] All new and existing tests passed
",4a69343e89dbab6576f5371e0d8e88c66af56612,2020-06-03 12:57:57
1308,4,True,630,165,17,1,"this PR adds the $display command and the $finish command
this PR adds the non verilog standard `__VA_ARGS__` to simplify some metaprogramming.

the commands run right before converting the AST to assure that conditions are folded.
also fixes arguments not being overrode in defines and some predefined macros

a good example of what this allows:

tmp.v
```Verilog
`define assert(_condition, _fmt, ...) \
    if (! _condition) begin \
        $display(""%s:%s `assert(_condition) failed\n"" _fmt , `__FILE__, `__LINE__, __VA_ARGS__ ); \
        $finish(_condition); \
    end

module test(
    a,
    b
);

input a;
output b;

$display(""line: %d\n"" , `__LINE__ );
`assert(0 != 0, ""forcefully fail -> %s a line %d"", `__FILE__, `__LINE__)

assign b = a;

endmodule
```

the output looks like 
```bash
--------------------------------------------------------------------
Welcome to ODIN II version 0.1 - the better High level synthesis tools++ targetting FPGAs (mainly VPR)
Email: jamieson.peter@gmail.com and ken@unb.ca for support issues

Using Lut input width of: -1
Verilog: tmp.v
--------------------------------------------------------------------
High-level synthesis Begin
Parser starting - we'll create an abstract syntax tree. Note this tree can be viewed using Grap Viz (see documentation)
Adding file tmp.v to parse list
Optimizing module by AST based optimizations
Converting AST into a Netlist. Note this netlist can be viewed using GraphViz (see documentation)
==========================
Detected Top Level Module: 	test
==========================
line: 15
tmp.v: `assert(0 != 0) failed
forcefully fail -> tmp.v a line 16%   
```
 
#### Related Issue
This allows the define to work as expected and also adds the capability to test for expected AST failure to see that they are indeed caught

#### Motivation and Context
improve regression and improve verilog support

#### How Has This Been Tested?
odin regression test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed

## TODO
- [ ] fix $display and $finish only accepting constant values (parameters don't work)
- [ ] improve test cases for the preprocessor
- [ ] add test cases for $display
- [ ] add test cases for $finish
",67486656d410d4864c7f931832846f8ef55383a5,2020-05-21 21:30:56
1306,1,True,12,8,1,2,"<!--- Provide a general summary of your changes in the Title above -->
#### Description

VPR crashes when run with `--analysis` and `--gen_post_synthesis_netlist`. It turned out that the crash was caused by unconnected pins not having assigned nets in the `t_pb->pb_route` map.

I fixed that by checking whether a key is present in the map instead of retrieving its value and checking if it corresponds to a valid net. 

#### Related Issue
https://github.com/SymbiFlow/symbiflow-arch-defs/issues/1467

#### Motivation and Context
This is a bugfix that allows to get a post-synthesis netlist from VPR.

#### How Has This Been Tested?
Locally by enabling the `--gen_post_synthesis_netlist` and seeing it not crash.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",bd7af225c2460c9eea6c43e451b2dcb9893a526d,2020-05-20 14:22:12
1305,1,True,20,1,3,1,"This pull request aims to solve the following problem: 

  - Keep the VPR delayless switch name in a constant string and can be used easily in later functions
  - Avoid users to define a switch in the reserved names, which may crash the software.
 
<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Modify the readarch library to add a constant string for delayless switches.
Check codes are added to error out `read_arch`  when users try to define a switch in the same name as the delayless switch.
VPR setup code has been adapted to use the delayless switch constant.

#### Related Issue
<!--- Pull requests should be related to open issues -->
This issue has been discussed during the VTR developer's meeting at FPGA'2020

<!--- If suggesting a new feature or change, please discuss it in an issue first -->

<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Delayless switch is a special switch created by VPR internally.
It is the switch that is used by edges between SOURCE and OPIN, IPIN and SINK, or direct connection between CLBs in VPR's routing resource graphs.
It has a special name and users are not allowed to define it.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Passed the regression tests in CI without QoR changes.
Tested with XML sample, to ensure that read_arch will error out when reserved names are used.

<!--- Include details of your testing environment, and the tests you ran to -->

<!--- see how your change affects other areas of the code, etc. -->
No impact on the rest of VPR codes. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ X ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X ] All new and existing tests passed
",ba07c244e165e3d5af2fb436d49c5c63e533d872,2020-05-20 13:36:32
1304,10,True,807,34,16,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR introduces a quick start guide to VTR, which walks through using the various tools to implement a design. It starts with VPR, then expands to manually running the flow (invoking ODIN, ABC, VPR) and then using run_vtr_flow.pl.",6634d02f4a2220ccd53f47e139c3e01fabd63872,2020-05-22 01:02:28
1303,2,True,43,23,8,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Move router heap tests into a single task in vtr_reg_strong.

Mixing these into other existing tests makes it more challenging to trace root causes  (since the test name doesn't match what its testing).

This also keeps the basic regression test small and fast, which prevents us from bumping into the TravisCI build time-out when using sanitizers.",0f1fd1f2c38de06d5fb4ca979f5beb4adc5af215,2020-05-18 15:47:42
1302,16,True,188,141,11,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Fixes various memory leaks which could occur when errors cause VPR to abort.

Also ensures LSAN uses a consistent exit code in case of leaks across different machines (for instance, ensuring consistent behavior on local developer and Kokoro machines).

This should fix the 'strong sanitized' Kokoro test, which was failing due to these leaks. We have some tests which check that VPR exits with an error in the case of invalid input. However some memory was leaked in these cases causing LSAN to exit with a different exit code (causing the test to fail).",104b6870c8602ce48f4e98acb2cfa1e7c271200a,2020-05-17 03:49:13
1301,1,True,384,352,7,2,"Improves the error reporting syntax

#### Description
Improves the error reporting to print the failure location using _file:line_ format so IDEs can recognise the error location and provide a quick jump.
It also tweaks some of the other formatting to be closer to the normal C _assert()_ function output

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7352856868561799957a4f5fac0b5fbfc49986f3,2020-05-20 19:41:07
1300,1,True,0,46,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Removes unused variable in placer.",e21ecb53442bcf8f2478152145a40bb0788a1fd0,2020-05-13 03:11:48
1298,12,True,281,166,9,5,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR fixes some bugs related to the recent sub tiles addition.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
For SymbiFlow purposes, the sub tiles were tested on regular tiles, such as the BUFG tile which has the same kind of sub tiles, which differ only for the pinlocations.

When it comes to more heterogeneous tiles, such as the CLBM, the sub tiles differ also in the pin definition.

What went undiscovered in the sub tile addition were two things:

- correct pin mappings checks between logical and physical tiles that (fixed with https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/2d5cb9979cbd49eeb2797699927d19b1741a7f77)
- fix initial placement that cannot have incompatible `logical_blocks <-> sub_tiles` locations. Also fixed the check for the sub tile compatibility (fixed with https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/b30e26b6df791cce0770f805ededf67a1920e873).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
strong and basic regression tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",3223463330d2ad298ff9baad838e4f057a881c74,2020-05-13 17:55:27
1296,83,True,2216,468,48,8,"<!--- Provide a general summary of your changes in the Title above -->
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Traditionally VPR has performed (full) timing updates sporadically (e.g. once per placement temperature, or once per routing iteration) since they are relatively expensive (linear in the size of the timing graph).

Since VPR mostly operates by incrementally modifying the circuit it would be very helpful to use more up-to-date timing information to ensure the optimizers have a more accurate view of the current circuit timing.

#### Description
<!--- Describe your changes in detail -->
This PR adds support to VPR for incremental timing updates based on the new incremental STA support which has been added to [Tatum](https://github.com/kmurray/tatum/pull/5).

By recording what edges in the timing graph have had their delays changed, it is possible for the STA engine to incrementally update timing information, usually in much less than linear time. While support for this is now included in Tatum, it needs additional support to work effectively in VPR.

In particular this PR adds:
 * Support for invalidating edges who's delay has changed to allow the STA engine to incrementally re-calculate timing information
 * Re-works VPR's slack, crticality and timing costs to update incrementally based on the nodes/pins who's timing information has changed (as reported by the STA engine). This is actually a significant amount of work, but also means the various algorithms are more efficient even when no incremental STA is used.

At the moment, incremental STA is not enabled by default (would need to set `--timing_update_type incremental`) and the traditional full STA updates are used (although the incremental placer cost updates are always enabled). Currently only the placer has been updated to support incremental timing updates, but it should be straightforward to extend this to the router as well.

#### Future work (beyond scope of this PR)
 * Extend incremental timing updates to router
 * Improve placer algorithm to exploit less stale timing information
 * Parallelize incremental analyzer in Tatum

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested on vtr_reg_basic/vtr_reg_strong and a subset of nightly (vtr_req_qor_chain, titan_other, titan_quick_qor).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",ce8bbd8f29345c3f5e7b3835debcd650519d9f87,2020-06-02 20:54:05
1295,5,True,480,179,22,1,"vtr::FlatSparseMatrix takes into account that some rows (nets) are
smaller than others and lays them out in adjacent memory. This should
reduce memory fragmentation and improve locality.",01dc86950a49231156c80b8e1dc79e139e50b3a8,2020-05-12 19:24:41
1293,2,True,37999,2265,73,1,"

#### Description
This PR switches from csv to json to allow more complex content to be stored.  


#### Motivation and Context
It was neccessary since multiline values in csv would not work properly, json will allow us to parse expected errors and support finer grain regression test and prevent changes that would break the flow.

#### How Has This Been Tested?
Ran throught the whole odin suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",943ea56b4b5b2452cc1cade1bf71f9f359599a6b,2020-05-11 00:15:47
1290,1,True,294,0,1,2,"This is a simple script that parses VPR log and extracts data printed out during placement (simulated annealing progress). Then it allows to generate various plots of the data.

#### Description
See the script's docstring or run it with the `-h` switch.

#### Related Issue

#### Motivation and Context

While playing with placement parameters or even with the code it is good to know how various metrics change with the annealing temperature. This gives valuable insights in how the algorithm works and if it progresses correctly.

#### How Has This Been Tested?

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1e63bd5dfa33ed237e669bb87dc79ccf979a6598,2020-04-30 13:47:56
1289,6,True,247,199,5,13,"#### Description
Depending on the node and edge order, the previous algorithm could result in an inconsistent group assignment, failing the following assertion:

https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/d4ea40548ee30aa13e27df5268760a86e38ad289/vpr/src/route/rr_graph.cpp#L3051

#### Related Issue
#1288 

#### Motivation and Context
These bugs were found while implementing #1271

#### How Has This Been Tested?
A unit test has been added that fails with the previous algorithm, and also been tested with `random_shuffle` in #1271

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",411e788cb793151a504ed8bde7c4447acae8be6c,2020-08-13 22:58:53
1288,7,True,119,8,10,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

This PR adds an option that controls how check route runs. It consists of three values:

- `off`: check route is completely disabled;
- `quick`: non-configurable nodes are skipped from the check;
- `full`: performs the full check;

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

For some of the real devices, check route takes a non-negligible amount of time due to the high presence of non-configurable nodes, which check slows down the entire process.

With this PR the user can choose to skip the check of these nodes, or completely disable the check route.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
reg_basic
reg_strong

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",44f8f7d1ea3afc3f01816f3fee16f17a5f207260,2020-05-07 17:38:47
1287,41,True,2291,79,31,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR adds a debugging user interface that enables some features to visualize move generation for placement as follows:
 * Placement pauses at each proposed move
 * The UI highlight the old location of the block in Gold, the new location of the block in GREEN, the fanin and the fanout
 * Print out the move type, move outcome and delta cost in the status bar

The implementation is added under ""VTR_ENABLE_DEBUG_LOGGING"" compilation flag to avoid any overhead in case of release mode.
Moreover, another flag is defined in the code (move_utils.cpp) to enable this debugging feature as the compilation flag is used for many other debugging logging. The flag is called """"f_placer_debug"".

It would be better to group the debugging utilities of each stage (packing-placement-routing) under a flag for this stage. All these flags would be checked only if VTR_ENABLE_DEBUG_LOGGING is on.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change enables more visualization of how the placer is working and giving more insights into the move generation process

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- run_vtr_reg_nightly to make sure that no overhead is added if the flag is disabled
- test that the UI is working for multiple VPR benchmarks
- test that the feature is disabled if the compilation or the code flag is disabled

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",35f8a4e94f3975fa2a60f48e055b1f81c5dcd342,2020-08-28 05:00:31
1286,1,True,12,13,4,0,"Should fix Coverity 208510

See also https://github.com/SymbiFlow/uxsdcxx/pull/49#event-3253121681 for upstream fix.",1c30c25c04679f259abdcba61346e44be155498f,2020-04-22 14:52:24
1285,5,True,32,13,6,0,Additional fixes for issues identified by Coverity,1d89ea7a51b73a7d744f4803d5528a9547b65ed3,2020-04-20 17:51:46
1284,2,True,20,0,1,6,"#### Description
If it happens that a routing graph contains zero-capacity channels then the computation of bounding-box placement cost yields in +infs. This may happen when VPR operates on a rr graph provided by a user. This makes the placement optimizer not optimize anything.

The cost is computed as inverse of a channel capacity. This PR adds a condition which catches zeros, logs a warnings and substitutes them with ones. This way channels of capacity 0 and 1 will have the same placement cost.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
Solves poor timing-driven placement results in SymbiFlow on the Artix 200T architecture.

#### How Has This Been Tested?
The placement algorithm was run twice: first in its unmodified version, second with the proposed modification. Each time using the same packed netlist. The results were assessed through the worst critical path delay estimated after placement:

| Design | Original | Proposed |
| --- | --- | --- |
| picosoc | 62.61ns | 22.75ns |
| murax | 36.90ns | 15.53ns |
| LiteX SoC (VexRiscv + DDR) | 41.83ns | 19.49ns |
| LiteX SoC (Linux capable VexRiscv + DDR) | 60.66ns | 20.41ns |

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",087bf93d110d89a83cf178576a33d1a436907617,2020-04-21 14:39:54
1283,3,True,10,2,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
On some systems there are memory leaks caused by system libraries (e.g. related to VPR graphics) which get picked up by LSAN.

This change adds an LSAN suppression file to avoid such leaks causing test failures (since they are outside of VTR's control).

Also fixes an uninitialized member variable in t_physical_tile_type also detected by sanitizers.",c1542ff68ae29ab14e93e4416c54ea422f17f059,2020-04-17 04:44:38
1282,1,True,8,1,1,2,"The using storage::data method forwarding only works if there is such
a method defined in the base class, which might not be true for all
specializations (I ran into this with a `vector<bool>` specialization).

This can be fixed by forwarding the method in a traditional way with
an inline implementation; then, the compiler will defer compiling it
to when actually needed.

Signed-off-by: Henner Zeller <h.zeller@acm.org>",4983542313710c4f0660165b4ab38d242e323086,2020-04-15 20:29:53
1281,3,True,166,2,8,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Building on PR #1276, this adds an additional Kokoro test, which runs vtr_reg_strong with a [sanitizer enabled](https://docs.verilogtorouting.org/en/latest/dev/developing/#sanitizers) build of VTR.

Since vtr_reg_strong is out main 'feature check' test it would be good to have it checked with sanitizers for memory issues/leaks etc.

We already have a sanitized version of the vtr_reg_basic test running in TravisCI, but the combination of longer compilation times with sanitizers enabled, and longer test time make it impossible to run vtr_reg_strong with sanitizers on TravisCI.",2a47ab42a3a47eab8bfd3b75be96cb81df1f1da7,2020-04-16 13:30:52
1280,1,True,10,5,1,0,"Addresses coverity issues 201519, 200831, 165914
",c9384f380a83f9dc701accb461d123f3a362f31e,2020-04-14 19:40:03
1278,4,True,3,5,3,0,"* Fixes for building with gcc-10
* Fixes for Travis infrastructure (should close #1263)
* ~~Add Travis gcc-10 and clang-9/10 build tests~~
  * Turns out gcc-10 and clang-9/clang-10  aren't available with the OS version we're using in Travis",482c8444d607dabcf87d091541a1d4a3a809c4d0,2020-04-14 17:59:25
1277,1,True,4,1,1,3,"To aid in debugging and understanding performance/QoR differences across different infrastructure/platforms, parse out additional metrics about how VPR was built.",cada5614675ea4b3f86a66f00c6e82925c104dc6,2020-04-14 17:01:59
1276,5,True,71,18,8,11,"I've observed a number of run-time failures on the Kokoro nightly regression test, despite having fully updated the nightly regression test results, and the same tests passing when run locally.

For example see: https://source.cloud.google.com/results/invocations/354130ae-411d-454b-bdb0-6d66751a702e/targets/foss-fpga-tools%2Fverilog-to-routing%2Fupstream%2Fpresubmit%2Fnightly/log
where we see everything passes run-time and quality except for route time on some tests:
```
regression_tests/vtr_reg_nightly/complex_switch...[Fail]
 k4_N8_topology-0.85sL2-0.15gL4-on-cb-off-sb_22nm_22nm.xml/mcml.v/common crit_path_route_time: golden = 81.87 result = 2124.87
```

Diffing the offending [VPR on Kokoro log file](https://storage.cloud.google.com/vtr-verilog-to-routing/artifacts/prod/foss-fpga-tools/verilog-to-routing/upstream/presubmit/nightly/577/20200413-122350/vtr_flow/tasks/regression_tests/vtr_reg_nightly/complex_switch/run001/k4_N8_topology-0.85sL2-0.15gL4-on-cb-off-sb_22nm_22nm.xml/mcml.v/common/vpr.out) with one run locally 
([vpr.out.txt](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4475704/vpr.out.txt)) shows identical results and router operations, but significantly longer run-times on Kokoro.

Checking the amount of free memory as the tests run shows:
```
$ grep 'Mem:' kokoro-sisyphus_resultstore_prod_foss-fpga-tools_verilog-to-routing_upstream_presubmit_nightly_354130ae-411d-454b-bdb0-6d66751a702e_build.log | awk '{print $4}' | sort -h | uniq -c
      1 512M
      1 516M
      1 547M
      1 592M
      2 595M
      1 596M
      1 599M
      3 600M
      1 602M
      1 641M
      1 836M
      1 837M
      1 838M
      3 1.1G
      1 1.2G
[...]
     12 35G
     15 36G
      2 37G
     16 38G
[...]
      1 85G
      2 86G
      1 88G
```
Indicating that at points the machine is nearing memory exhaustion (<1G free).

And begins swapping to disk, which shows up as a non-zero amount of swap usage:
```
grep 'Swap:' kokoro-sisyphus_resultstore_prod_foss-fpga-tools_verilog-to-routing_upstream_presubmit_nightly_354130ae-411d-454b-bdb0-6d66751a702e_build.log | awk '{print $3}' | sort -h | uniq -c
     52 0B
      5 4.4M
      1 22M
      9 23M
     59 28M
     12 29M
      1 57M
      4 58M
     43 63M
      4 64M
```

This PR reduces the number of parallel instances of VPR being run during Kokoro nightly, in order to avoid swapping to disk, and prevent run-times from being effected by it.

",03e8e58da2f2bb5e33a4ded67dacd5e4644a9fd6,2020-04-17 04:49:06
1275,1,True,109,43,5,0,"Added test coverage for Z into the RTL library

#### Related Issue
TODO

#### Types of changes
- [x] Test coverage
- [x] Bug fixes
#### Checklist:

- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",e9f3076c396bc40c2a5e50fed98b5bfe72f41c69,2020-04-20 23:58:23
1274,1,True,0,0,2,0,This ensures they appear in the RTD generated latex PDF,3542562b97225f7d0a25ee99557febe5051b39ea,2020-04-13 19:21:32
1273,13,True,76,44,15,0,"<!--- Provide a general summary of your changes in the Title above -->
Various bug fixes for issues found by Coverity",ffec5857f667743989fd267ee7ec1d8f0cb19c4c,2020-04-13 21:30:57
1272,5,True,7,4,3,0,"<!--- Provide a general summary of your changes in the Title above -->
Fixes some buildbot automated compilation tests, and some minor compiler warnings with later versions of GCC (7/8/9).",95564c3e776ef82de888e63c558b07fc2aeaf3e2,2020-04-13 19:21:46
1271,8,True,313,72,19,10,"#### Description
This adds two flags to control RR graph node reordering:

* `--reorder_rr_graph_nodes_threshold`: minimum node count to enable reordering
* `--reorder_rr_graph_nodes_algorithm`:
  * `none` disables reordering
  * `degree_bfs` chooses an ordering based on BFS traversal order and node degree
  * `random_shuffle` chooses a random ordering
* `--reorder_rr_graph_nodes_seed`: PRNG seed for `random_shuffle`

#### Related Issue
#1270 
#1289

#### Motivation and Context
This change was motivated to reduce run time, but it has also been useful to expose a few bugs.

#### How Has This Been Tested?
In addition to CI, I have compared QoR using nightly tests with the `degree_bfs` algorithm.
I've added a test using `random_shuffle` to `vtr_reg_basic` tests to catch implicit node order assumptions in the future.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2012743896bbc477f05f6203ac39ed0b6c045ab9,2020-08-26 21:18:23
1269,2,True,12,0,1,1,"Some system implementations of sort are not really good in
only using the equality and less-than operators on iterators; add
operators observed to be needed.

Signed-off-by: Henner Zeller <h.zeller@acm.org>

CC: @litghost ",e3854923298d84047a4ac15ac476fa0f6b62a323,2020-04-13 13:34:50
1268,5,False,2500,22,8,0,,0fcc8c79c24549e9b6486f94525bd5fb3e8ffb58,
1267,2,True,112,6,8,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Adds vpr `--placer_effort_scaling device_circuit` option which scales placer effort as device_size ^ (2/3) * nblocks ^ (2/3) as suggested by @vaughnbetz.

The regular behaviour is unchanged (vpr `--placer_effort_scaling circuit` is the default), and still scales placer effort as nblocks ^ (4/3).",8062ec85e4970fe426e17586f0efc7c2bf4b73c9,2020-04-08 16:29:32
1266,8,True,557,531,94,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
* Record geomean non-virtual intra-domain critical path delay metric in parse/golden regression test results (this is the metric which we should be tracking for multi-clock benchmark sets like Titan)
* Report geomean non-virtual intra-domain critical path delay from VPR even if only one clock (for consistency)
* Skip zero cpd clocks when calculating geomean non-virtual intra-domain critical path delay (happens if the clock actually has intra-domain timing paths)
* Update vtr_reg_titan_he to use proper SDC files",cd03c78f74c6d5e56759207e50332a00aab844b7,2020-04-09 19:48:42
1265,1,True,33,3,1,4,"#### Description
The change forces operator< to be inlined properly.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1225

#### Motivation and Context
Original operator< is not inlined by compiler. Since the function is timing critical, force the function to be inlined can reduce place time by ~10% with xc7 tests and ~5% with QoR and Titan benchmark tests

#### How Has This Been Tested?
Run through xc7 tests like picosoc and murax and passed QoR and Titan Benchmarks.
Comparison shows a place time reduction.
Comparison also proves there is no impact on quality of results.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",53331881036d97b99baa9b9e2b1603aa18fc36be,2020-04-13 13:36:07
1264,2,True,31,0,1,2,"#### Description

GitHub uses https://github.com/github/linguist to do language stats. linguist however mis-detects a bunch of things in this repo. It also needs to be told about the ""vendored"" files in the repo.

This can be fixed by setting values via `.gitattributes` file which is done here.

##### Before
```
53.46%  C         	 # This mostly comes from ABC
24.03%  C++
18.32%  Verilog  	 # This is the various imported regression tests / benchmarks
1.24%   HTML
0.85%   Perl
0.63%   Python
0.28%   Shell
0.28%   Cap'n Proto
0.27%   CMake
0.15%   Makefile
0.13%   Yacc
0.10%   JavaScript
0.07%   Lex
0.06%   Raku   		 # Misdetection
0.04%   M4
0.03%   CSS
0.03%   Objective-C
0.01%   Coq              # Misdetection
0.01%   Dockerfile
0.01%   SourcePawn    	 # Misdetection
0.00%   Lua
0.00%   Emacs Lisp
0.00%   Batchfile
0.00%   SystemVerilog
```

##### After
```
80.92%  C++
5.47%   Verilog
4.42%   Python
3.76%   C
2.45%   Perl
0.97%   Shell
0.70%   JavaScript
0.44%   Yacc
0.27%   Lex
0.23%   CMake
0.17%   Makefile
0.08%   HTML
0.05%   Cap'n Proto
0.05%   Dockerfile
0.04%   CSS
```
",95873f30727edc99a65aab7695b8239257cbe728,2020-04-06 16:45:44
1262,3,True,417,92,4,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Add high-level overview and more comments to timing graph construction code. To address comments from #1040

Closes #1040",f60bccd9fda49684662e28954647d69dae3c1474,2020-04-09 19:50:58
1261,1,True,3,3,1,2,Fixes expected regression test exit code (changed due to combination of #1259 and #1258).,d83aafa0942ec00cdeb0c28f1c43eda040b15dd3,2020-04-03 18:24:08
1260,1,True,10,6,1,3,"It appears Travis no longer includes various cmake/gcc/llvm PPA sources
in its whitelist, so we must change how they are specified.

Example build issues: https://travis-ci.com/github/verilog-to-routing/vtr-verilog-to-routing/jobs/313260700
",de697ce1342943acd3f0248e41b213b946af4b80,2020-04-03 12:15:38
1259,6,True,3015,5,10,1,"Code fixes, documentation updates and improved tests for PLL clock source specification/detection.

Closes #1038 ",0b730b5893ec2fc9033ceb8ed8953b79fa742038,2020-04-03 13:31:38
1258,1,True,5,1,2,0,"Crashes occurred when an early error means some data structures are uninitialized when things are cleaned up.
",59b49bca9c194a04246beb22e1be7088666cdc82,2020-04-03 13:27:06
1257,1,True,126,8,5,1,"Also expands VPR graphics description section to include illustrative
animations, including of the RR graph.

Closes #1256 ",a80426f4c28bef7b1e809718415f7aedb56e6527,2020-04-02 16:46:27
1255,4,True,207,0,3,3,"<!--- Provide a general summary of your changes in the Title above -->
Various updates to documentation on development best with respect to debugging.

Also adds a pretty printer for some VTR data types under `dev/`",6a7943d5b8df8e6515b15d07f9c44d2ba26924c5,2020-04-02 16:46:45
1254,1,True,5,1,1,0,"We now ensure the canvas is only added the first time graphics is
initialized.",165c17b86924baecff996fafd6d0773ea955c8ff,2020-04-01 18:04:37
1252,27,True,493,49,21,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Adds `--graphics_commands` to VPR and the `dev/vpr_animate.py` script used to generate the optimization animations on www.verilogtorouting.org and #1251.

These features should be generally useful for inspecting/visualizing/understanding what VPR is doing on particular benchmarks.",25a1c76e176fe9860715474f36af7e573ff34708,2020-04-01 13:38:23
1251,1,True,9,0,1,1,,ebae37682d84c279ea3ac6b6b3ede44fe26bbabb,2020-03-31 20:34:59
1250,2028,False,16626,11073,283,1,"<!--- Provide a general summary of your changes in the Title above -->

This PR includes `wip/heterogeneous-tiles`

Branches deleted:
`wip/explicit_ports`
`wip/refactor_heap3`",3d33d76607cdcc2ae83aa93cca7b4a59c93aa4b8,
1248,1,True,26,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Create new entries in the regression diff if the tests weren't there before and display the new changes.

#### Related Issue
fix #1229 regression result generated

#### Motivation and Context
allow new regression expected results to be generated

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6ab2338a3a203207046d6d3190521657ad1aab52,2020-03-30 19:57:24
1247,2,True,215,158,13,0,"This PR enables generating 'diffs' of regression results rather than overriding the whole file.
this cleans up pr and simplifies the review
the diff will only override values that are outside the specified range or abs value

also:
you can use the generated failure log to rerun a subset of the tasks i.e.
`./verify_odin.sh -j 4 -t regression_test/benchmark/task/syntax $(cat regression_test/runXXX/synthesis_failures.log)`

if you wish to regenerate the regression expected result for just the subset:
`./verify_odin.sh --regenerate_qor -j 4 -t regression_test/benchmark/task/syntax $(cat regression_test/runXXX/synthesis_failures.log)`

attach to this PR the new diff can be viewed, although there are still line-based diff on GitHub, we can generate more meaningful CSV word diff now 
`git --no-pager diff --word-diff-regex=""[^[:space:],]+"" <file> > diff.csv.patch` 

#### Request Regression Change
extra whitespace in header is removed
bug in bm was simulating failed synthesis and generating output. (function_hdr)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",938f41a41ea721df4a803bca5b90a9539e30bcba,2020-03-29 01:21:52
1246,3,True,74,4,9,6,"### Description
Fixes bugs and adds a working `shell.nix` for developers using MacOS.

#### Related Issue
#1244

#### Motivation and Context
I have a Mac. I like Nix.

#### How Has This Been Tested?
I ran `vtr_reg_strong` on my Mac. There was 1 test failure and 13 QoR failures, which is interesting because I didn't change anything significant.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9d4561dfb239683c88a66086e5ee5e79f995cc07,2020-05-20 13:33:53
1245,1,True,11,9,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR change parser dict to ordered dict to preserve ordering of keys, older versions of python dict did not. python 3.5 (standard in ubuntu 16.04) dict does not preserve ordering

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3985d0546d2e4e592f31ef67c616078520ef85af,2020-03-28 03:37:50
1243,1,True,0,3,1,1,Typo,1ec4dd1c6a586bedd84c38aaf72da7c09f2210b5,2020-03-28 14:18:40
1242,1,True,97,97,6,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Update weekly golden results (see #1233)",9f217b39c3addd49709b2311b6733b0caf1cab4e,2020-03-30 19:09:47
1241,1,True,24,7,1,0,"The previously code could choose such pins if no ports had pin
equivalence, and an fc=0 pin appeared first in the tile/pb_type
port list. This would cause high run-times during placement delay
calculation, since the router would need to search the entire RR graph
before giving up (since no such path exists).

This commit ensures that we only consider pin classes which are a
accessible to/from the general inter-block routing network (i.e.
skipping those with fc=0).

Closes #1240
",ea7b7abd2b426af5e8d15f8bfc6b0d7c6b177955,2020-03-30 20:50:10
1239,7,True,82,23,7,0,"<!--- Provide a general summary of your changes in the Title above -->

Builds on #1216 and #1109 to use lookahead based initial timing estimates during the first routing iteration. This PR enables this feature (and updating of lower bound delays) by default. 

This PR requires #1216 so the map lookahead is used by default.",c9f6dfc8329d7c57cc86a41d0e04c344b8add9f0,2020-04-02 13:12:02
1238,1,True,71,6,11,12,"Fixes when creating gates with reference types with no identifier name.

#### Related Issue
Fixes #980 

#### How Has This Been Tested?
Added tests for basic vector reference type using both multiple and single gate input types

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",9f3db1ccae0ff93547fd215a4c6b71bf1345cdb1,2020-03-30 23:09:17
1237,4,True,12,6,3,0,Update README and release procedures documentation,1d911179e4d4823ccbebf8db3ada31cb0f4454fb,2020-03-27 21:44:01
1236,27,False,1037,498,90,0,This ensures the v8.0.0 tag appears in the `master` history.,fd69801f1424181362a87c990a666471313035e8,
1235,2,True,36,26,6,1,"Include '*.out' files (e.g. vpr.out, vpr.crit_path.out) in kokoro artifacts. These are the file which are useful for debugging flow issues and so should be included.

This PR will also update the kokoro documentation based on my experience debugging issues in kokoro runs.",cfad3ac52d547d6d4e7aafcee1a1a9ea84a9655d,2020-03-25 21:46:02
1234,2,True,63,28,3,2,"Refactors log messages for printing pb_type usage after packing too:

* Be in a consistent order (was using std::unordered_map, so variable depending on compiler)
* Show the heirarchical relation between pb_types

For example previously:
```
Pb types usage...
  DSP                      : 31
  LAB                      : 332
  M9K                      : 105
  PLL                      : 2
  alm                      : 3066
  dff                      : 5275
  dffeas                   : 5275
  half_DSP                 : 61
  inpad                    : 3
  io                       : 5
  lcell_comb               : 3542
  lut                      : 3546
  lut6                     : 2
  mac_mult                 : 61
  mac_mult_reg             : 61
  mac_out                  : 61
  mac_out_output_only      : 61
  memory_slice             : 1356
  outpad                   : 2
  pad                      : 5
  pll_normal               : 2
  prim_ram_A16x36_B16x36   : 28
  prim_ram_A256x36_B256x36 : 40
  prim_ram_A32x36_B32x36   : 5
  prim_ram_A8Kx1_B8Kx1     : 32
  ram_block_M9K            : 105
```

With this PR:
```
Pb types usage...
  io                           : 5
   pad                         : 5
    inpad                      : 3
    outpad                     : 2
  PLL                          : 2
   pll_normal                  : 2
  LAB                          : 332
   alm                         : 3066
    lut                        : 3544
     lcell_comb                : 3542
     lut6                      : 2
      lut                      : 2
    dff                        : 5275
     dffeas                    : 5275
  DSP                          : 31
   half_DSP                    : 61
    mac_mult                   : 61
     mac_mult_reg              : 61
    mac_out                    : 61
     mac_out_output_only       : 61
  M9K                          : 105
   ram_block_M9K               : 105
    prim_ram_A256x36_B256x36   : 40
     memory_slice              : 840
    prim_ram_A8Kx1_B8Kx1       : 32
     memory_slice              : 32
    prim_ram_A32x36_B32x36     : 5
     memory_slice              : 176
    prim_ram_A16x36_B16x36     : 28
     memory_slice              : 308
```
",4cccd45fdce53fa7ce6f532a41151efa8af9c162,2020-03-25 21:47:28
1232,1,True,108,38,7,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR fixes issue were really small benchmark accross different machines produced times that are way off.

```
  Ok . . . . . . . . . . . . . . . . . operators/binary_logical_and/k6_N10_40nm
  Ok . . . . . . . . . . . . . . . . . operators/asr_8_6/no_arch
  Ok . . . . . . . . . . . . . . . . . operators/unary_bitwise_bufnode/k6_N10_mem32K_40nm
  Ok . . . . . . . . . . . . . . . . . operators/signed_to_unsigned/k6_frac_N10_frac_chain_mem32K_40nm
  Ok . . . . . . . . . . . . . . . . . operators/twobits_arithmetic_mod/k6_frac_N10_frac_chain_mem32K_40nm
  Ok . . . . . . . . . . . . . . . . . operators/twobits_arithmetic_minus/k6_N10_mem32K_40nm
  Failed . . . . . . . . . . . . . . . operators/unary_bitwise_bufnode/k6_frac_N10_frac_chain_mem32K_40nm
    - synthesis_time(ms)                  [-0.2-]{+26.3+}
  Ok . . . . . . . . . . . . . . . . . operators/asr_8_6/k6_N10_mem32K_40nm
  Ok . . . . . . . . . . . . . . . . . operators/pluscolon_8_bit/k6_N10_40nm
```
this PR adds a lower and ->upper cutoff(future proffing)<- to remove very small results that may be prone to high variance. 

a range [ 0.9, 1.1 ] is proportionnal with the result and (as such) a low cutoff serves the purpose of passing results that would otherwise fail.

#### How Has This Been Tested?
odin make test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a7f808e8965d3fa86d21ee9ded641e86e8cd3c5a,2020-03-25 15:41:08
1231,6,True,105,10,7,0,"<!--- Provide a general summary of your changes in the Title above -->
Porting minor changes from the 8.x branch into master (since v8.0.0 has been released).",0345b0418cd91af39c86d5df0b04a32b7ffe08dd,2020-03-25 13:17:28
1230,1,True,232,210,8,0,"This PR:
fix leaks on empty modules
Properly reports error and exits on them rather than continue.
Increase delay syntax support, 
update Odin:QoR to reflect the changes

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1180

#### Motivation and Context
fix regression failure

#### How Has This Been Tested?
make odin pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",92fc1e0b74de4b34c0e2b3bf572718139af38a05,2020-03-23 21:19:39
1229,2,True,367,2,13,8,"Added implementation of reordering of instantiated variables to match the order of module variables and also added valid and invalid test cases for the same.
",c75dd9442669c1bf380104be31f1dc43be4b05c6,2020-03-31 02:16:38
1228,1,True,53,55,1,5,"#### Related Issue
Closes #1227 
#### Checklist:
- [x] All new and existing tests passed
",d1b0eeabffa50f64590e5f230749f1c0e97621eb,2020-03-24 01:42:43
1226,1,True,47,47,17,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Motivation and Context
match vtr flow spelling and fixes a typo in the odin benchmarks infra

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d1f7df484a25b795804b1d0a7afc7bb520be35ed,2020-03-21 23:38:51
1224,5,True,53,44,5,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
I used the 2to3 tool to convert 5 additional Python 2 scripts to Python 3, and made a few additional minor changes to complete the upgrade for these scripts.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue #1181

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Python 2 is end-of-life; these changes remove dependency on Python 2.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
All changes were tested with Python 3.7.7 on Debian Testing. Each script was tested for syntax errors detected by the interpreter, followed by attempts to execute each script in its normal usage scenario to confirm that script behavior is unchanged. Finally, the basic and strong regression tests were run with no errors.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a53318f1d6be43796ff519012f1cb432dde6452b,2020-03-19 13:44:40
1223,1,True,751,752,14,0,"remove extraneous chars from parsed results

<!--- Provide a general summary of your changes in the Title above -->

#### Description
odin had extra charcter on task namepoluting the benchmarks
this PR removes them

#### Tested
odin make test

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",baf597fb41130519bc75db4945913df1cdbfe5e8,2020-03-21 03:37:16
1222,1,True,9,10,1,0,,829ed4eccfc9495966ef313c323e0677656eead5,2020-03-17 20:39:44
1221,7,True,92,85,6,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
I used the 2to3 tool to convert 5 Python 2 scripts to Python 3, and made a few additional minor changes to complete the upgrade for these scripts.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue #1181 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Python 2 is end-of-life; these changes remove dependency on Python 2.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
All changes were tested with Python 3.7.7 on Debian Testing. Each script was tested for syntax errors detected by the interpreter, followed by attempts to execute each script in its normal usage scenario to confirm that script behavior is unchanged. Finally, the basic and strong regression tests were run with no errors.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7c36643bd0e67c28fc1a505209aeeeef599de418,2020-03-18 13:32:54
1220,1,True,97,80,2,0,"this commit changes the dockerfile to use Ubuntu
also updates the key in the parse script for odin

#### Motivation and Context
commit fixes Dockerfile not usable anymore

#### How Has This Been Tested?
odin make test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a92642bc2ed6db60943bb3624e7d732441b3eed4,2020-03-16 03:31:13
1219,2,False,15,13,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
I added two newlines at the end of README.md.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ea4ddb24cf45e64dfb7c86730a661690ec575102,
1218,2,True,25,22,2,0,"<!--- Provide a general summary of your changes in the Title above -->
Updates nightly Titan QoR runs to use SDC files (rather than automatically generated constraints)",ca7c0b1d7a9f816cea69ebe476ee2e295438d8a2,2020-03-16 13:53:50
1217,1,True,17,51,6,2,"#### Description
Add buf keyword to flex file. Updates test case to use buf keyword

#### Related Issue
Closes #977 

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",3957b9f5014c619e28f001f5e08c8674744bbbd8,2020-03-17 03:25:40
1216,22,True,1050,576,77,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Previously the 'map' router lookahead was not used by default since it was not always robust (e.g. on small devices, or with non-unifrom RR graph structures like clock networks).

This PR addresses these issues, and switches the default lookahead to be the map lookahead.

It also fixes incorrect initialization of RR index data for non-uniform RR graph structures (e.g. clock networks) which were previously not correctly initialized.

With a robust map lookahead it will be possible to flip the `--router_initial_timing` option to `lookahead` by default to gain the benefits of #1109.
",34c3e90cda347f689e56db5a75cca76366f05e2d,2020-04-01 18:04:54
1215,1,True,1,1,1,0,,b4930c211504cc5e50c415fce2ae97a835172a69,2020-03-13 13:47:31
1214,1,True,14,6,1,1,"#### Description

The stable sort requires additional memory, so this avoids using the stable sort.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0166b3a9938b3c04c7211b89574a1e42a685bbae,2020-03-12 20:47:49
1213,1,True,80,3,1,0,"Instead of printing each pin's names when describing
an RR source with pin equivalence, print the range of pins (much more
compact and less overwhelming).

Previously VPR would print:
```
CLB.I[0], CLB.I[1], CLB.I[2], CLB.I[3], CLB.I[4]
```
where if the port has a large equivalence class (e.g. 50 pins) the message is very long and overwhelming.

With this PR, we now determine the contiguous ranges of pins and print them directly:
```
CLB.I[0:4]
```
which for large pin counts is much more read-able.


",cdec420154ed865c4056e5443044310a9be6a451,2020-03-12 16:49:32
1212,2,True,47,38,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Historically there are multiple copies of the wire segments types used in the RR graph. These exist in t_arch::Segments, and t_vpr_setup::Segments. At the moment these are not consistent (e.g. setup_clocks appends segments to t_vpr_setup::Segments, but other code refers to  t_arch::Segments which is out of date). 

I encountered these issues while generalizing the map lookahead.

This PR ensures that the fully up-to-date segment info is stored in device_ctx.rr_segments, and that after the RR graph is built/loaded that all downstream 'clients' of the segment data use device_ctx.rr_segments.",d2d32354c99911eeff67d84e297e6786918328ec,2020-03-11 20:57:33
1211,4,True,284,29,9,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
While debugging other issues I found inconsistencies with the rr_node_indices reverse RR graph look-up.

This PR adds:
 * A verification routine which sanity checks RR node indices against the current RR graph (this also has the added benefit of codifying exactly what is stored in rr_node_indicies which hasn't always been clear).
 * Fixes several bugs (mostly in the clock RR graph construction code) which were causing the inconsistencies",60a474ba57eee369e986491cc39d133e0fcde22a,2020-03-12 20:45:41
1210,1,True,1,1,1,0,,f9799981ebdc8aa3424085f5b30f17ebb421f8e5,2020-03-11 19:49:31
1209,7,True,88,75,9,0,"<!--- Provide a general summary of your changes in the Title above -->
Fix titan_other golden results caused by now using SDC files, and changes to SDC clock name matching.
",6d7b2b88162f071a5b859a30e41fe4b1e039faf8,2020-03-26 12:22:10
1208,33,True,13693,11195,249,21,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is an initial development towards the solution to have heterogeneous tiles capability.
There are currently two types of situations that VPR cannot handle:

1. Capacity tiles that need specific pin_locations for each of the `z` location in which the tile is placed. As a concrete example, the BUFG tile in the Series7 comprehends 16 BUFGCTRL sites, each with the same I/Os and functionality. They could be expressed with a single tile, with capacity of 16. The issue though is that the pin_locations of some of the BUFGCTRL is not equal to the others (as visible in the image below).
This PR is an initial step towards the solution of this issue.

![Untitled Diagram (1)](https://user-images.githubusercontent.com/44773360/76409417-9f756c00-638e-11ea-8250-a0c4115b4972.png)

2. Heterogeneous tiles: there are a few kind of special tiles (still in the 7series) that comprehend different kinds of sites with different types of I/Os and different functionalities. A simple example of tiles composed by heterogeneous resources is the following:

![Untitled Diagram](https://user-images.githubusercontent.com/44773360/76409987-7f927800-638f-11ea-9711-08e50718b052.png)

The final solution would ideally solve both of the above mentioned situations, as we could treat the BUFGCTRL sites not homogeneously as it happens now, but as an heterogeneous set, composed, with each element of the set having different pin_locations

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR is to resume the discussion started here: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1063

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",763528e9e328c1998f169d09cf028aae3e7bbfcf,2020-04-13 15:24:57
1207,3,False,82,16,14,19,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds an additional attribute to the switches, namely the `penalty_cost`. There are some situations for which the router chooses some paths that are allowed, but only for special reasons, and shouldn't be generally chosen.

To give an example, regarding a known SymbiFlow issue, the clock nets should always be routed through the dedicated clock network.
The architecture, though, is designed in a way that the clock nets can ""escape"" from the clock network through a switch and enter in the general interconnect, resulting in a possible increase in the clock skew and timing violations.
It is necessary though to have the switch, as some logic designs still should have the freedom (even though it is highly discouraged), to use the clock net within logic cells. If the problematic switch that allows clock nets to enter general interconnect were removed, such designs would not be implementable.

To limit the issue, a `penalty_cost` is added with this PR. This cost is not related to any physical property, but is a way for the architecture, to instruct the router to avoid using the problematic switch if there is no need to use it.
This has the benefit of not compromising the timing analysis, as the penalty cost is not taken into account when running STA.

#### Related Issue

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
vtr_reg_basic
vtr_reg_strong

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",dc25348753eca845bdf0623fc31ee4e31a6bc2f4,
1206,6,False,892,403,15,0,"#### Description

This PR builds on #1204 and encapsulates non-configurable node sets behind `t_rr_graph_storage`. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

This PR encapsulates non-configurable node sets behind `t_rr_graph_storage` for a couple reasons:
 - Construction of non-configurable node sets is not optional, and should be handled near `t_rr_graph_storage::partition_edges`
 - Raw access to the underlying non-configurable node set storage made some PR's (e.g. #931) harder to do because of distributed logic
 - Formalized the idea of the non-configurable node set id, which already existed, but was just a `size_t` in the previous iteration

#### How Has This Been Tested?

 - [ ] Existing tests that use non-configurable nodes pass
 - [ ] Adds non-configurable node set verification

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",201cf6ec3a951fc137fbaaa12f9c0550d173f3aa,
1205,12,True,305,116,14,21,"#### Description
This change adds a new schedule designed to simultaneously optimize for variables of varying sensitivity by continually sweeping a narrow temperature band at increasing rates.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1203

#### Motivation and Context
This change is to increase the performance (quality/runtime) of the placer.

#### How Has This Been Tested?
I've run a QoR comparison using `vtr_reg_nightly/vtr_reg_qor_chain`:

Metric | Relative to Baseline
--|--
vtr_flow_elapsed_time | 108.40%
placed_wirelength_est | 107.57%
place_time | **49.71%**
placed_CPD_est | 100.64%
min_chan_width | 105.69%
routed_wirelength | 106.89%
min_chan_width_route_time | 147.13%
crit_path_routed_wirelength | 105.72%
critical_path_delay | 101.79%
crit_path_route_time | 109.44%

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cdafba2bdc46c0a021e200033aa0d8236116bccb,2020-07-27 22:18:45
1204,4,True,295,64,5,1,"#### Description

t_rr_graph_view is a purely read-only view into the RR graph object.  The justification for the view class is two fold:
 - Remove indirection overhead present in using a reference to `t_rr_graph_storage`
 - Pave the way for a fully const copy of the RR graph to be read from disk via mmap.  This would enable 0 overhead for loading rr graphs.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d7977d8f90a4764aa28e56e1ca7407d13a1e78d7,2020-04-02 18:34:58
1202,1,True,157,0,2,1,"#### Description

Adds a version of array_view that is key'd by vtr::StrongId.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",195fb18e4d1f2aa304705427c07917a4dfcd3ca4,2020-03-11 16:00:54
1201,1,True,131,121,13,3,"#### Description

When reviewing https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1197#discussion_r389216334 @kmurray suggested removing `iconn` from the `ConnectionRouter` completely here: https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1197

I've made that change, but done it here, because removing `iconn` is more involved because of its usage in `t_heap`.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",da71db5450c22892b3ec44168f1cfe84499c14a4,2020-03-11 17:41:41
1200,1,True,0,6,1,4,"#### Description

Travis CI has been failing for mysterious reasons, and it is unclear why.  This PR removes the caching statement from `.travis.yml` to see if it helps with the failures.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a7f2637c049e4cfc0ace7d2ea50c2ab94935c39b,2020-03-10 17:49:50
1199,1,False,7,25,1,0,"#### Description

This is an attempt to fix the ""truncated file"" errors showing up in
Travis lately.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",2d28e6ea4bca6b2e31056d0ccd827640f5c97961,
1198,2,True,15,7,9,0,"#### Description

This addresses a random assortment of issues from coverity.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

6 of the 8 changes are just warning suppression.   The change to rr_graph2 fixes a real bug.  The change to connection_router.cpp was a long standing bug around the routing budgets.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ff20b36a29bd95d9bc7ae5c91db7f88ad785a593,2020-03-10 17:48:51
1197,1,True,296,9,4,0,"#### Description

vtr::StrongIdRange and vtr::StrongIdIterator are useful utility classes
for ranges of vtr::StrongId's (e.g. edges belonging to a node).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",00c1ba33a34039e125ba0180108f67121f576514,2020-03-11 16:18:28
1196,1,True,2,4,1,2,"#### Description

This is a small cleanup removing a use of `g_vpr_ctx` from `ConnectionRouter`.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

**All** use of global data should be mediated through the `ConnectionRouter` construct, or arguments to it's methods.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b748b127d0a0b215eaa3ffc2057c849d82fac44f,2020-03-10 19:10:28
1195,1,False,1,1,1,1,"#### Description

In https://travis-ci.com/verilog-to-routing/vtr-verilog-to-routing/jobs/295444595
tests passed, but the timeout triggered before it could return.  This
likely indicates that the timeout is only a little short.

If more tests get added to strong tests, consider another strategy?detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",af2581065e793a5bf8cbc5bdcf6428238c245714,
1194,1,True,2,2,1,3,"#### Description

- strncpy cannot handle nullptr (e.g. empty strings), so special case comparisons with empty strings to avoid calling into strncpy
- Fixed incorrect `empty` method

This was discovered by running with sanitizers.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",7bc2734062d294f26b908698bf06a2621c8b570f,2020-03-10 19:10:14
1192,3,True,14,46,3,1,"#### Description

This PR does 3 things:
 - Removes presubmit/weekly as the runtime is long, and the value for compute is low
 - Increase the number of cores on the continuous/weekly to 3.  The recent memory refactoring enables the 3 largest Titan jobs to fit within 100 GB
 - Add a system load and memory usage report to all kokoro logs.  This is useful for determining if a VM is running low on memory due to too many jobs, or a memory regression.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ff537e8efda09912cf4f8dd6eea2a7248c125ea5,2020-03-05 22:58:53
1191,3,False,311,4,14,0,"#### Description

Attempt to increase kokoro weekly to use 4 cores.

#### Related Issue

#1118

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9b7b81c4b16b8cff96895fc16b364e62bc4af806,
1190,1,True,1,1,1,0,,28a88fdeb09fb22b819c5e8c2b4fef5e9accafcb,2020-03-05 14:20:31
1189,2,True,69,58,3,2,"#### Description

This PR was developed by @acomodi.

This PR allows VPR to place clusters other than IO pads, which is useful for placing clock elements explicitly.

#### Related Issue

#1045

#### Motivation and Context

In fabrics with specialized clocking networks, clock elements within the network may have specific requirements.  See #1045 for discussion.  For example, in the 7-series fabric, there are top global buffers and bottom global buffers.  In order to use the dedicated clock path between an input pad and the global clock buffer, if the input pad is in the bottom half of the fabric, it needs to use a ""bottom"" global buffer, top half of the fabric, it needs to use a ""top"" global buffer.

Rather than finding a general solution to this problem, for now these elements are given fixed placements *prior* to running VPR via the IO fixing code.  This PR enables that pathway to be more general, and fix any cluster, rather than just IO pads.

#### How Has This Been Tested?

Symbiflow has been using this code since December to place non-IO cluster instances.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",007e6acd3f11c839326ec28f649895ef5241eae2,2020-03-05 22:25:08
1188,1,True,1,1,1,0,"#### Description

This enables the route_diag tool to route with criticality other than `1.0`.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b48ed6a0b90c6aea6a75afb0062b40ed1612a3e1,2020-03-05 16:00:03
1187,1,True,76,59,5,3,"#### Description

- Intern metadata strings earlier to avoid allocations.
- Avoid second sort when building metadata map.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a4ccc911cfdee861f5b787815620f8463d093b31,2020-03-05 22:25:43
1186,3,True,44,9,13,1,"#### Description

This PR adds two options that enable faster reading of RR graphs from disk.

Option 1 enables the ability to disable calling `check_rr_graph`.  This is takes ~12 seconds on the A50T graph, and if the entire flow is otherwise taking ~60 seconds, this is a significant fraction of runtime.  The idea here is that when the RR graph was first created, `check_rr_graph` can be called, and then once the graph is written to disk, future instance of VPR do not need to call it again.

Option 2 is a two part change.  By default VPR doesn't use edge metadata, so by default the RR graph reader will no longer read edge metadata.  However there are reasons to read the edge metadata (e.g. format conversion, profiling, etc), so an option is being added to re-enable reading of edge metadata from disk.  The default is reasonable, delivering the performance boost, and the option exists to retain a full read if needed.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

This enables a faster RR graph read, and is fully controllable via flags.

#### How Has This Been Tested?

Tests have been updated, and symbiflow has been using these flags for a while.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",7aa885b69c39a8addcfb4380df0365a35ea2e6a0,2020-03-06 18:05:44
1185,11,True,945,117,28,15,"#### Description

This PR builds on #1177 and #1179.

This is follow-up to #952 that adds a second heap implemented.  See #952 for previous QoR and comments.

This PR changes the `ConnectionRouter` to be template'd over the heap implementation, to enable swap of heap implementations as needed.  If this approach is good, I can add a command line option to control the heap implementation, or simply leave it as a template parameter.

#### Related Issue

#952

#### Motivation and Context

Profiler data showed a significant amount of time being spent managing the heap, especially the heap pop operation. This refactoring has a couple gains for a couple reasons:

- The new data structure does not provide an exact heap. Instead it is an approximation based on grouping of cost. This cost grouping is currently being done on a [0, 1) picosecond (1e-12) basis.
- The new data structure provides some randomness on nodes with costs in the same grouping. For items with identical cost, this avoids sending the router down identical paths, and resolves some congestion without explicitly costing it.
- The new data structure and memory management clear very quickly by avoiding rebuilding the free list.

In limited functional testing these changes resulted in a 30-40% runtime decrease with a ~3% CPD increase.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a1123e01fece6d8ebf07338ce18b92a5e61abcde,2020-03-26 19:54:55
1184,2,True,5,0,1,3,"o make sure to include <algorithm>
o Provide default constructor for edge_sort_iterator as
  the implementation of std::stable_sort might need it.

Signed-off-by: Henner Zeller <h.zeller@acm.org>",b0800ef06cdfc86bb8c4c86e453cf6114341ebbc,2020-03-05 22:35:56
1183,3,True,79,109,16,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
remove linkage against abc to make odin independant

#### Related Issue
closes #1182

#### Motivation and Context
speedup builds for Odin and uncovers warnings hidden by abc no-warning policy

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",85fee1305a33c5bafa8158b50e878b34fbc2b437,2020-03-04 15:14:22
1179,1,True,230,280,14,1,"#### Description

This PR combines #1176 and #1177 , and completely migrates the encapsulated heap to be owned by the `ConnectionRouter` (or the breadth first search router).

Once this change is merged, the heap to the `ConnectionRouter` can be templated over to enable switching of heaps.  This change also allows the 3 places the heap is used to be controlled independently.

#### Related Issue

#952
#1176 
#1177 

#### Motivation and Context

By moving ownership of the heap to the `ConnectionRouter`, different heap implementations will easily be swapable.

#### How Has This Been Tested?

- [x] CI is green
- [ ] QoR comparisions against Titan benchmarks

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3bba63fa41583d9acd4128caf885c8d15d91918b,2020-03-05 22:35:21
1178,1,True,30,18,2,5,"#### Description

This PR adds a CMake option to control the building of ODIN.  This option is useful for cutting down compile times.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ab9e3c5180f7a925499d1ba8e31a01a81f6dddbe,2020-03-03 22:10:52
1177,3,True,602,398,8,3,"#### Description

This work is in preparation for integrating the heap approximation.

#### Related Issue

#952

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",edca44833552cf690854a21d744324a28050f070,2020-03-04 15:30:32
1176,1,True,1175,1146,13,0,This PR simply moves the ConnectionRouter out of `route_timing.cpp/h` into it's own file.,c86ef3a6f594faa54dc18cdf6ab2d98fac419d98,2020-03-03 14:51:33
1175,1,True,161,0,2,1,"This enables creating views into allocated data, without direct
ownership.",9d2289360922f0ad17d85d63a44b529fdee91293,2020-03-02 21:18:10
1174,2,True,2718,2376,86,0,"#### Description

This commit:
- add netlist stat
- add net.conf to parse stat result
- aggregate logic type -> generic, or respective hb
- fix sed cmd
- remove deprecated node type
- reorganize the benchmarks (more globbed bm to auto populate from
  directory content)
- use uinttpr_t for traversal unique id ptr
- update odin qor

#### Motivation
Will prevent radical changes from being introduced and also help debug netlist output

#### How Has This Been Tested?
no change to netlist
no change to flow
adds statistics to odin output.
generated qor with odin_ii make qor

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d1c60f803f54f01d9dae1a5f4a4e60c25da7439d,2020-03-02 23:27:49
1173,10,True,184,22,10,15,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This patch disables the lut buffer removal for clock nets during netlist cleanup.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
VPR modifies the input circuit unless `--absorb_buffer_luts` is turned off. 
This is ok in general, except for clock nets. In fact, when the buffer between two clock nets is removed, the resulting net is renamed, using the combination of the two previous nets.
This behavior makes it hard to write correct `sdc` files, as the name of a clock in the original netlist may be changed by VPR in case the signal is propagated through submodules or `assign` statements are used.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",acafd82eeb439a285e88b63f5a7282c661cc4478,2020-03-03 22:09:09
1171,1,True,1,0,1,1,"in id_or_pin_name_to_tn()

Signed-off-by: Henner Zeller <h.zeller@acm.org>
",a0b54ac36371fa07ec078408a1fea3f4a36d9307,2020-03-02 15:40:22
1170,1,True,6,1,1,1,"#### Description

This adds the capnp files to the install directory, which means they get will packaged into deb's and the like.  This enables users to read and modify capnp files generated and consumed by a particular VPR version.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

This enables downstream tools from VPR to read / write binary capnp files generated from VPR.  It also enables downstream tools to generate files to be consumed by VPR.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5fb32bfaca6a19d17612404f2f6ceb21137f34cf,2020-03-02 15:38:28
1169,2,True,16,16,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Motivation and Context
colors are printed as is rather than colored. use printf

#### How Has This Been Tested?
local dry-run

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b565bf0e31840b8416eea56294e273d821cdb2df,2020-02-27 13:14:43
1168,1,True,6,4,2,0,"#### Description

Capnp's traversal limits are not helpful, so disable them.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

The traversal limit is easy to violate once graphs get big!

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1525c653ff7a48d0a958df3a19b31f6e7bf3b479,2020-03-02 15:37:27
1167,7,True,2549,405,105,0,"

#### Description
This PR add QoR Monitoring capability to the Odin benchmarking framework.
This will allow us to better monitor behaviour changes, add more test and  
monitor progress during the push to verilog 2005

#### Related Issue
n/a

#### Motivation and Context
verilog2005

#### How Has This Been Tested?
-
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5c4e4a8ccabc3f89575701da6ccf41eec181407a,2020-02-25 19:05:25
1166,2,True,72,7,4,4,"Signed-off-by: Keith Rothman <537074+litghost@users.noreply.github.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description

- Use max_criticality for clock nets.  This will cause them to use min
  delay paths rather than avoid congestion.  As a future enchancement,
  the clock nets should likely route for min slew, but that is a larger
  change.
- Clocks should use a bounding box that includes the entire fabric.
  This is when a clock spine extends from a global buffer point to avoid
  the net target, the default bounding box behavior will prevent the
  router from finding a path using the clock network.  This is not
  catastrophic if the only path to the clock sink is via the clock
  network, because eventually the heap will empty and the router will
  use the full part bounding box anyways.

  Where the problems start is when there is a path from the clock network to
  the general interconnect and vise-versa.  Even if this path has a high
  cost, because it is within the bounding box, the router will find the
  clock network -> general interconnect -> clock network path, rather
  than staying on the clock network the whole time.  If the bounding box
  is the entire part, this will not happen because the router will
  quickly explore the cheap path (the clock network) well before
  exploring the significantly more expensive clock network -> general
  interconnect -> clock network path.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

https://github.com/SymbiFlow/symbiflow-arch-defs/issues/1328

#### Motivation and Context

![swkb6Xt-th5RhgTc7sTBpIA](https://user-images.githubusercontent.com/537074/74974445-1f389800-53da-11ea-8645-c442f77c3c62.png)

Consider the example clock network above. The clock row and clock column buffers are represented by edges in the graph.  The clock buffer is represented by a sub-circuit.  So in order for the router to stay on the clock network, it must go through both a row and column buffer to reach the clock sinks within the CLB's.

In the happy case, consider the green net bounding box from the clock buffer to the CLB 0,1.  In this case the entire clock network is encompassed, so the router will behave well.

Now consider that sad case, consider the red net bounding box from the clock buffer to the CLB 2,0.  In this case neither the clock row buffer nor the clock column buffer is included in the net bounding box.  In this case, the router will fully expand the graph within the red net bounding box.  In the event there is any (even a bad) path, the router will choose it.  This may result in the router finding a bad path avoiding the clock network, because the bounding box excludes the ""good"" route through the clock network.

#### How Has This Been Tested?

Tested on symbiflow designs where the router was avoiding the clock network because of either criticality (e.g. avoiding long wires typically found in the clock network) or because the router was prevented from exploring the spine by the default route bb.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ea29af0f8ffb4d9ab7f6d47743abf84515a8df98,2020-03-02 15:09:13
1165,1,True,4,4,1,0,Fixes warning from #1142,cec95577c11ec62743e15a8db86ef21ec790ea5f,2020-02-20 02:13:41
1164,1,True,15,0,3,0,"This should ensure lookahead construction time is not attributed to the
placer (since it is also re-used by the router).",9a6fbace364ac87eb7db5212889ed4c19caaf191,2020-02-20 02:14:52
1163,1,True,1,1,1,0,"#### Description

Limit kokoro VPR_NUM_WORKERS to 1.

#### Related Issue

#1136

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",29b69e251962d06b691d37cc34912ce71921db0f,2020-02-20 02:06:06
1162,1,True,12,14,1,0,"#### Description
<!--- Describe your changes in detail -->

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1161
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1079

#### Motivation and Context
This bug prevents testing different graph ordering algorithms, which could benefit VPR runtime.

#### How Has This Been Tested?
It has been tested with random and specific orderings using https://github.com/HackerFoo/Gorder in symbiflow-arch-defs.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d809ad6b618821eecee5ef04edf683b872805a04,2020-02-20 02:20:23
1160,1,True,2,2,2,0,"#### Description

Lower the number of cores used for vtr_reg_strong on kokoro.

#### Related Issue

#1136

#### Motivation and Context

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ef01dac93ca75bb573eaaf2f06d9d49f8622eed1,2020-02-19 22:48:51
1159,5,False,109,369,12,0,"<!--- Provide a general summary of your changes in the Title above -->
#### Related Issue
N/A

#### Motivation and Context
multiplier logic was directly put onto soft logic if there was no hard multiplier, this PR will generate higher level logic with ADD nodes that will then be mapped onto hard/soft again if hard adders are available

#### How Has This Been Tested?


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e09a4bcbd5e5aef61353eccf2331e5bd759ccb7a,
1158,1,True,1,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
invalid indexing for dynamic array

#### Related Issue
N/A (implicit ports)

#### Motivation and Context
bug during implicit port initilaization

#### How Has This Been Tested?
make -f ODIN_II/Makefile pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",eda699937c6f60e5e63e006ce3bd18a218b4df63,2020-02-19 22:00:04
1157,1,True,4,3,1,1,Fixes warning from #1142,8f311502f793f02807eeb706db246aa21ba46ab0,2020-02-19 19:42:53
1156,2,True,191,245,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
running verify script from outside directory breaks the bm suite

#### Motivation and Context
reenable bm

#### How Has This Been Tested?
run_reg_test odin_micro

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a3574efdb082213be78d0106733896387aa16e19,2020-02-19 13:22:22
1155,1,True,78,14,4,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This add symbiflow as a third-party BM and add build step to odin regression if the third party bm are not found yet

#### Motivation and Context
Have the ability to run external BM without having to store them in the repository 

#### How Has This Been Tested?
make -f ODIN_II/Makefile pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",115604291bc3d38b16455a052d3e03009933dac6,2020-02-19 05:00:35
1154,1,True,125,107,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Motivation and Context
see symbiflow test

#### How Has This Been Tested?
ODIN_II/make pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c1e93d2592dad5185ea07627d115c1415af50243,2020-02-19 04:00:46
1153,1,True,1,1,1,0,Fixes warning from #1142,0c036e7019338856d51af22fa54d0f79b7603885,2020-02-19 17:08:53
1152,1,True,283,210,12,0,"#### Motivation and Context
see Symbiflow error

#### How Has This Been Tested?
ODIN/Makfile pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7ee5e0b3a2fd96318d5374e4d47c6899c3bef1bb,2020-02-19 01:38:27
1151,8,True,187,17,10,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Extract SDC files for titan benchmarks, and use them for titan_other and titan_small tests.

#### Motivation
Currently we only test the Titan benchmarks without SDC files (assuming the VPR default timing constraints).",83b0f67502b9a41b45c57950d9b9bb3287e70c40,2020-02-19 19:43:23
1150,1,True,1,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5e66d610cb3fbaeed097dbaed4f6919748e9424c,2020-02-16 21:37:53
1149,1,True,52,55,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
closes #1031 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3f8f23d28ded02ce790a0dc1c9336d162dda3ac0,2020-02-16 00:23:41
1148,2,True,132,91,4,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
fix segfault for modules without ports

#### Related Issue
closes #940

#### Motivation and Context
help Odin pass more symbiflow tests

#### How Has This Been Tested?
odin complete regression

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",26957c6fdd85ce1b74d028afc364fc23fff35894,2020-02-15 09:04:14
1147,2,False,31,6,7,2,"#### Description
The check in `check_non_configurable_edges()` is non-linear and takes a long time for the XC7 architecture in SymbiFlow.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/537

#### Motivation and Context
This increases performance by making it possible to skip an expensive check.

#### How Has This Been Tested?
This flag has been tested and is currently being used in [symbiflow-arch-defs](https://github.com/SymbiFlow/symbiflow-arch-defs)

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",219a417ad1d6f09d841e305f77e38ea624bb238c,
1145,1,True,9,9,1,1,"See the diff.
",9ae97ca6fbc4f3bde42f258a4a58923626dc527f,2020-02-14 00:08:03
1144,1,True,2,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Enable address sanitizer in travis for Odin Microbenchmarks to prevent regression failures.

#### Related Issue
related to #1131 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c1f5a185d3dc86b09c2b935d49afe91bfd0dec58,2020-02-19 04:06:45
1143,2,True,91,81,4,0,"add symlink to executable rtl_number
update verify script to call rtl_lib test

<!--- Provide a general summary of your changes in the Title above -->

#### Description
add the rtl lib regression suite to odin and fix relapath not being respected in test

#### Motivation and Context
improve test coverage

#### How Has This Been Tested?
run the suite newly included

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",885b2c4d46e3c3100eb08bea92dc44c609824263,2020-02-13 22:36:08
1141,1,True,108,201,19,0,"disable IPO for debug builds in odin

disable IPO for sanitizer

update benchmarks and remove outdated ones

include vtr_reg_* to the pre_merge make target

#### Related Issue
With #1131 coming in, Odin should also use asan on the microbenchmarks by default rather than Valgrind to speed up the tests.

with this change, odin light_suite with asan can be run under 15 minutes 

#### Motivation and Context
disabled Valgrind on the odin tests by default to not collide with asan tests. 

#### How Has This Been Tested?
tested sanitized and regular build 
ran odin pre_merge suite ( vtr_reg_strong incl.)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6f3f6c2fd75cfee38070e912518cecfa4136d7ee,2020-02-13 15:10:39
1140,1,True,26,1,4,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Fix invalid string cache access closing #1138 for #1131 
and add quick sanitize compile flags for Odin

#### Related Issue
closes #1138 
for #1131 

#### Motivation and Context
fix invalid memory access

#### How Has This Been Tested?
odin regression full

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6451c7ca7519d163095be3854d429cca224c8288,2020-02-13 01:38:07
1139,1,True,5,0,1,1,"#### Description

Previously this would cause a std::logic_error to be thrown from
std::string.

This is a good example of something that would be caught using the uxsdcxx parser generator, rather than hand writing parsing.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Previous logic just reported:
```
terminate called after throwing an instance of 'std::logic_error'
  what():  basic_string::_M_construct null not valid
```

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9a356248cca565a9d392d93e88781c160cc4ea12,2020-02-18 15:03:47
1135,4,True,72,11,6,0,"<!--- Provide a general summary of your changes in the Title above -->

Fix multiple instances of VPR interfering with each other when they try to open graphics.",b6782ab752f39438c51d24b272a243fdbb5ba949,2020-02-12 15:02:20
1133,1,False,12,1,5,1,"#### Description
Use the slope from the routing predictor to enable CONFLICTED routing mode.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1132

#### Motivation and Context
This should enable CONFLICTED mode earlier when needed vs. the `--congested_routing_iteration_threshold` flag.

#### How Has This Been Tested?
All tests pass on Travis.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f7f486f5aeed1df1175a4ed3a0d5af38ba2e9996,
1131,22,True,126,87,20,0,"These build set VTR_ENABLE_SANTIZE=on which compiles VTR with sanitizers
to check for invalid memory accesses, undefined behaviour etc.

For motivation see #1130
",49b30ebfe6ccb8580933b24a6550866a9bfad0c4,2020-02-19 17:08:40
1129,1,False,4,2,1,2,"#### Motivation and Context

#1121

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ef4d79d61c536b788365c1732646bed05954d812,
1128,1,True,5,1,1,0,"Closes #1124
",8137f18fb935b88913fb3aebea1a9359112b7c1e,2020-02-11 15:17:21
1127,1,True,81,85,2,0,"This ensures that non-interactive graphics work correctly with auto set to a high value (i.e. not pausing for user interaction). Previously this would cause VPR to crash.

This also refactors the graphics setup code in update_screen() to be simpler and clearer.",bfa9189de71da4314a9180c450668d964d061769,2020-02-11 15:17:09
1126,45,True,3013,1558,45,8,"#### Description

This patch set was written with the following goals:
 - Make allocations patterns more heap friendly, resulting in lower max RSS
 - Leave CPU runtime around the same or better
 - Enable future refactoring around the router

#### Related Issue

#1079 
#1087

#### Motivation and Context

Baseline for comparison was 6ea11c1757e1e43a1770c36608907c943cf814a2

QoR:
[opt6_results.zip](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4172348/opt6_results.zip)
[baseline_results.zip](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4172349/baseline_results.zip)
[titan_comp.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/4172350/titan_comp.xlsx)

Top level ratios (for Titan, minus gaussian blur):
 - 40% reduction in max RSS
 - 4% reduction in critical path route time
 - 1% reduction in overall VPR flow time


#### How Has This Been Tested?

- [x] CI is green
- [x] Titan weekly (minus gaussion blur) QoR gathered

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e9fa00a4ad77e9df08bf500e5640b64e131f1418,2020-03-02 21:16:14
1125,1,True,4,0,3,3,"#### Description

Previous code would (and did) happily write to inode = -1 (OPEN).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Memory corruption is bad!

#### How Has This Been Tested?

- CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",71e85c9cd4e4b9285449e40b1b7a74ea9faa4892,2020-02-11 16:43:20
1123,2,True,169,79,9,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

Adds a default effort level titan23 regression test to the weekly regression tests.

Currently a WIP as regeneration of the golden results is pending.",7c67c6472dcd7529f47458fc2036abaeaf12e62c,2020-02-10 17:47:06
1122,2,True,258,201,18,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds a more robust (but still relatively fast turn-around time) subset of the Titan23 benchmarks to the nightly regression.

This adds the 'titan_quick_qor' task to the nightly regression tests, which includes all Titan23 benchmarks *except* the long running `gaussianblur` design, which are run at VPR default effort levels.

On my machine, with 8 cores the run-time is ~8.3 hours, which is quite reasonable given the benchmark coverage.

This is currently a WIP, as the regression test failure in #1121 prevents generating the full set of updated golden results.",d66eb925d71fd3e8fad0cc326971ce4eb28e2ec7,2020-02-11 17:46:12
1120,2,True,135,125,3,2,"#### Description

Fixes #1114
Fixes #1121

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8e8bf9910c2fb67a52b43cc39a7ab2b3bb56c7cd,2020-02-11 16:47:51
1119,1,True,117,4,12,3,"Added test for bitwise not and added the bufnode functionality along with test
",f00ee70a386860364cbcbcc61c38a5549d5085e6,2020-02-11 20:26:21
1118,2,False,311,4,14,5,"#### Description

This PR is attempting to create a weekly that can provide the vast majority of the signal, without the excessive runtime.

#### Related Issue

#### Motivation and Context

This PR is attempting to do two things:
 - Return QoR / wallclock / memory usage in ~12 - 24 for purposes of quality comparisons

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c09dbe1f0d10e7d0cbed605d18e21b27921ed852,
1116,2,True,384,15,11,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Add a tutorial on how to use the new timing graph debugging features from #1112 ",a6a3af77c39c1662bf08a60c38ddfb6625ed81b1,2020-02-07 16:05:54
1115,2,True,54,27,5,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
We should automatically check for compilation warnings during CI. This PR adds such a check to the regular TravisCI build.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
As noted in #1114 our current build testing misses this since we default to doing IPO builds, but disable warnings during the link phase (see #634 for why).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Warnings often indicate code issues, as a result VTR builds with fairly aggressive warnings turned on. This helps ensure such issues are caught early.
However having the main build produce many errors is problematic as it means developers may miss new warnings which are introduced.
It is therefore important to have automated tests which fail if code is checked-in with warnings to ensure they get fixed.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested manually, and via CI build

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c22140489c5a16da775fdb22c29ff950ccd2cd2b,2020-02-11 19:00:59
1113,3,True,48,22,8,12,"#### Description
This change uses the routing predictor to detect when congestion resolution slows down, and disables the high fanout routing logic.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/479

#### Motivation and Context
High fanout routing logic has been disabled in Symbiflow due to non-termination in some tests. This fixes that.

#### How Has This Been Tested?
This change has been tested in Symbiflow, and also strong and nightly tests have been run locally.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ec9cc142fe86696ed9b3249a645afd9449e32138,2020-09-02 01:09:25
1112,3,True,173,40,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Adds support for dumping the timing graph in GraphViz's DOT format to aid debugging.

Also adds support for 'debug' timing reports which include additional debug-level information (like timing graph node ids) which is helpful for interpreting the DOT format.",a78bfa7ea37baeec7d51fa18ad03397705b81818,2020-02-06 16:51:04
1111,1,True,5,6,1,0,"When the logical and physical block types were seperated the storage
convention for ports was changed to be more explicit. This updates the
reverse look-up to be consistent with that format (for most
architectures the previous code was correct, but that was because most
architectures obey the same pin ordering conventions as before) which
should be more robust.

Also add some additional sanity checking to RR node debug print
routines.
",b716aa924929764e0c222a800c10c6141a19e3b4,2020-02-06 16:48:37
1110,1,True,7,1,1,0,"It will now detect:
  * '.txt' -> '\t' separator
  * '.csv' -> ',' separator
",63853ad238e5fc5886502cbe4749361aca6d7933,2020-02-05 21:26:34
1109,15,True,644,101,21,8,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Traditionally VPR has routed all connections during the 1st router iteration as timing critical (i.e. criticality = 1). While this helps ensure good initial delay estimates it has a CPU-time cost.

In particular, since the spatial-lookup for High Fanout (HF) nets is only active for less timing critical nets (i.e. criticality < 0.9) using high criticality can have a significant run-time cost on designs with large high-fanout nets.

Currently this PR only implements this functionality, which is off by default.

#### Related Issue
#1073 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
If we can use more realistic criticality estimates we can ensure that less-timing critical high-fanout  nets use the more efficient spatial-lookup based approach.

Also, for designs which aren't heavily congested the 1st routing iteration is usually the longest, so reducing it's run-time is desirable.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Currently tested locally on vtr_reg_basic, vtr_reg_strong. Also on the Titan benchmarks with `--router_lookahead map --router_initial_timing lookahead --router_update_lower_bound_delays on`, showing ~6% route time reduction on average, with larger reductions on large designs with high-fanout nets (e.g. 35% route-time reduction on gaussianblur).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1ad25bf48619cc54fa4c21fd1ecd750edfd3a0b0,2020-02-07 16:17:53
1108,1,True,3,1,2,0,"Previously additional compilation flags (e.g. to enable sanitizers) were
also applied to external libraries causing for instance the capnproto
compiler to be build with sanitizers which could then cause the build to
fail.

We now only apply additional flags to internal libraries to avoid this.",abd02e513c6799ae5527d4abea9b1fdf2d26c7cf,2020-02-04 15:13:47
1107,1,True,203,199,2,0,,298a241d4f0f3f1d9a8dd7d36a12f138439805dd,2020-02-03 22:34:01
1106,2,True,25,2,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5294b8badf59a1c40d1c5633d9499ae14785de7c,2020-02-03 21:03:49
1105,3,True,27061,31427,75,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Add odin to the clang format list in CMake and reformat the odin codebase

#### Related Issue
related to  https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1101 and can close https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/1102

#### Motivation and Context
This will allow to have a unified coding standard and will make reviewing PR easier

#### How Has This Been Tested
built on 
```
Linux archlinux-jlegault-xps13 5.4.15-arch1-1 #1 SMP PREEMPT Sun, 26 Jan 2020 09:48:50 +0000 x86_64 GNU/Linux
cmake v 3.16.3
gcc 9.2.0
```

tested with odin full regression suite



#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7ef777ac7a55c75662a431a677bf343358437aba,2020-02-03 19:09:58
1104,6,True,211,0,4,5,"Documentation for the clock architecture spec

#### Related Issue
Addresses part of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/928#issuecomment-555432218

#### Motivation and Context
Adds documentation for an implemented architecture option

#### How Has This Been Tested?
N/A

#### Types of changes
Documentation 

#### Checklist:
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",8ee9428f8bdcb26ef2613f88de8b077b0a572e4b,2020-04-13 15:43:54
1103,2,True,11,0,1,1,"Updating the documentation to add the two_stage_clock_routing cmd line option


#### Related Issue
Addresses part of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/928#issuecomment-555432218

#### Motivation and Context
Adds documentation to an existing command line option

#### How Has This Been Tested?
N/A

#### Types of changes
Documentation

#### Checklist:
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",fcdc60591c1f51d6d86c84ebd44aabbfe9257c47,2020-04-13 15:29:37
1102,3,False,25573,29721,68,2,"The .clang-format file in the $vtr_root describes an automated formatting
guidelines. This PR applies the described style to source and header files
of ODIN_II.

<!--- Provide a general summary of your changes in the Title above -->
This PR is a result of application of automated style formatter, that is defined in VTR repository
#### Description
<!--- Describe your changes in detail -->
These changes are result of running clang-format on entire codebase.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
The issue describing the details and for discussion is  here:
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1101

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Simplification of development, code reviewing and unification of style formatting 
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
There are no logic changes involved, to an extent of the clang-format program correctness. The changes pass Travis CI which runs linter and regression tests
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [X] Breaking change (fix or feature that would cause existing functionality to change)
Warning, I am afraid these changes can potentially introduce merge conflicts

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5fa4cc64fad27f52106f267880b8dd6558d05d12,
1100,2,True,191,30,9,7,"#### Description

Now that capnp and the place delay lookahead are merged, this PR adds serialization for the map lookahead.

#### Related Issue

#989

#### Motivation and Context

As part of working on memory and CPU optimization for Titan benchmarks, iteration speed is important.  As an example, running routing only on the `gsm_switch_stratixiv_arch_timing.blif` takes ~1000 seconds.   Around 400 seconds of that time is computing the lookahead map.  The ability to save lookahead map saves those 400 seconds, and means that any resulting profile will be focused samples from the router.

#### How Has This Been Tested?

- [x] CI is green
- [x] Smoke tested by showing that gsm_switch routes the same using compute on the fly and precomputed lookahead map.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",12d3a96e435e4596aab9e5fac66422c7f5d0515b,2020-02-05 20:26:51
1099,1,True,0,1,1,1,"#### Description
Remove local variable that is not  used.",89c801d2bd116afb6d4e168c6b5499cbd5c61c29,2020-01-30 23:47:31
1098,1,True,2,1,2,1,"o The semicolon in the empty fallthrough statement in netlist.tpp
  triggers fallthrough warnings, so removing the semicolon better
  reflects the intentions.
o check_rr_graph: there is a missing break in the switch/case which
  happens to not introduce a bug as the following cases also break.
  Add 'break' to reflect intention of code.",9969ecd6b669cdcfec71c3a363c84e42fdc0c55e,2020-01-30 23:46:20
1097,1,True,33,7,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Removes redundant calls to re-sift the heap. add_route_tree_node_to_heap() inserts them in the correct position, so there should be no need to re-sift.",0e9b62ff052b12472aa410f36dde5236aa8819a7,2020-01-31 17:40:08
1096,28,False,2097,1118,43,2,"#### Description

This PR is 3 patch sets together:
 - #1081 Move call location of ClockRRGraphBuilder and use alloc_and_load_edges.
 - #1084 Proxy rr node
 - #1085 Initial refactoring of rr edge storage

Combined with a set of patches designed to lower heap threshing between the start of rr graph construction and up to when the placer runs.


#### Related Issue

#1079
#1081
#1084
#1087

#### Motivation and Context

The changes made after #1085 are all aimed at lower the number of allocations made inside of hot loop, by hoisting the allocation to the root of the loops.  This prevents allocation patterns that cause heap fragmentation.

#### How Has This Been Tested?

- [ ] CI is green
- [ ] Nightly QoR is good
- [ ] Weekly QoR is good

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9aa4137d1d5fec1e005ff08fbbf4f7e84eddb4fa,
1095,1,True,16,2,1,0,,08457b5cb1566da8dc90c4586de74dbbd0331121,2020-01-30 23:07:40
1094,2,False,25,2,2,4,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This is to enhance the `libsdcparse` library to be able to parse additional symbols.
This is to include changes that happened in the EXTERNAL library: https://github.com/kmurray/libsdcparse/pull/3

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",afdbbbc1306af5bff1ffe686eaa5711d1e13c4e2,
1093,1,True,26,8,3,10,"#### Description
Use the two bytes free space in t_rr_node_route_inf to implement a bitmap so that configurable nodes do not have to go through hash map look ups.

#### Related Issue
For configurable nodes (majority of nodes), looking through hash map to determine if the node is a non_configurable node is slow due to possible collision. A bitmap can be implemented to mitigate the issue.

#### How Has This Been Tested?
Tests from symbiflow: picosoc, murax, top_bram_n1-3, dram_test_64x1d and buttons have been run with the change. Execution time of Routing section is reduced by around 15% without affecting quality of results.

Run through Benchmarks QoR Measurements. All tests passed. Since the tests do not have non_configurable nodes, there's no obvious improvement to execution time. Used to prove no increase in memory utilization.

Still waiting for results from Titan Benchmarks.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5e048309c716ca11766d6e703deaec9b6aa77d2f,2020-03-17 21:48:23
1092,1,True,1,1,1,0,Fix URLs in ISPD benchmark READMEs,a074ff48f511061c2f1b06adca5e8331fc59a6bd,2020-01-30 21:45:43
1091,1,True,5,0,2,0,"This provides metadata about where golden/parse results came from which can help
debugging/tracing/reproducibility issues.
",2cfddbb1a80bece1296b30a7a9b5b1578f2a7f0a,2020-01-30 17:31:52
1090,6,True,151,107,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Improve VPR graphics visualization of router expansion (now named 'Toggle Router Expansion Costs') which shows the nodes the router looks at when routing a particular connection.  Usually used for debugging in combination with the --route_debug* flags and --disp on.

To illustrate, consider a developer wanting to visualize how the routing of a high fanout net routing works. Suppose they are investigating the routing of a high fanout net to a sink near the center of the chip on the `neuron` benchmark.

Before this PR they would only see the nodes visualized which were popped off the heap to find the path (and not any which were pushed in from the route tree, but never popped). With this PR they would see (with VTR_ENABLE_DEBUG_LOGGING enabled, since it has some run-time cost which we don't want to pay in typical usage) all nodes which were pushed into the heap:
![neuron_hf_net](https://user-images.githubusercontent.com/1386492/73396477-6f2ab000-42af-11ea-9e14-0e2ac12192ff.png)
where in this case the 'best' cost to reach each node is shown via color (dark=low cost, bright=high cost).

Although unrelated to this PR (which is just for the visualization), for reference when VPR routes with its spatial high-fanout net routing optimization the router looks at far fewer nodes for the same connection:
![neuron_hf_net_opt](https://user-images.githubusercontent.com/1386492/73396722-fbd56e00-42af-11ea-9751-249aa1f83888.png)
",778875c37f5690bf13239412e706f23d868accbd,2020-01-30 21:50:26
1089,2,True,2,2,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Improve VPR log histogram formatting",37fdf0691056434c720f4088424ba9153545e191,2020-01-30 14:24:55
1088,58,False,845,48,16,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",bee87501fefaa4a517fbbb31da2aeb8dfca6b0c0,
1086,2,True,2,2,2,1,"#### Description

This was causing 100 billion allocations to be generated.

#### Related Issue
#### Motivation and Context

Avoids 100 billion allocations during PnR.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",00fd0447873cb97e699733ea0c4d63675ae45baf,2020-01-31 20:18:13
1085,11,False,1443,748,22,5,"#### Description

This changes edge storage from an allocation array of struct per node to
struct of array for all edge data.

Several algorithms over edges that were previous per node per edge, but
were actually just iteration over edges are now part of rr_node_storage.

This PR is built on top #1084 .

#### Related Issue

#1079 
#1081 
#1084 

#### Motivation and Context

This changes the number of heap allocations on preallocated array (e.g. loading rr graph from file) from `Nnodes` to `3`.

This changes reduces the number of heap allocations during rr graph building from `Nnodes` to `3 * ceil(log2(Nedges) - log2(10*Nodes))`.

When the number of edges is known the max memory usage for edges is now `Nedge * (2*sizeof(int)+sizeof(short))`.  When the number of edges is not known, the max memory usage for edges is now:

```
min(10*Nnode, Nedge) * (2*sizeof(int)+sizeof(short)) + sizeof(int)* (Nedge/2)
```

#### How Has This Been Tested?

- [ ] Travis CI is green
- [ ] Nightly and weekly QoR metrics are acceptable

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e96a3ba5cda28c490390470cf3168110f2773286,
1084,7,False,895,577,22,11,"#### Description

This is laying the ground work for refactoring rr node and rr edge memory layout and storage.  This replaces the t_rr_node object with a proxy object.  The proxy then references a backing array that is identical to the current storage method.

By using a proxy object, anything that was taking references to the rr_nodes array stopped working.  This PR changed those to use values instead of pointers/references.

This PR builds on #1081

#### Related Issue

#1079 
#1048

#### Motivation and Context

This is change should be a no-op, which should be reflected in the QoR.

#### How Has This Been Tested?

 - [x] Basic and strong CI passes
 - [ ] Run and check nightly and weekly QoR

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3c19d3d768144d0e89001a8f861eadfab0cbd9f5,
1082,11,True,552,1,15,8,"Kokoro is a Google internal service which allows significantly bigger
and longer CI builds using Google Cloud Platform.

This enables us to run all the vtr_reg_strong, vtr_reg_nightly and
vtr_reg_nightly on every pull request. This will happen once the
@kokoro-team has been given access to the repo and the web hook set up.

Examples of the outputs from Kokoro can be seen at SymbiFlow/symbiflow-arch-defs#1170 and https://source.cloud.google.com/results/invocations/810121e5-fd2a-41d4-bad1-ac0859d597a6/log

Copy of #1054",601469935461281e8e3b5fa91b9dac8485ff5805,2020-01-30 22:11:04
1081,8,True,421,301,10,14,"#### Description

By moving ClockRRGraphBuilder earlier in the rr graph flow, several
parts of ClockRRGraphBuilder::create_and_append_clock_rr_graph can be
avoided, as they were duplicating work that the original build_rr_graph
flow was already doing (init_fan, mapping arch switch to rr switch,
partition_edges).

This new code should also fully preallocate the rr_node array, though
this is not required by the code.

Fixes #1080

#### Related Issue

#1079
#1080

#### Motivation and Context

When researching #1079, it was discovered that there was basically 3 ways edges were used (`alloc_and_load_edges`, rr graph load, and `ClockRRGraphBuilder`).  However it is clear that `ClockRRGraphBuilder::create_and_append_clock_rr_graph` should just be using `alloc_and_load_edges` rather than a bespoke allocation methodology.

In addition, `ClockRRGraphBuilder` was duplicating work (two calls to `init_fan_out` for example), and it was possible for `ClockRRGraphBuilder` to emit a switch that still had an arch_switch_idx vs an rr_switch_idx.

This PR fixes all of these issues.

#### How Has This Been Tested?

- CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",713fef71fa050860bf00708449f4b016701b1af4,2020-02-03 21:05:12
1078,9,False,1009,33299,264,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",96fbd309897a5743a3b37d07e896fc8e2ed3abe6,
1077,6,True,1159,153,17,1,"#### Description

String internment is basically the idea that if you know you have a small pool of strings relative to the number of total strings, you can save memory and maybe save CPU time by interning the strings.  Then the leafs of the code have intern ids rather than the full strings.

This PR adds a simple string internment using `std::unordered_map` for use when interning strings, and a `std::vector` for intern id to string lookup. This simple string internment does use 2x the memory for string storage, but is straight forward to implement and verify.

This PR also converts the metadata structures to use interned string ids instead of `std::string`.  This is not critical for metadata on objects in physical types, but is critical when there is metadata that is on a per edge or per node basis.  The CPU overhead of build the string internship is small (order 2.5 seconds for 22 million internments), but the memory reduction is significant if the strings and/or substrings are repeated, which is very typical.

This PR also adds a `MetadataStorage` object, which performs delay'd map generation.  Because node and edge metadata is always insert all data, followed by query, a simple two-phase data structure can be used.  This saves CPU time by avoiding the needed to maintain a live map during initial insertion.

#### Motivation and Context

This is a CPU - memory trade-off.  On the artix 50T, the cost of storing edge metadata is roughly 5 GiB of memory without internment, and that memory usage scales linearly with the number of edges (22 million on the 50T).  By using string internment, the memory used still scales linearly, but the constant factor and number of allocations drops dramatically.  If `absl` is added to VTR, the number of allocations can potentially be brought to 0 using `absl::InlinedVector`.

#### How Has This Been Tested?

- CI passes
- CPU and memory usage profiled before and after change.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",4d53a489c1021019f5b7e1a82d870a30542e1dba,2020-02-05 14:59:36
1076,1,True,21,45,5,5,"#### Description

By converting the first 4 layers into array+NdMatrix, the memory
locality is improved and the number of pointer chases changes from 5 to
2ish.

#### Motivation and Context

There is almost never a time where 5 nested std::vector's are the right data structure.  Changing the middle 3 std::vector's to an `NdMatrix` isn't ideal, but it is better.  Given that root vector is fixed size, using std::array instead of std::vector saves one layer of indirection.

#### How Has This Been Tested?

- CI is green
- Profiled change before and after

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",107089c19ca0da331264ff14a69d70a3e9f302d6,2020-02-05 14:57:41
1075,2,True,100,73,8,4,"#### Description

`std::set` is a fairly heavy-weight data structure, and consumes more
memory and is slower than a boolean.

#### Motivation and Context

Using a `std::set` is both slower and more memory intensive than simply using two booleans.  The new code no longer accommodates iterating over input or output tiles, but that was never done in the old code.

#### How Has This Been Tested?

- CI is green
- Profiled before and after

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e74b800a0e200f589831af970e6f0657dc9671e9,2020-03-06 17:55:51
1074,1,True,14,5,1,3,"#### Description

Previous implementation of the flat_map `operator []` did a `find` followed by an `insert`.  This effectively did a binary search twice (`find` calls `std::lower_bound`, and so does `insert`).  The correct optimal solution is to use `std::lower_bound`, and avoid the second lookup.

#### Related Issue

#### Motivation and Context

This makes using `operator []` faster by avoiding a second call to `std::lower_bound`.

#### How Has This Been Tested?

- [x] CI is green
- [x] Change was profiled before and after

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",095765cdc82d70b4c741b681b9e7569ab4a0a8ca,2020-01-31 20:19:22
1069,3,True,97,149,7,8,"#### Description
`malloc()` and `free()` can be error-prone, so I'm working on replacing them with safer alternatives, but without adding overhead.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/506

#### Motivation and Context
See issue above.

#### How Has This Been Tested?
I've run `vtr_reg_strong` tests.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4ff2a673884f6fda134a42ce3d9ac46753ad547d,2020-02-07 15:20:39
1068,1,True,92,91,9,1,"Just a bunch of random spelling fixes, and formatting in `run_reg_test.pl`.",6e45c495951e8a25d25f527138396af8f8f171af,2020-01-31 18:07:55
1067,1,False,2152,21,6,5,"Squashed commit of project to generate netlist statistics including of
node types, levels, fanout and path length. Parser file to process the
output. Additional arguments added to Odin for Verbose and non-verbose
versions.

#### Description
This is the project aimed at gathering netlist characteristics in Odin like node type, counts, levels, fanout and path length.
The mechanism of collection for basic node information is just a recursive dfs traversal based on output_blif. I ended up separating verbose and non-verbose versions of the stat generator in part because some of the verbose data is irrelevant to basic profiling (# nodes, edges etc.) and because collecting path statistics is costly and possibly not as reliable and/or desirable. The non-verbose version still does a separate dfs of all COs to get the max level. 

Adds to odin.cpp ""--stat"" and --stat_verbose"" arguments.

The parser parse_odin_stats.py processes the output of generate_blif_stats.cpp and dumps it into a csv/tsv. It also can compare outputs and flag major changes etc as part of a set of basic QoR features. The parser could probably be made a bit cleaner in terms of readability but adding/removing metrics is fairly simple.

I left this as a WIP because there were a couple things I wasn't sure about and I wasn't sure to what degree this should be pared down or added to. For example: I left a commented out reversed get_max_levels function in but I don't have any use for it presently, it can be used as a different way of getting path length data but I assume should be removed? I have questions w/r/t the way the max path is calculated. _I will include these questions as well as highlighted code shortly._
In particular the increased overhead of adding data members to the node and net structs should be discussed.

#### Motivation and Context
The intention of the project was to collect data on the netlist struct generated after using -V or -b in Odin-II to quantify possible changes between netlists either as a result of changing the Odin-II logic synthesis process or between Odin and ABC BLIF outputs or other reasons. Basic count information (e.g. #latches) is known or obtained easily from the netlist struct and can be found with the simulator or ABC but other metrics are not as easily obtained, this is a different non-simulator means of collecting basic or verbose stats and at the least provides the framework with which to add other metrics for collection. It is my understanding that there was a netlist_stat struct that was never fully used or implemented. Perhaps it would be easier to start with the non-verbose version, which provides basic desirable information with low overhead.

#### How Has This Been Tested?
Passed running ""make test"" on previous commit, will run again. Unclear what counts as full test coverage. Failed one large memory benchmark because of limitations in testing environment. Works with verilog input and BLIF input although Verilog input will yield very slightly different results. Does not substantially alter existing code aside from odin_types.h and odin_ii.cpp. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d81ac63caf3e30e69deb656fa9649b015bd33c0d,
1065,5,False,375,137,15,1,This implements part one of #1063,021be757931b46f5a669391a8bfd50e897b54d31,
1061,1,True,478,348,3,0,"this commit also:

- add helpfull errors on missing packages
- add facility to only run subset of task
- fix the overrides of config files, must specify that we want to override
- add method to forcefully disable coloring in case we can't pick up that its a CI

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
fails test that should be included during weekly due to change done on 41c111fb347142ac873d3e35f52ff04f9e3fdc53 

#### Motivation and Context
fix nightly regression

#### How Has This Been Tested?
ran whole flow

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3674c5cf9a3f18158c2e3c733e978522f9927b97,2019-12-11 04:44:43
1060,24,True,8946,1123,24,26,"#### Description

This also adds capnp support via the schema generator.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

The schema based XML reader is faster than the previous hand written reader, and the capnp reader and writer is faster than that.  Conversion between the XML and capnp proto format can be achieved by pairing `--read_rr_graph` in one format, and `--write_rr_graph` in the other format.

#### How Has This Been Tested?

- CI should pass.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2f9a9df72252b740b33116b12675572871d0ece6,2020-02-05 18:53:45
1059,1,True,39,39,1,0,"Fixes an unchecked dynamic cast

#### Description
Minor change: uses an if statement to check that a dynamic cast is returned

#### Related Issue
Unchecked dynamic cast #732

#### Motivation and Context
Fixes coverity warnings

#### How Has This Been Tested?
N/A

#### Types of changes
Creates safer code

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8e5cb3005a5e39295f7ca20e21b59eaba138887b,2019-12-06 03:55:46
1055,2,False,148020,2,4,9,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the PicoSoC and Murax circuits to the `vtr_flow` strong regression tests suite.
The .blif file have been pre-compiled through Quartus Prime (v19.1) following [this instructions](http://www.eecg.utoronto.ca/~kmurray/titan/fpl_13_demo.pdf).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/584
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/582

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
SymbiFlow has murax and picosoc as part of the test suite. It is helpful to have these designs included in the VtR test suite as well, to have a comparison also with the titan flow (which uses the stratixIV architecture).

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2113c73b497758e565a9f375cd6305f469f82bf4,
1054,2,False,464,0,14,11,"Kokoro is a Google internal service which allows significantly bigger
and longer CI builds using Google Cloud Platform.

This enables us to run all the `vtr_reg_strong`, `vtr_reg_nightly` and
`vtr_reg_nightly` on every pull request. This will happen once the
@kokoro-team has been given access to the repo and the web hook set up.

Examples of the outputs from Kokoro can be seen at https://github.com/SymbiFlow/symbiflow-arch-defs/pull/1170 and https://source.cloud.google.com/results/invocations/810121e5-fd2a-41d4-bad1-ac0859d597a6/log",c863afe0c8d5b2f81c9f0108dd472c06a60dd709,
1053,425,False,5212,1849,105,0,"<!--- Provide a general summary of your changes in the Title above -->

New equivalent sites after correcting Kevin's review in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/988
",69b1f2de494d61b7909a38413c8040860055553a,
1052,1,True,32,3,4,2,"#### Description

This adds a base cost option that is length scaling, but where the length scaling is bounded to the range 1 to 4, where 1 is the segments with the shortest length, and 4 is the longest length.  This was discovered to be helpful in the congestion routing of the 7-series graph because it lowered the backtracking effect of a lookahead mispredict, but still enabled the router to prefer shorter wires when performing decongestion.

In particular, the 7-series arch has a large min to max length range than that found in the Stratix 4 arch.  The Stratix 4 arch only has length 4 and length 16 segments, resulting in a 4-16 scaling range. To mirror that for the 7-series arch (which has length 1 up to length 44 routing segments), the base cost scaling was limited artifically to the range 1 to 4.

#### Related Issue

#1047 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?

So far this has only been tested on the 7-series arch.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ea3950cee8f51d054951f3c80e4f72d6a331fd42,2020-04-17 17:23:41
1044,1,False,1,1,1,2,"#### Description

Even though buffer's are non-configurable, so `Cinternal` will always be
applied, but that is a modelling choice, not a bug.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

While it is possible to push `Cinternal` into the preceding node, but it isn't a bug to have to have an ambiguous modelling choice.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",846770b3643ee19290f0596625635c5af8af0f0e,
1042,1,True,2,0,1,1,"#### Description

I believe when C_internal support was added, VPR was not tested at `-DVTR_ASSERT_LEVEL=3`, and as a result it was not noticed that `is_valid_route_tree` was failing.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Assertion violation on 7-series tests when running at `-DVTR_ASSERT_LEVEL=3`.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",c6007e07c12325485870d1a130c8e634364dc989,2019-11-14 17:47:00
1041,2,False,1604,0,6,2,"#### Description

Demonstrates assertion failure from https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1038

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1038

#### Motivation and Context

Adds a failing test.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",db625a09090edc97ebc51f95706df77ee236c44e,
1037,1,True,11,6,1,1,"#### Description

Previous code was only clearing caching in one of 3 relevant places.

#### Related Issue

#1036 

#### Motivation and Context

Caching code introduced in https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/485697eacfdea46ebf4efdb727866e0b522e186f did not clear the cache in all paths, resulting in the router iteration display showing stale data.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6320788dab4204fa951441d67f4aa79ec5c1f53e,2019-11-05 23:52:16
1035,1,True,38,0,2,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR adds documentation to the `route_diag` tool.

",7eb59c411223654eae19ea3dd893dcdb5ccd312e,2019-11-05 19:26:08
1034,1,True,146,122,2,1,"This file should probably be merged / replaced with something from the VtR docs, but for now, I converted it to Markdown.

See https://github.com/mithro/vtr-verilog-to-routing/tree/vtr-readme-md/vtr_flow/tasks/regression_tests for a preview of the output.",210460fa3921417c108e1dd8073c8fef44da60b1,2019-12-09 19:15:19
1030,1,True,7,3,2,1," * Convert the file to markdown.
 * Actually link to the ""running the vtr flow"" docs.

See what this looks like at https://github.com/mithro/vtr-verilog-to-routing/tree/vtr-flow-readme-fix/vtr_flow or click the ""Display Rich Diff"" button (the paper looking one near the `<>` button).",2f47e3a9ab73a68358dec1d14d1b461a91460894,2019-11-04 16:24:26
1028,7,False,2432,72,22,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Creating a list of adders to track them after the first traverse. Also, generate a function look like partial_map to traverse the netlist only for adders, due to the fact that we want to change the adders in each generation. creating a destroy function to track the adder cloud after doing partial_map to free nodes. For each generation, I create a new empty adder and make a copy of input/output pins of previous adder (the adder's pins which were related to the before doing partial_map) in the new one. In this way, I can keep the main pins and change adders without backtracking to the AST.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ab69f195e444c2267b5aae13e8a9b14c21064b0c,
1026,1,True,10,0,1,14,"Turn off optimization and add debug flags for the ""debug"" build type.

This avoids the dreaded `<value optimized out>` in GDB.",03d0a5d1fe7184082a8682a9f8db472bbdc241b4,2020-08-26 18:33:22
1025,6,True,197,86,4,2,"Add some bounding box methods to vtr::Rect with unit tests.

#### Description
Adds a couple of useful constructors, `empty()` and `bounding_box` and `expand_bounding_box` to compute bounding rectangles.

#### Motivation and Context
I added a bounding box class while working on the connection box based lookahead, and vtr::Rect had most of what I implemented in the new class, so this allows me to use vtr::Rect instead.

#### How Has This Been Tested?
I've added unit tests.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",694a317c13db9e96fef95997468157a5f68e176b,2020-01-31 18:29:57
1024,1,True,1,1,1,1,Fixes a typo,28b426be6bbe00a3d6e8aea0f67b1a7dc5120d45,2019-10-31 14:52:31
1021,2,False,812,670,24,2,"#### Description

Trace manipulation and allocation were previously spread across several files (`route_common.cpp`, `route_traceback.cpp`, `route_tree_timing.cpp`) and mutation of the global route traces were hard to trace.  All manipulation of route traces are now centralized behind the `Traces` object, and only read-only data to the traces is passed outside of the `Traces` object.

Methods on `Traces` that modify the traceback are correctly non-const, and all read-only operations are marked as `const`.

#### Related Issue

#1018 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6a7a43abbe0c5185641ef898169adff2d58abaf6,
1020,3,True,105,12,5,4,"#### Description

I'm converting the `vtr:vector<ClusterNetId, t_net_routing_status>` to just an `t_net_routing_status` object.  The backing store is now a bitset instead of vector to lower the memory requirement for `t_net_routing_status` and put clearer boundries on when `t_net_routing_status` is updated.

Follow up PR will more `t_net_routing_status` and other mutable state out of raw RoutingContext into a set of dedicated objects for tracking router state per #1018 

#### Related Issue

#1018

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d084fd9f5907f49776f18683a713c016dde174ac,2020-03-11 15:58:21
1019,3,False,1161,920,8,1,"#### Description

This PR converts the core of route tree timing to use no global data!

#### Related Issue

This is first commit for https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/1018

#### Motivation and Context

See #1018

#### How Has This Been Tested?

- [x] vtr_reg_basic
- [x] vtr_reg_strong
- [ ] Titan QoR

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b928aa6b81aa610338d1eedf595e319dd9bc78e7,
1015,2,False,94,82,1,6,"#### Description

- Avoid copying cost_parameters structure.
- Request inline of inner loop functions as they are invoked at few (1-3)
  callsites, but get called many many times.
- Don't get congestion if it won't be used.  Useful for accelerating
  pure expansion.

#### Related Issue

#1008 

#### Motivation and Context

When integrating the router for expansions in the placer and lookahead, I noted that a non-trival fraction of profiler CPU samples were being spent on function preambles.  This PR avoids this time via inlining or making const ref some arguments.  The cost is an increased binary size, however the number of callsites for the inlined functions are low (1-3), and the number of function calls is very very high, so this should provide a benefit to both pure expansions and timing driven expansions.

#### How Has This Been Tested?

1. [x] Tested expansions with and without this change
2. [ ] Titan QoR run

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6753971f971e4ab5b613c47d2b4e845019f888b2,
1012,3,True,10,3,1,1,"#### How Has This Been Tested?
tested by make test Odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",40a2cce675306fa6fc220d8da143ae83b78a22f5,2019-10-24 20:00:52
1011,1,False,3,0,1,5,,e9d63353d04005e2342fca57658282c53c41fcd2,
1010,1,True,1,0,1,1,"<!--- Provide a general summary of your changes in the Title above -->
Added a null-pointer test in the main loop of the `FasmWriterVisitor::walk_routing()` method, so an empty trace won't cause segment fault during FASM generation.

#### Description
When calling the `genfasm` util with routing results containing global routes (for example a clock), an empty trace will appear in the `g_vpr_ctx.mutable_routing().trace` vector. The head of such trace is a null pointer, and the `FasmWriterVisitor::walk_routing()` method does not check this before walking the route tree converted from it, eventually causing a segment fault.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",40ff8a613713495e4e2628bc1893635deb52f7fd,2019-10-18 20:57:44
1008,9,True,286,4,8,18,"#### Description

`calculate_all_path_delays_from_rr_node` and `timing_driven_find_all_shortest_paths_from_route_tree` were intended to be used in the place delay matrix computation, but were never implemented (see https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/99f91ffbba6d9f5ef40b00cb83d8a126b3a1ad15).  This PR attempts to replace `route_connection_delay` with `calculate_all_path_delays_from_rr_node`.

#### Related Issue

- https://github.com/SymbiFlow/symbiflow-arch-defs/issues/1071

#### Motivation and Context

Place matrix delay computation for larger grids is a large term.  On the `A50T` 7-series graph, it was taking an extremely long time (>24 hrs) and on the Titan benchmarks it was taking 4202.33 seconds (see https://github.com/SymbiFlow/symbiflow-arch-defs/issues/1071#issuecomment-542398926).  The graph expansion method should return better data, in less time, than the `width*height` A* search that was present before.

#### How Has This Been Tested?

- [x] CI is green
- [ ] Check Titan QoR

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",82047948c88e22196e75ae90f2101d1cf1f62aae,2020-04-13 19:22:01
1007,1,True,10,4,1,1,"#### Description

Previous code potentially added a rt_node to two linked_rt_edge's,
resulting in a double free when freeing the tree.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Previous code would segfault in some circumstances.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

1. Segfaulting case no longer segfaults
2. CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",25792b31adc290789f6699f47e4c2888634cede5,2019-10-18 21:36:53
1001,1,True,2,0,1,0,"#### How Has This Been Tested?
tested by make test odin 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8d73e272f53eecfcbc9525001dddd622c86aee97,2019-10-17 01:55:31
1000,1,True,2,0,1,0,"#### Motivation and Context
tested by make test odin 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8d8980d7c61ea564d6c08950ba52000f5f6e86c4,2019-10-17 01:33:29
999,1,True,1,0,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",aee82b2af2c003317f415379ee723efc8ff43e41,2019-10-17 01:32:32
998,1,True,44,9,5,1,"#### Description

This is useful if the placer delay sampling method tries to sample clock
network tiles (e.g. PLLs, global/local clock buffers) which will result
in a poor delay matrix which is unsuitable for LUTs/FFs/RAMs.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

If the delay matrix sampling algorithm chooses a specialized tile (e.g. PLL, global/local clock buffers) it effectively builds the delay matrix for the specialized network, instead of the general routing fabric.  This option prevents this from being possible.

#### How Has This Been Tested?

Need to finish testing with variant, but a simpler version of this PR was tested with Symbiflow.

Testing remaining to be done:
- [ ] Make sure CI is green
- [ ] Add test for new flag


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",59d00e73ea62c8252c5546eb58907e921553a1db,2019-10-10 17:40:44
997,5,True,11,2,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4fec98a1bfe8daf12acc3a4cca1c1f8c84f77684,2019-10-21 14:07:32
996,3,True,5,2,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c1e55c52122cc57c0c08e96f23b8ce4d3fbfd3cd,2019-10-18 15:45:17
995,2,True,4,5,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8f420959cd56959b9b398ebf3ef66fe785646319,2019-10-21 04:56:56
994,1,True,5,0,1,0,"#### Description

When debugging lookaheads, a common problem early on is simply the lookahead failing to find valid values (e.g. finite).  This adds a small debug log message if a non-finite lookahead is detected and router debugging is enabled.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context


This is simply a debugging aid.

#### How Has This Been Tested?


Compiled and checked the output on a failure.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",192178934c63e8bcaeca69734f1c3bda264504d0,2019-10-09 21:28:42
993,10,True,1812,67,8,3,"This PR adds support for placeholders (or tags) that can be specified in fasm features/prefixes. Those placeholders are then substituted with given values during fasm generation.

#### Description
Values of the placeholders can be defined at the topmost level only - in the `<layout>` section of the architecture XML file via the `fasm_placeholders` metadata entry.

Inside the metadata entry, a placeholder is defined in assigned with a value in the following manner. One placeholder per line:
```
<placeholder name> = <placeholder value>
```

For example, top level tiles in the grid can now be specified as:
```
<single type=""clb"" priority=""1"" x=""10"" y=""20"">
  <metadata>
    <meta fasm_placeholders>
      LOC = X10Y20
      LR = R
    </meta>
  </metadata>
</single>
<single type=""clb"" priority=""1"" x=""10"" y=""21"">
  <metadata>
    <meta fasm_placeholders>
      LOC = X10Y21
      LR = R
    </meta>
  </metadata>
</single>
```
where `LOC` and `LR` are placeholder names with assigned values.

A common pb_type for both tiles can be defined as:
```
<pb_type>
  ...
  <metadata>
    <meta name=""fasm_prefix"">
    {LR}IOB_{LOC}
    </meta>
  </metadata>
</pb_type>
```

Then, during fasm output generation those placeholders will be replaced with values defined at the grid definition level.

#### Related Issue

#### Motivation and Context
The change allows to use the same pb_type definition for different tile types by allowing to control content of fasm features/prefixes at the pb_type level. In another words: a pb_type can have multiple fasm features defined that correspond to tiles with different prefixes.

#### How Has This Been Tested?
There is a test suite for genfasm along with an example arch XML. This test was augmented to verify operation of the implemented placeholder mechanism.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",46190c1ecef79ee6b25ef66b4868d8421ac5a5da,2019-10-25 20:28:52
992,1,True,8,2,2,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Coverity has reported a defect in the build.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

** CID 202040:  Performance inefficiencies  (PASS_BY_VALUE)
/home/travis/build/verilog-to-routing/vtr-verilog-to-routing/vpr/src/base/place_and_route.cpp: 46 in binary_search_place_and_route(t_placer_opts, const t_annealing_sched &, const t_router_opts &, const t_analysis_opts &, const t_file_name_opts &, const t_arch *, bool, int, t_det_routing_arch *, std::vector<t_segment_inf, std::allocator<t_segment_inf>> &, vtr::vector<vtr::StrongId<cluster_net_id_tag, int, (int)-1>, float *> &, std::shared_ptr<SetupHoldTimingInfo>, std::shared_ptr<PostClusterDelayCalculator>)()


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
We do not need to pass the entire t_placer_opts into the function, its reference shall suffice.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",70333b12f2b9dfdfb0c4f93c06b6503a3255ef8c,2019-10-25 20:21:24
991,3,False,17,1,2,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7daba6698731be1793875f24ca38e243f985efb5,
990,1,False,2700,0,10,6,"Initial Effort on refactoring the Routing Resource Graph (RRG) to a unified RRGraph object,

#### Description
This commit focuses on adding
1. the class definition and member functions for the new object RRGraph;
2. a basic checking function check_rr_graph_obj(), which guarantee that the RRGraph meets the demand of VPR routers;
2. light modification on vtr_geometry.h|tpp to support for manipulations.

#### Related Issue
This is a starting point for VPR code base refactoring. 
We try to create standard data structures for modeling FPGA devices.

#### Motivation and Context
Motivation
-----------
With an aim to group the discrete routing-related data structures into a unified object, which can ease router development and improve runtime and memory usage.
RRGraph object is designed to in a general way how routing resources are connected in a FPGA fabric, replacing the classical rr_node and rr_edge data structures.

Vision
------
The RRGraph is designed to be a read-only database/graph, once created.
To be generic and easy to maintain, any builder for RRGraph should be a free function outside the object, which uses the public accessors and mutators.
RRGraph is supposed to a constant database for developers/users to access information about the FPGA routing architecture.
Placement and routing should NOT change any attributes of RRGraph.
Any placement and routing results should be stored in other data structures, such as PlaceContext and RoutingContext.

Object Organization
--------------------
A Routing Resource Graph (RRGraph or RRG) is a directed graph (has many cycles), which consists of a number of nodes and edges.
Each node represents a routing resource, which could be 
1. a routing track in X-direction or Y-direction (CHANX or CHANY) 
2. an input or an output of a logic block (IPIN or OPIN) 
3. a virtual source or sink node (SOURCE or SINK), which are starting/ending points of routing trees.

Each edge represents a switch between routing resources, which could be
1. a multiplexer
2. a tri-state buffer
3. a pass gate
4. a non-configurable (can not be turned off) buffer
5. a short (metal connection that can not be turned off

RRGraph is designed to a self-contained data structure as much as possible.
It contains the segment- and switch-related information which are used to describe node-level and edge-level attributes.

The rr-graph is the single largest data structure in VPR, so avoid adding unnecessary information per node or per edge to it, as it will impact memory footprint.
Instead, using indices to point to the outside data source instead of embedding to RRGraph

To avoid the misuse of data indices when accessing node/edge/switch/segment, we introduce specialized data types RRNodeId, RREdgeId, RRSwitchId, RRSegmentId.

Detailed comments about this content is coded in header file rr_graph_obj.h.

#### How Has This Been Tested?
Passed basic and strong regression tests.

On a Linux Server with CentOS 7.5, compiled with GCC 8.2

The new data structures have not been plugged into VPR engine yet. Should have no affect on P&R.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",108205c8df805fa0619f51d36bbca91a6490cca5,
989,2,True,736,31,17,1,"#### Description

Bind ``--read_placement_delay_lookup`` and ``--write_placement_delay_lookup`` to SerDes (implemented using Cap’n Proto).

#### Motivation and Context

See justification in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/707

This PR has predecessor PRs:
 - #707 
 - #708 
 - #709 

#### How Has This Been Tested?

Unit testing on SerDes, and some integration testing with Symbiflow.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",591b8901b8a944fe8c163907c0ee4bca309cd39a,2019-10-25 19:48:45
988,58,True,2185,1241,63,24,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is a followup of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/941. The main purpose is to add the equivalent sites placement. In fact, if the architecture specifies that a pb_type can be placed in two or more different physical tiles, the placer can now use those tiles.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/513

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The placer should be able to find better solutions whenever there is a clustered block that could be placed in all the possible physical tiles that can be used.

This change neatly separates the domains of the packer and placer. This means that the placer becomes more flexible in finding solutions that are currently unfeasible and strictly dependent on the packer outcomes.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
There is a WIP regression test, which needs to be fixed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ced5d94839871acdeec9e4355563f6157863c862,2019-12-10 13:39:06
986,1,True,78,19,4,1,"#### Description

The previous code used the clb prefix of the current block, but the
`interconnect`/`fasm_mux` logic operates on the parent pb_type of the
current block, not the current block itself.  As a result, if the output
of a `fasm_mux` has a prefix, it was getting lumped into the FASM mux
declaration.

#### Motivation and Context

The intention of `fasm_prefix` was to apply to metadata at the current level and deeper.  This bug caused a `fasm_prefix` to leak one level higher than intended.

#### How Has This Been Tested?

1. Integration tests on Symbiflow
2. New unit test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",ad9a3eec4d1c7cebcafef0ad89382022554bf2ca,2019-09-26 21:54:15
985,1,True,2,2,1,1,"@kmurray added few tweaks to PR #983 (thanks for that!). 
There is one typo that caught my eye though, namely ``Placment`` instead of ``Placement``.
This small PR fixes it.",2c416fc5548c83e5615b4e7701d7faf6ceb6e3b7,2019-09-26 21:53:04
983,1,True,110,0,2,1,"Add basic VPR flow description to the docs.

#### Description
Added a new ``basic_flow.rst`` file with the additional description of the P&R process including examples. Added a reference to it to the ``index.rst`` file .

#### Related Issue
N/A

#### Motivation and Context
Better understanding of what VPR does.

#### How Has This Been Tested?
Ran with sphinx-build to make sure the ``rst`` file has correct syntax.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [N/A] I have added tests to cover my changes
- [X] All new and existing tests passed
",76517b2da4705ad6a7200d786a2c80b3f48549bd,2019-09-25 14:38:03
981,1,True,15,4,1,0,"<!--- Provide a general summary of your changes in the Title above -->
change get_value function to solve runtime error of long 64bits for Sanitizer

#### How Has This Been Tested?
compile on make build odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",675f50f864abd183bb99800876d0cb0c7cc5ab39,2019-09-24 22:41:43
975,1,True,17,10,2,0,"
#### How Has This Been Tested?
ran the test suite
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",41c111fb347142ac873d3e35f52ff04f9e3fdc53,2019-09-23 21:39:20
974,2,True,4,3,2,0,"#### How Has This Been Tested?
testing by odin make test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",424a0df07ceba873a3edb80551c0df936d497865,2019-09-23 21:38:43
972,1,True,2,1,1,0,"#### How Has This Been Tested?
tested by Valgrind for specific tasks which had the mem leak issue

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b9448f2ae29e699d5a3536452210d306f2428540,2019-09-23 21:37:28
969,7,True,472,81,6,11,"#### Description

The previous pruning code left non-configurable sets unpruned.  The new code tracks outbound configurable edges from non-configurable sets, and prunes them when the count reaches zero.

Fixes #526

#### Related Issue

- #526

#### Motivation and Context

#### How Has This Been Tested?

 - [x] Check route has been updated to detect stubs
 - [x] Symbiflow designs that were failing with the new check route now do not error
 - [ ] CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",339f5f67ce1d6811d442994feee6a96cce0c3fd7,2019-10-25 19:47:01
967,1,True,1,1,1,3,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Solves an issue with ReadTheDocs. This PR adds the specific commit of the python package used to solve the cross-reference links.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",79a8bb557896e67fca9f20d5debdd81227b445eb,2019-09-17 19:45:28
966,1,True,62,54,1,1,"#### How Has This Been Tested?
testing by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d07bc3d9532e8b03c8a0117170fce17772bc3ee9,2019-09-18 15:47:44
965,1,False,2,2,1,1,"<!--- Provide a general summary of your changes in the Title above -->

Odin_covertiy_CID203685



#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d332df4fc5449131726f3ac960aa8423b578fd3f,
964,1,True,2,2,1,0,"#### How Has This Been Tested?
testing by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cf8b67c764b11e7b9f264c1db219f7de59fba3d7,2019-09-17 13:29:46
963,1,True,2,2,1,0,"#### How Has This Been Tested?
testing by make test odin
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d34e983ad28cabbeaa24dcf42cc90c49e805dfd6,2019-09-17 13:28:40
962,2,True,3,1,3,0,"#### How Has This Been Tested?
testing by make test odin
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",46021bfe25b091d6a3613632feea30e8341a657b,2019-09-17 13:27:58
961,1,True,3,3,1,0,"#### How Has This Been Tested?
testing by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",aaaf0b5e3c99e13da6e03f35c3d6f940ed7519c6,2019-09-12 01:25:45
960,1,True,4,4,2,0,"#### Motivation and Context
testing by odin make test

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",39a131a97aab4b6632f4e66a88a9f4c860a0da9f,2019-09-11 16:50:58
959,1,True,1,1,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",54a81a342186bfdbd00af9694f89feb8753aadca,2019-09-11 16:51:24
958,1,True,1,1,1,0,"#### How Has This Been Tested?
testing by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a635ef97491db4c73ad1652ca39c28679d26cbce,2019-09-11 16:51:55
957,1,False,1,1,1,0,"#### How Has This Been Tested?
testing by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9a2c60590818541c92d7dc1c8217802143a71474,
956,3,True,30,0,1,2,"#### Description

The current cost indexing code will leave segment costs as ""OPEN"" (e.g. -1.f) if none of that segment is present.  This data may get used in the classic cost function here (https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vpr/src/route/router_lookahead.cpp#L50), and as a result a negative lookahead cost may be generated.

The specific circumstances that can result in this is if a segment is only used in the X or Y direction, resulting in none of the opposite type being present.  In this case, it is probably better to use the ortho cost values rather than leave them as ""OPEN"" (e.g. -1.f).

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?


Green CI, and some symbiflow integration tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f2058ef06d60a32cf73c74449a656e5260c18538,2019-09-18 20:39:57
955,1,True,1,1,1,0,"#### How Has This Been Tested?
tested by make test odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a58c38f83549561c394b5f2b51b9ac23db8bd436,2019-09-12 01:25:08
954,2,True,2,2,1,0,"#### How Has This Been Tested?
by make test from odin

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",115cfe317cfae98555e89297dd1be4ed4711ecfc,2019-09-12 01:24:51
953,1,True,1,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->

Removed existing dead code in rr_graph.cpp.

#### Description
<!--- Describe your changes in detail -->

Code originally checked for whether if is_global_graph was false, when this boolean was already known to be false, so I removed that condition.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#945 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Keeps coverity clean.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Investigated the blame for that particular section of code, and concluded that the condition had never been evaluated before.


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",019b4e0ed77e61948975ff2dc231879a872e6894,2019-09-16 19:07:59
952,3,False,566,337,4,19,"### Description

The heap approximation doesn't precisely follow the heap property, but
offers an approximation that is sufficient for the router's purpose.
This new data structure is faster to clear, faster during route time,
and results in better router behavior because it provides some
randomness on elements with costs that are same within 1 ps.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Profiler data showed a significant amount of time being spent managing the heap, especially the heap pop operation.  This refactoring has a couple gains for a couple reasons:
 - The new data structure does not provide an exact heap.  Instead it is an approximation based on grouping of cost.  This cost grouping is currently being done on a [0, 1) picosecond (1e-12) basis.
 - The new data structure provides some randomness on nodes with costs in the same grouping.  For items with identical cost, this avoids sending the router down identical paths, and resolves some congestion without explicitly costing it.
 - The new data structure and memory management clear very quickly by avoiding rebuilding the free list.

In limited functional testing these changes resulted in a 30-40% runtime decrease with a ~3% CPD increase.

#### How Has This Been Tested?

Some smaller functional tests (44k connections) show better convergence properties, and better per iteration runtime, and better overall runtime.

Titan benchmarks are being run now to see if the change holds on a variety of designs (especially larger ones).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",337a46c799d8e78272fd4980d260f0d816d9b68f,
951,1,False,43,0,3,2,"#### Description

The intention of this format is for graph export to external tools for
comparisons.  This format may be extended to include sufficient metadata
to have external tools write the .route format.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

To enable apples to apples comparisons with external routing tools, this format exports the routing graph and post-placement source and sink nodes.  This can be useful for making comparisions with external tools.

The current output format lacks timing, so comparisons will soley be for non-timing driven comparisons.  Expanding the format to accommodate enough metadata to write the `.route` format will allow for post-route analysis to be done.

#### How Has This Been Tested?

Some manual functional testing.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",92a9591711a173db4296acec2e98d74d4aa50e09,
950,1,True,2,2,1,1,"#### Description

Appears that pointer type in logging macro was missed during recent logical <-> physical cluster split.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",fb3da658000cfd5564e0fd890c4b3f5135f91af0,2019-09-16 19:04:09
949,1,True,5,4,1,3,"#### Description

Previous code assumed that rr nodes appeared in id order, rather than rely on the id field of the XML.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Some experimentation with rr graph reordering based on geometry re-assigns rr node ids based on various criteria.  This requires that the rr graph reader not assume that node ids are in order when being read.

#### How Has This Been Tested?

CI is green and some manual functional testing.


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f09069eb4c8701f62edbeaa9a06ea66cf18946eb,2019-09-16 18:55:30
948,1,False,3,6,3,0,"

#### Description
remove unused headers and replace unsupported command for osx.

#### Motivation and Context
allow compilation in an OSX environemnt

#### How Has This Been Tested?
builds

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5df80e49438c77b061b788bf2ce9e66de8ad8c2d,
946,1,False,3,1,1,3,"#### Description

Previous code would warn on nullptr, but then derefence anyways.

#### Related Issue

Discovered by coverity in #945

#### Motivation and Context

NULL deref's are bad.

#### How Has This Been Tested?

CI.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e2a4b5753925b66334471aff92be123deb2ec56a,
944,1,True,1,0,1,4,"Recent logical/physical tiles split introduced the regression. If there is no max_type found we should not call the logical_block_type function, but rather return the nullptr immediately  (like we did before the split).",8b6de94e97148849b0206e693ef7e3406b372131,2019-09-10 17:49:36
943,5,True,24,186,7,12,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR solves an issue in the docs generation, for which Markdown cross-references with other `.md` files couldn't be correctly solved.

With this PR both `make html` and `make dirhtml` should correctly solve the relative references.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/409

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Documentation should point to existing and correct links.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Manually checked the broken relative cross-reference links.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5ea4cc7ea0223f2bc5c2ce0a8cc1bbb439fd62ff,2019-09-16 21:53:56
942,1,True,652,371,12,0,"#### Description
Hierarchies are now implemented for generate blocks and named sequential blocks. Labels are added to the block node data, to be used for naming later. Unnamed generate blocks are implicitly named ""genblk"", per the Verilog 2005 standard.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5b018665f47488d17f2d2bda3e2d7de427aa1572,2019-08-28 18:31:57
941,17,True,145342,143839,218,11,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is a follow up of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/934. This changes allow to introduce in the XML architecture definitions the `tile` tags, which are relative to the newly introduced `t_physical_tile_type`. The reason to do so is to separate definitively the logical block types and the physical tile types.
As the current XML architectures are in a wrong format (as they do not contain the `tiles` tag), a new method has been added to [`upgrade_arch.py`](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vtr_flow/scripts/upgrade_arch.py) to easily upgrade the architectures following the format proposed in this PR.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This is a followup of https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/934 and is related also to [this comment](https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/934#issuecomment-524967048).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
With the `t_logical_block_type` being separated from the `t_physical_tile_type` brings up the necessity of having also a different way of populating the two data structures. Therefore, with this PR, a new kind of top-level tag is added to the architecture definition, alongside with all the necessary changes to correctly parse the XML.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Basic and Strong reg tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",012116edb0bcdafc13fb21022fbf7d9a6fe97520,2019-09-17 20:42:13
939,1,True,273,211,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
implement stack-based scopes tables during parse for Verilog files to allow easy creation of temporary tables and better hierarchical maps

#### Related Issue
inability to create a hierarchy for labels.

#### How Has This Been Tested?
odin_pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",53ae56619327d9d342a6404a172cf70aebbd37ba,2019-09-08 20:26:49
938,1,True,20,17,1,1,"When using Odin_II in -b mode, large post-ABC BLIFs cause segfault
Unguarded strtok was passing null pointer to strcmp
Simply guarded the failed strtok, unclear whether this resolves
underlying issue.
Similar issue still happens if large BLIFs used in simulator.
Also fixed typo.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6590357064728fdf9ac3ff30f349ca1011da498e,2019-08-26 15:12:28
937,5,False,1943,87,12,3,"#### Description

Hold violations that were previously left unresolved are now resolved by enabling a new routing algorithm and budgeting algorithm.

#### Related Issue

#### Motivation and Context

A new router is added that incorporates ideas from the RCV paper that attempts to solve hold violations through minimum delay budgeting. After one round of initial routing, a the slacks of each connection is used to generate delay budget. Hold slack is used to change the minimum delay and setup slack is used to change the maximum delay. If the maximum delay is reduced to below the minimum delay as a result of higher setup slack, the minimum delay takes precedence.

This delay window is then used to define a semi-quadratic cost function for each connection. From the second iteration onwards, the router adopts a more refined routing algorithm. As the router begins from the source node and expands and explores the search space for potential paths, it keeps track of the explored path and calculates lookahead path (based on manhattan distance and other parameters). This results in a total path and a total path delay which then can be mapped to a cost in the quadratic cost function. This partial path is stored in a heap and the least costly node in the heap is explored next, until the sink is reach.

The name of this algorithm is tentatively yo-yo routing because the budgeting is done akin to how the string in a yo-yo is loosened and then tighten to perform tricks. 

#### How Has This Been Tested?
Two test circuits paired with the vtr benchmarks are used to validate the functionality of the algorithm.. `test_arch.xml` is a test circuit that hypothesizes registers with three orders magnitude higher hold time and thus, would result in widespread hold violations. The second test circuit is the pre-existing architecture`k6 frac n10 frac chain mem32k 40nm`.n

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",6f20bf0743af4179ac6b7d5660543436aa9d8cbe,
936,2,True,1894,668,18,1,"#### Description
The elaboration phase is further restructured to be able to properly elaborate the hierarchy. vSYMBOL_ID now accepts the . character for identifiers, and proper verification has been added to ensure that these are used in the correct contexts. The defparam implementation has been changed to be able to a) properly override parameters and b) override parameters from within different scopes.

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9caa91eb3cb83b78d8744436deb5f27d1fa675b9,2019-08-26 15:11:58
935,1,False,172,74,14,3,"#### Description

In the router hotpath, if the rr node vector is larger than the cache,
roughly every memory access has non-trival performance impact.  Avoiding
these accesses has a ~10% route time improvement on large graphs.

Graphs that fix within the CPU cache will likely be negatively impacted
by this change.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

I've been profiling the router, and identifying hotspots.  One of the hotspots that jumps out right now is rr node access.  Before the router would read the rr node bounding box data over and over again to check against the net bb.  This is repeated work, and unneeded memory accesses.

Instead, when bounding boxes are updated (which is initially and then less frequently during routing), all nodes are tested against the net bounding box.  This is more up front computation, but in a linear memory access pattern, which allows for proper prefetch.  The result is a bitset that is sizeof(rr_node)*sizeof(unsigned int) (e.g. 40*64 => 2560) significantly smaller.  Because the bitset is smaller, it has a greater chance of staying in the CPU cache, avoiding the need to go to main memory to read the rr node bounds.

The IPIN bitset is a similar optimization.

It is worth noting that it is expected that on designs where the rr node table fits in the CPU cache, these changes will hurt performance.  However given that each rr node is 40 bytes, a 500k node (with no edges) graph will exceed a 16 MB cache.

#### How Has This Been Tested?

I've run this on two microcontroller class designs.  I'll need to run titan benchmarks to confirm that across a broad spectrum of designs the memory <-> CPU trade off is worth it.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",3c3213760e0498b86536d60ea870dd6923ad4ab4,
934,9,True,1180,1069,77,10,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR refactors the way the `t_type_descriptor` is defined.
It explicitly separates the concepts of `physical` and `logical`.

- Physical Type: this describes the properties of a physical block on the device, such as pin_location, pin_class, width, height, area, etc. It is used mainly during placement and rr_graph generation.
- Logical Type: this describes the internal structure of a logical block. In other words, it will represent the current top level `pb_type` and has pointers on the pb_type and pb_graph_node structures, needed mainly during the packing stage.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This PR has been previously discussed here https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/559.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Having a neat and explicit separation of physical and logical block is necessary for two main reasons:
- reduces complexity of the code;
- will be critical to have an equivalent site placement feature, for which the same `logical block` can be placed in many different `physical tiles`.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
basic and strong `vtr_regression_tests`

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",717b760a6270262d3aa27b73d77ccb57e7b9ac50,2019-08-26 18:06:57
933,1,True,1610,476,24,2,"#### Description
This PR will add basic support for tasks. Odin II will now be able to parse and process verilog files containing basic implementations of tasks. Can support multiple instances of the same task, or have multiple tasks defined and instantiated by the module. Can parse automatic tasks and functions, but these are not yet handled. Updated function_statement in the bison to prevent things that functions cannot do from passing through. Added support for unconnected ports in module instances. 

#### How Has This Been Tested?
Odin pre-commit
Created new verilog files for tests. I have added three equivalent test cases, simple_task.v, which uses a task, simple_function.v, which uses a function, and simple_module.v, which uses a module, all of which implement the same circuit as the existing verilog test file in operators, twobit_arithmetic_plus.v. All four of these verilog files give the same output blif. These files can also be used in the future, if changes are made to how Odin II handles either module instances, function instances, or task instances, we will be able to use these to ensure the output of all four still yields the same result

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",c6422ed207d3d981bd98903ca4b0f5e6e868bb62,2019-08-28 20:07:34
931,1,False,10,11,3,4,"#### Description

Use of unordered_map consumes ~10% of routing time on designs with
non-configurable edges.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Profiled design with non-configurable edges, and found unordered_map lookahead was taking ~10% of time.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c17e0dd200e1cd4f064d2382b1965ca0462e3e93,
930,1,True,29,33,1,11,"#### Description

Previous implementation recomputed dimension strides every usage.  When
using the map lookahead, this has a very significant affect, as the core
of the map lookahead is an NdMatrix.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Provides significant speedup when using lookaheads that leverage NdMatrix lookaheads (e.g. map).

#### How Has This Been Tested?

Profiled before and after.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5a064ffd5cad632ebed5ef771462960fbf0be64e,2019-09-30 20:26:52
929,7,True,698,306,7,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- update all buttons to combo boxes or spin buttons
 
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

",031812c9ec6d35f68ae1113090a6293245b27e0d,2019-08-16 20:20:50
928,4,True,252,16,17,12,"Added two stage Router

#### Description
- Stage 1: route clock nets to a virtual sink.
  Virtual sink is connected to all clock network sources
- Stage 2: Route all physical sinks of the clock net

Note: after stage 1 we remove the virtual sink
      from the route-tree and traceback

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/521
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/520

#### Motivation and Context
Ensures that clock nets use the clock network instead of local routing

#### How Has This Been Tested?
vpr_qor test run successfully with option turned on

#### Checklist:
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All existing tests passed
",ba55efb12992dcd3a77ba165ad6fd0116bf7ecbd,2019-12-06 03:55:17
927,1,True,6,7,1,1,"#### Description

Previous code could not handle searching along multiple linked nodes.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

If sink rr node is on second linked edge, previous code would assert.

#### How Has This Been Tested?

Invocation that failed before passes now.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ce68af38494d4e5778f32efed9a3eba33a1ead10,2019-08-15 19:15:18
926,1,True,1,1,1,1,"The `unclustered_list_head` is an array holding heads of lists of unclustered molecules. The array is sorted by number of molecules inputs. Since the `unclustered_list_head_size` was calculated incorrectly, the molecules with the highest input count were not considered while searching for unrelated candidates for a cluster.

This is one of the issues causing #621 
",8c5c0430c6a06237e28a9154426a8160de6615a9,2019-08-15 19:14:23
925,7,True,8,7828,30,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- completely remove easyGL library from VTR

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- tested on machine with gtk installed
- tested on machine with no gtk installed
",319efec1b4d9cc7a92161402acfaa71f24de9352,2019-08-15 19:16:23
924,2,False,1005,19,13,0,"#### Description
Add basic support for tasks. Odin can now parse and process verilog code that includes basic task implementation

#### How Has This Been Tested?
Odin pre-commit
Wrote new test for task and compared the output blif to make sure it was correct

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",2517f2ef47c877ef253dc40249f2a296c9dfed41,
922,1,False,111,23,9,7,"#### Description

This makes debugging router issues on particular rr node -> rr node
pairs.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?

- [ ] CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",27374546580e338697ad205666a2f616daff6faf,
921,1,True,23,21,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- set to left-click only to highlight nodes
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#917 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
",e80f56f5ce31030278700d8e355971f4ebf224c0,2019-08-14 23:01:32
920,2,True,1064,840,12,1,"#### Description
reduce_expressions() was split into two separate functions in order to later support hierarchical references. Parameters were also removed from the AST (they only live in parameter tables now). Parameter overrides are handled during AST elaboration. More error checking was added for parameter overrides.

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed",7b9d30cfce257d105c09cd35522a3c834ac410be,2019-08-15 13:00:31
919,1,False,19,0,2,5,"#### Description

Even under ideal circumstances, the router may discover better paths and/or spanning
trees during convergence.  The first iteration is only the lower bound
net delay in the case where nets have no fanout, and the bounding box is
ideal.  Neither of these assumptions always hold.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?

- [ ] CI is green
- [ ] Titan QoR

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",093ac17e063fb3c7dfd07deec79f358ec82aafc9,
918,1,True,85,83,18,1,"#### Description

Currently the number of edges was limited to SHORT_MAX (32767).  Graphs
that violate this result in silent memory corruption, likely resulting
in a SEGFAULT.  This change is two-fold:

 - Instead of using short, sites that use edge index now use
   t_edge_size.  This enables modifying the edge type safely, and
   locating code sites that depend on the edge width.
 - Add sanity checks in rr graph reading and creation to detect if a
   graph is violating the maximum edge count.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context

Provides memory safety if edge count exceeds edge index storage, and enables experimentation with edge size type.

#### How Has This Been Tested?

- [ ] CI is green

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",454cee724fa0d22a248a60fe3994d5a5f2339c0b,2019-08-15 16:20:00
916,2,True,30,14,4,3,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the optional `-Werror` flag during ODIN_II compilation to have a warning-free build in Travis CI.

This PR also contains two formatting fixes (trailing space and tab-to-spaces conversion).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Having a consistent warning-free build is necessary to prevent from having possible regressions in the future.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Locally, by inserting useless code producing warnings which have been correctly caught at compile time.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7831dd7ffd428b522b1d6b603972d572d66979de,2019-08-19 17:09:18
915,21,True,532,60,20,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- add command line option to save graphics into pdf output
  - generate outputs without getting into the event loop (popping up the window)
- add a button to save graphics
  - pop up a window asking for output file name and output file type (pdf, png, or svg)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
",13a547aab793adc701899607170e8af897d194f5,2019-08-15 15:16:54
914,1,True,31,19,4,2,"#### Description

When ``--read_rr_graph`` is used, every time ``create_rr_graph``is called it will reload the rrgraph.  The intention of ``create_rr_graph`` is to only reload the rrgraph if needed (e.g. [channel width check](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vpr/src/route/rr_graph.cpp#L330)), however this check doesn't work if the channel width is fixed by the rr graph being read.

This PR changes how ``create_rr_graph`` checks if ``load_rr_graph`` needs to be called.

#### Related Issue

#707 

#### Motivation and Context

Avoids reloading rrgraph when loading the rrgraph from a file.

#### How Has This Been Tested?

- [ ] CI green
- [ ] Tested with symbiflow to see that placement doesn't double load the rrgraph.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",88303fb93d7a5f560c25770209c3766f91bdc004,2019-08-23 18:59:49
913,2,True,169,241,5,1,"#### Description
When building the symbol table, the nodes are no longer copied over, but put directly in the symbol table and then removed completely from the AST, so that these nodes will no longer exist in multiple places. This prevents having to do multiple passes in the code to update the copies, and prevents nodes from being lost when updating both copies to be put in string caches.

This PR should take care of any remaining valgrind leaks from the full benchmarks.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",014d3368333dd8dfe0a7700b3a50e95c0f80cb90,2019-08-14 13:53:57
911,15,True,315,175,20,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
- add NO_GRAPHICS flags to prevent including ezgl library when graphics are disabled
- does not compile ezgl library if gtk/x11 are not installed

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#878 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- built & ran on machine with no gtk/x11 installed
- built & ran on machine with gtk/x11 installed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

",f9a0412e30fdba47c0d70b3aa9c5c513ecbe995a,2019-08-13 20:05:14
909,2,True,480,22,14,0,"#### Description
Odin used to throw a warning when a module was given the same name as a defined hard block, which has now been changed to an error message. Some regression tests had to be updated to accommodate the change.

Some of the tests that we changed were our tests for hard block conversions, so new tests are being added to the regression suite to test these instead.

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",b8d2715207ef64b11d243c3021134c195eb23342,2019-08-13 01:59:31
908,3,True,1356,1247,25,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR gets rid of the hand written preprocessor and use Flex states to do processing.
Also adds macro ( `define ADD(a,b) a + b ) and does recursive macro (depth limited to 256 for safety)


#### Related Issue
N/A

#### Motivation and Context
Macro was unavailable and the preprocessor was stripping away context for error reporting.

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",667674af6b5efa2308d92b267936d0783cebff11,2019-08-16 17:43:35
907,2,True,36,20,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
update the global conf file for the odin regression suite to match new style

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
remove warning messages from CI)

#### How Has This Been Tested?
run_reg_test.pl odin_reg_micro

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",28eb34e84387d8c453623a475a82a226322e361d,2019-08-08 20:42:45
906,1,True,32,35,6,0,"#### Description
Added support for .vh files, which can be included in .v files.

#### Motivation and Context
Need .vh file support for MOR1K

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0cbfb319759cdaa1cdae6276ce307fb8aeb38bfb,2019-08-08 19:27:50
905,1,True,14,1,4,0,"#### Description
add soft errors to Odin via a flag

#### Related Issue
#903 

#### Motivation and Context
Allow users to pass unsupported files

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",db82cd7d6669e277f24b1ee67aecafbb65672cd3,2019-08-08 19:32:49
904,1,True,9,12,1,1,"This PR fixes the Makefile for Odin to allow parallel builds (e.g. `make -j$(nproc)`)

#### Description

There were two issues with the way the targets are defined.

1. The `.%.build` target cannot depend on both `clean` and `_init`. It works
fine with a single-core build, but when executing it in parallel, the
`clean` target breaks the `_init` target. To make it work in parallel the
`_init` target now directly depends on the `clean` target.

2. The `_set_<xxx>` targets have to be executed before the `_build_it`
target - they cannot be executed at the same time. This has been
reworked to use a dynamically defined targets to avoid creating an extra
wrapper target for each of them.

#### Motivation and Context
To be able to build Odin using multiple cores.

#### How Has This Been Tested?
Both mutli and single job builds work for Odin.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",907424fcb9f6c2064550248fb6849df01f262ab4,2019-08-08 18:44:37
903,1,False,3,1,2,3,"This change is needed to make Odin_II accept SystemVerilog files.

#### Motivation and Context
Using Odin_II with SystemVerilog to potentially see what is there and what is missing.

#### How Has This Been Tested?
By getting Odin to use a file with the `.sv` extension.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

Not all tests pass on my machine, but they don't pass without this patch either and I don't think they should be affected by this change so I'll just let the CI verify it.",1b0c9fa97e7a1d18615ddce3f3f9d16bf78fd0d4,
902,1,True,1,0,1,1,"Pretty straight-forward, just adding missing header.",353fa88feba6007a978041865daca9e953f66cfb,2019-08-08 19:18:17
901,1,False,97,71,4,1,"#### Description
Adds the chunk_size as an attribute to the node so that it won't have to be recalculated. Updates the symbol table node for 2D arrays in place so that it can be accessed immediately by other functions, rather than having to add it to the parameter table. Also fixes a memory leak that was caused by adding it to the parameter table. The full benchmarks will have no leaks during synthesis after this change

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f3cc23cb7d7aa3f80ebf883d10e832a26a077013,
900,1,True,1,0,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Freed the pointer switch_Cinternal_total in load_rr_indexed_data_T_values.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#889 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
""Memory leaks should be avoided.""
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Running vtr_reg_valgrind_small after my change no longer reported the memory leak from load_rr_indexed_data_T_values function.
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",d753f182e1266f3ff9722d5ef35eb151525e9555,2019-08-07 13:20:25
899,2,True,529,75,11,0,"### Description
Fixed a bug with module/hard block name collisions. Odin will now convert module instantiations to hard blocks or soft logic where appropriate (i.e., when port connections match), regardless of whether a custom module was written. 

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1e4ed54f17fa36c380c0f8f8157ec82350819bde,2019-08-07 23:17:48
898,4,True,289,500,38,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Fix coverity errors and improve regression test speed by running synthesis only once with valgrind

#### Related Issue
Coverity errors and warnings

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
odin_pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2e084fb996406a746cf0b870291ff2a02b34501d,2019-08-04 18:13:20
897,1,True,40,40,1,0,"#### Description

 - If place method is bounding box and timing analysis is disabled, then
   the place_delay_model will not be constructed.
 - Later code defers the unique_ptr that holds no object
 - Passing an invalid reference is undefined behavior, and may cause a
   SEGFAULT.

#### Related Issue

N/A

#### Motivation and Context

Avoids SEGFAULT place algorithm when: ``--place --timing_analysis off --place_algorithm bounding_box``

#### How Has This Been Tested?

SEGFAULT no longer happens!

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e52d21ee7ecd124e646c5a5d0949b95483b76bcc,2019-08-07 13:43:12
896,1,True,1,1,1,0,Head was red on CI,8f4776bbb2ffc1c27378096512395850d1a6b48b,2019-08-02 18:40:09
895,1,True,18,2,1,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Added a condition checking both the total_cost and backwards_cost in reaching the node must be less than any previously recorded value of total_cost and backwards_cost, before adding the node to the heap. This action is also referred to as ""prepruning"".

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

This change is required as an improvement to VPR's runtime.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Here are the results of Titan23 benchmarks being run on the StratixIV Titan architecture.

These results are a comparison of the code with the check added vs. master branch.

Both codebases ran only the routing stage, and used the same net and place files to isolate only the effect of the router.

https://docs.google.com/spreadsheets/d/1f8zz_17xW7yyd9VYHUvNfsq8xoqpjj1B1918oFWb83Q/edit?usp=sharing


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ede8f2db7d5fd7d33121807e7aab022222712516,2019-08-02 14:28:36
894,189,False,10275,12112,188,4,"<!--- Provide a general summary of your changes in the Title above -->
Effort on refactoring the Routing Resource Graph to a RRGraph object,
#### Description
<!--- Describe your changes in detail -->
Added the class definition and member functions for the new object RRGraph 
Light modification on vtr_geometry.h|tpp to support for manipulations

#### Related Issue
<!--- Pull requests should be related to open issues -->
This is a starting point for VPR code base refactoring. We try to create standard data structures for modeling FPGA devices.
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
With an aim to group the discrete routing-related data structures into unified object, which can ease router development and improve runtime and memory usage.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Passed basic and strong regression tests. 
<!--- Include details of your testing environment, and the tests you ran to -->
On a Linux Server with CentOS 7.5, compiled with GCC 8.2
<!--- see how your change affects other areas of the code, etc. -->
The new data structures have not been plugged into VPR engine yet. Should have no affects on P&R.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X ] All new and existing tests passed
",e88e0134f7221a9b349293a0a8a28c6c6a8b16de,
892,3,True,180430,0,411,0,"#### Description

This is PR adds capnproto to the VPR subtree, and changes nothing else.  This is done to allow for further PR's to avoid the noise of the subtree additions.

#### Related Issue

See #707 and #710

#### How Has This Been Tested?

In theory this doesn't modify VPR at all.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4d558896c4ddc38d01f24694b07e382c7f92f414,2019-08-02 15:57:07
891,8,True,74,14,4,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- made all of the id check functions public under Netlist
- pop up a warning dialog box if entered block/net/rr node id/name does not exist


#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
",0813aa35970ff2561a64d18148e0bbd1dcb80e4d,2019-08-02 14:26:05
890,1,False,13,4,1,0,"#### Description
Fixes memory leak caused by temp_string never being freed unless it gets assigned to temp_parameter_list. Commented out some seemingly unnecessary code

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",18bd9842622185589eb0f0299d93fae2fb465154,
887,2,False,38,2,1,0,"#### Description
Fixes valgrind leak from overwriting an ast_node in convert_2D_to_1D_array. This node gets overwitten when calling this function from update_string_caches

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e70bcd7fee18328bf23c7ef920c7883fc90b44b6,
886,1,True,108,16,6,0,"#### Description
Fixes leaks from overwriting the pin->mapping and the pin->name when dealing with single port and dual port ram. Increased the bit depth in both_ram.v as the leak does not appear with a depth smaller than 16 bits. Added valgrind_arch_sweep task to the regression suite so that this will be tested in the odin pre-commit

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",4410e55baaf7211268fc0deb0f5af79d79cb5a4a,2019-08-01 14:38:21
885,4,True,398,760,10,2,"#### Description
- For loops are now being unrolled during AST elaboration as FOR nodes are found, rather than in its own sweep
- Module instantiations are moved to a later phase after generate constructs are resolved, so only the instances that are used are instantiated
- A bug that allowed module instances of the same name to occur was fixed

#### How Has This Been Tested?
- Odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ba7dbafcf5734d35f32ee89cd31976bf2cef0cea,2019-08-01 15:26:00
884,1,True,1,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
added an assertion to avoid potential null pointer dereference warning.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#871 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

""To keep VTR warning clean during builds (at least with gcc), so that any new warning actually gets looked into.""

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Passed basic and strong regression tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a3d53639152c23c152781e6671e7287fbdc19aef,2019-07-30 20:24:39
882,1,True,90,13,4,0,"#### Description
Fixes leaks caused by newDefparam. There should be no leaks in the micro benchmarks. Add valgrind test for micro to regression suite. No leaks are introduced when run with IPO turned on.

#### How Has This Been Tested?
Odin pre-commit & valgrind_micro 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2034853e2817f19aa3858d2efcf5e2857f86937b,2019-07-31 16:12:28
881,1,True,2,2,1,0,"This commit removes a compile warning related to
netlist_visualizer.cpp's depth_first_traverse_visualize()
in ODIN_II.

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
This commit changes the parameters to the depth_first_traverse_visualize() function to accept a `short` instead of an `int`. This was done because the parameter was later being assigned to a value in `node`, which is of type short int. The value passed in when this function is called is also a short int.

#### Motivation and Context
This change removes an ODIN_II compile error.

#### How Has This Been Tested?
The pre-commit test was run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",50590002b7cfa2af35fe19dfa3554c1c8603b2ef,2019-07-31 16:11:50
880,1,True,58,65,4,2,"#### Description
Fixes leaks from function_syntax.v; syntax regression tests should now be leak free. Adds a task file to run the valgrind test on syntax benchmarks. Removes the valgrind_asr_leak task, as these are no longer leaking and have been moved into the valgrind_operators task in a previous PR #865. Also changes calls to strcpy in parse_making_ast.cpp to vtr::strdup. Added valgrind_syntax to light_suite task

#### How Has This Been Tested?
Odin pre-commit & valgrind_syntax

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",f23a4acc4774559319d06a833f57a5485059416e,2019-07-31 16:11:30
879,1,True,2,2,1,0,"This commit removes a compile warning related to
netlist_utils.cpp's depth_traverse_count() in ODIN_II.

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
This commit changes the parameters to the depth_traverse_count() function to accept a `short` instead of an `int`. This was done because the parameter was later being assigned to a value in `node`, which is of type short int.

#### Motivation and Context
This removes a warning that comes up during ODIN_II compilation.

#### How Has This Been Tested?
The pre-commit test was run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ae3b3846c7838d46080bbd01a2b26ca7dd48061b,2019-07-31 16:10:43
877,1,True,1,0,1,0,"
#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",789604f871d361ca3c0f4a5b3da059363117ff34,2019-07-27 17:09:01
876,1,True,86,2258,16,0,"this PR should fix Coverity issue on write barriers and dangerous API calls.

removing code not being tested and/or used and/or maintained.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
this removes the experimental part of the simulator to improve readability and maintainability, as well as reduce coverity errors.

This also removes different adder soft-logic layout to simplify the code and reduce bug.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c0bdf4a62eeaa4f210fc141f65dd350e0346fe7d,2019-07-27 15:28:22
875,1,True,8,15,2,0,"the leak is introduced from IPO flag by making some global variable appear as unreachable by the program exit.

#### Related Issue
valgrind operator failing on master

#### Motivation and Context
fix regression test

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d94d8797e09b640457ac14b13289a39a5f33dcc1,2019-07-27 05:39:28
874,1,True,13,17,2,0,"#### Description
Fix leak caused by expand_power and re-enable all verilog test files in valgrind_operators, as they should not be causing any leaks after this PR, PR #872, and PR #865 are all merged. The valgrind_operators will fail without all of these being merged, so the other two should be merged first.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",989356e5c1ddec446c45af5a323dba09f3f1df80,2019-07-27 01:28:30
872,1,True,15,25,1,0,"#### Description
Fixes memory leak caused by setting a node to NULL in the verilog_bison.y file rather than freeing it.


#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",06f3c4450253cfa7c9ad2cdeffa7836bb40b84b7,2019-07-27 01:20:39
870,1,True,2,0,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

In the function trace_routed_connection_rr_nodes, I added the route tree to the free list, where it could be correctly freed by the subsequent function call free_route_tree_timing_structs().

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#845 

For this issue, I was unable to replicate the memory leak mentioned above with the latest build of libezgl or the suggested commit of a990b18. 

I built VTR with sanitizers on, and from the vpr folder ran the command:

valgrind --leak-check=full --show-leak-kinds=all --errors-for-leak-kinds=none --error-exitcode=1 --track-origins=yes ./cmd.sh
where ./cmd.sh was: 
./vpr ~/vtr_baseline/vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_htree0_40nm.xml ~/vtr_baseline/vtr_flow/benchmarks/blif/alu4.blif.

I ran the following command with graphics, and tried different permutations of clicking draw_crit_path, but in the suggested commit there was no report of memory being lost. However, found a heap-buffer-overflow when draw_crit_path was clicked 3-4 times in the routing stage. In the latest build of libezgl I could not replicate the memory leak either, according to @tinayang3024, clicking draw_crit_path 3-4 times would not result in heap-buffer-overflow on the master branch.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
It should prevent the memory leak caused by trace_routed_connection_rr_nodes of the graphics module.
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

**Unable to replicate the memory leak**

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9d36a8cff4dac69b9ae744924cb4a80d93e1832f,2019-07-30 18:33:41
869,1,True,52,5,3,0,"travis will not run reg test due to missing realpath command.

#### Description
rolled my own realpath -from_directory in the odin script library

#### Related Issue
N/A

#### Motivation and Context
fix regression test on travis

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",071e33f9a020a3cbb0894ad5c658c8b1ec2f8c98,2019-07-26 19:11:32
868,5,True,631,202,18,2,"#### Description
- Expanded support for generate to include nested loop generate constructs with module instantiations and conditional generate constructs (if/else, case). 
- Safeguards against using the same genvar in nested loops are in place, as well as appropriate constant checking. 
- Removed ""GENERATE"" node type as the generate/endgenerate keywords do not change any functionality, and therefore should not change the AST. 
- Added test cases that cover nested loop generates with module instantiations, if/else generates with module instantiations and assignments, case generates with module instantiations and assignments.

#### How Has This Been Tested?
- Odin pre-commit regression suite
- Odin pre-merge regression suite
- New tests to cover changes

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",7005bbaa8cd76b2cb69da6be736c47733062b173,2019-07-29 15:15:51
867,1,True,1,1,1,0,"This commit removes a compile warning related to
ast_util.cpp's fold_conditional() in ODIN_II.

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
Changed code to fix compile warnings coming from the fold_conditional() function. The warnings happen because the wrong type of enum is being used in a certain spot.

#### Motivation and Context
This change removes one ODIN_II compile warning.

#### How Has This Been Tested?
The pre-commit test was run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c3249993648932688cc6446239ac19daf7d19d0d,2019-07-26 15:10:03
866,1,True,9,5,1,0,"#### Description
Fixes leaks when running raygentop.v with k6_frac_N10_frac_chain_mem32k_40nm.xml, caused by not freeing the net name, or any unused pins before deleting the pointers

#### Related Issue
#622 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6a2afcde7413ef8d1fba421c62d92e96b6645d07,2019-07-26 18:31:44
865,1,True,42,55,4,1,"#### Description
Fixes valgrind leak caused by not being able to free the nodes and pins in the function instantiate_arithmetic_shift_right. There should not be any leaks found when running the asr benchmarks in the operators suite with the k6_frac_N10_frac_chain_mem32k_40nm.xml architecture file. 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",50bf7ea758b7bc4668d287a33838e8a0c56d42c3,2019-07-27 01:20:19
864,1,True,110,3,2,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR include build step to make and push Coverity builds 
Currently, use my email (should be regenerated by one of the long-term maintainers?)

#### Related Issue
closes #733

#### Motivation and Context
Increase frequency of Coverity scan to improve code quality and lessen errors

#### How Has This Been Tested?

used the travis linter to verify no bug were introduced (any other to test before pushing?)
```travis lint .travis.yml```

tested cron_build.sh localy with token from coverity

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d16610c7413918c2b41f46e72a716ac0eff923d1,2019-08-03 17:23:51
863,2,True,196,94,9,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
add explicit simulation type to ease debugging

#### Related Issue
vectors were not used during regression test

#### Motivation and Context
catch early errors or modification done on test files

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",38d65059608cb92c1538a6c6ffb9048b9b27d8fd,2019-07-26 01:55:15
862,10,True,1547,2780,646,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Refactor regression test suite to be more modular and easier to write custom suites
This PR also include a default valgrind test on operators to catch leaks before they appear

#### Related Issue
N/a

#### Motivation and Context
hard to create new test suite and tweak paramaters on a per test basis.
this PR resolve this by copying the behavior from the vtr_flow suite

#### How Has This Been Tested?
pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",733b8f03d2e972fb3ea9347344c1ba00bf1e12b5,2019-07-25 22:01:26
861,20,True,471,198,5,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
- add a search bar and a combo box to the top left corner of the window
- can search by rr node id (index #), block id (index #), block name, net id (index #), and net name
- highlight & zoom to the searching node 
- click on the 'Search' button or hit 'Enter' key to search

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- nothing shown if user enters an incorrect name
- seg fault if user enters an incorrect id (not sure if I should add a bound check, it seems like I may need to make member functions, such as valid_block_id, public or add new member functions in order to add bound check)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
",1d89bcbe684a28ca9b214be051ed38a0f0894c90,2019-07-30 22:53:26
860,2,True,1,1,1,0,"This commit removes several compile warnings related to
netlist_create_from_ast.cpp's find_top_module() in ODIN_II.

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
Changed code to fix compile warnings coming from the find_top_module() function. The warnings are related to the usage of unnecessary double parentheses.

#### Motivation and Context
This change simply removes some ODIN_II compile warnings.

#### How Has This Been Tested?
The pre-commit test was run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",badff0ab2a5dd3754e7d6d495173712091d20309,2019-07-26 15:12:14
859,1,True,1,1,1,0,"#### Description
Fixes leak from creating copies of pins unnecessarily. Rather than copying, just assign the pin. 

#### How Has This Been Tested?
Odin pre-commit 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f04282f5bd2d956dfce628f20a082947cd25e614,2019-07-26 15:14:55
858,1,True,1,1,1,2,"This commit removes several compile warnings related to
ast_util.cpp's get_name_of_pin_at_bit() in ODIN_II.

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
Changed code to fix compile warnings coming from the get_name_of_pin_at_bit() function. The warnings are about an uninitialized variable being used.

#### Motivation and Context
This change simply removes some ODIN_II compile warnings.

#### How Has This Been Tested?
The pre-commit test was run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a667bd52ecda11f5bc02b90115fb1a839fe71e20,2019-07-26 15:16:01
857,1,True,4,0,1,0,"#### Description
Fixes memory leaks caused by never freeing the ast nodes held by the local_param_table_sc

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1c66921b01ffa94dc95fe775fe234f36244f731d,2019-07-26 15:17:12
856,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 202109. new_node going out of scope before being freed

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e9373a901c7c23806f44378fc14ee361bc59c4d2,2019-07-24 16:15:41
855,1,True,1,0,1,0,"#### Description
Should resolve coverity issue CID 202093. line_dup going out of scope before being freed.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cc2cd7c735083d3c0b765fb931a09e94451dfef1,2019-07-24 16:16:23
854,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 202087. Incorrect deallocator

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b468b1a14782f03d5b624c8d1761c747b1db05da,2019-07-24 16:22:02
853,1,True,16,7,1,0,"#### Description
Should resolve coverity issue CID 201059. Explicit NULL de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",97e06c1067941393950310f67e2950e20ce26c2a,2019-07-24 16:21:03
852,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201637. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",39b83f52f7862a49e4f4e2fd95b6c57aee05f32d,2019-07-24 16:13:29
851,1,True,28,35,1,0,"<!--- Provide a general summary of your changes in the Title above -->

```
________________________________________________________________________________________________________
*** CID 202136:  Incorrect expression  (COPY_PASTE_ERROR)
/workspace/vtr-verilog-to-routing/ODIN_II/SRC/ast_elaborate.cpp: 492 in reduce_expressions(ast_node_t *, STRING_CACHE_LIST *, long *, long)()
486                                                             remove_child_from_node(node, last_index);
487                                                             continue;
488                                                     }
489                                                     if (node->children[index] == NULL)
490                                                     {
491                                                             /* resulting from replication of zero */
>>>     CID 202136:  Incorrect expression  (COPY_PASTE_ERROR)
>>>     ""last_index"" in ""remove_child_from_node(node, last_index)"" looks like a copy-paste error.
492                                                             remove_child_from_node(node, last_index);
493                                                             continue;
494                                                     }
495     
496                                                     bool previous_is_constant = node_is_constant(node->children[last_index]);
497                                                     bool current_is_constant = node_is_constant(node->children[index]);
```


#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",699a92d64ebdf384f9187722e7d0eb00b0c015b8,2019-07-24 16:13:13
846,2,True,2,11,1,0,"#### Description
Should resolve coverity issue CID 201668. Identical code inside if-else statement

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",45aec03f1d9ea9aa42adf95f298f0ed7dcf3664c,2019-07-23 21:54:02
842,1,True,5,0,1,0,"#### Description
Should resolve coverity issue CID 200698. Resource leak due to new_name being overwritten

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2eb6fbfabb682355b57cc5a43a0d7548107fc964,2019-07-23 21:35:48
841,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201741. Type mis-match
(commit message has different CID, that was a typo)

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6d9d0635c2a3df04bf3ae484fac695d518399109,2019-07-23 21:36:06
840,1,True,16,10,1,0,"#### Description
Should resolve coverity issue CID 202042 & CID 200970. NULL pointer de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7468966c1a2d730606d8eca432c36950d26d3663,2019-07-23 21:52:37
839,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201837. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d8caace697a91b38e8814539664380b239281ea3,2019-07-23 21:36:21
838,2,True,449,346,8,0,"#### Description
- Expanded reduce_expressions to unpack 2D arrays and fold constant ternary operations
- Fixed replications of zero so that they are permitted in concatenations that contain other valid bitstrings, but not permitted anywhere else, per the Verilog 2005 standard
- Implicit fallthrough warning was solved via the reorganization of replication
- Bug from unrolled module instances in module_names_to_idx was resolved

#### Related Issue
closes 828

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",586da3961d7ffa0df68b9c8a49adc01eb0305c80,2019-07-23 21:50:30
837,1,True,6,3,1,0,"#### Description
Should resolve coverity issue CID 202041. NULL pointer de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9aafd1fe43190e14ab82069e4e16006952374a56,2019-07-23 21:37:10
836,3,True,60,55,1,0,"#### Description
Should resolve coverity issue CID 201853. Dereference after a NULL check

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",77760dd13fdddee6281405018407dded5de37862,2019-07-24 16:22:20
835,1,True,2,0,1,0,"#### Description
Should resolve coverity issue CID 201873. Resource leak due to *handle and *error not being freed.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",683c909ada65ed304b91fabd6eca79c1b430f005,2019-07-23 21:43:37
834,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201870. Extra argument to print statement and type mis-match.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f8c612e64e7cfbd608689dc669bd3f5b82c1b94a,2019-07-23 21:44:07
833,1,True,8,3,1,0,"#### Description
Should resolve coverity issue CID 201815. Resource leak due to names not being freed. In the first if block, we can free the contents held by names because they are not assigned to anything, but if the program goes into the else block, the contents are assigned, so we should not free them, just the pointer. 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f48b3a87569ce175009a139985c505162775cc08,2019-07-23 21:44:44
832,1,True,2,5,1,0,"#### Description
Should resolve coverity issue CID 201611. Resource leak due to clock_name not being freed. Since the function search_clock_name will malloc a new string anyway, just assign to names[3] and don't use another variable or do strdup. No need to duplicate strings everywhere if they're not being used again

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3a675533a42ef2d749578d071da1d5a4474d69dd,2019-07-23 21:45:46
831,1,True,255,173,1,0,"#### Description
Should resolve coverity issue CID 201751 & 200856. Resource leaks from output_bit_map and bit_map going out of scope before being freed. Had to rewrite function so that there was only one return point and the storage could be freed before the function returns.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6ee1512560978301cbbd56a1ba16be832e9feb94,2019-07-23 21:48:42
830,2,True,47,18,2,0,"#### Description
Fixed a bug that placed an unexpected node in the string cache when an implicit declaration was encountered.

#### Motivation and Context
nightly regression failed

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7799733591d3d89228e149161604866edf8e7ce9,2019-07-23 17:27:00
829,1,True,23,10,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
move the exit signal assignement in regression script such that it properly grabs the exit code with time and timeout

#### Motivation and Context
wrapper_odin.sh not catching abort signal

#### How Has This Been Tested?
odin operators with forcefully introduced errors

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",edd4e8ce4cdfb9f999be340b13735e5fd3ec353b,2019-07-23 16:47:03
827,1,True,14,7,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
disable valgrind when running perl scripts to catch valgrind leaks only on internal components

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/622#issuecomment-513857413_

This should now give a clean valgrind error list, vtr_reg_valgrind_small should now report 0 errors

#### Motivation and Context
Allows to catch only important valgrind leaks

#### How Has This Been Tested?
vtr_reg_valgrind_small

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1e46c95aea7c52fb9bb5f69e521dcf096f731ccd,2019-07-22 21:31:07
826,1,True,5,2,1,3,"#### Description
pugixml throws errors in compact mode when sanitize flags are on, 
this PR disables compact mode when sanitize flag are set

#### Related Issue
fixes #813 

#### Motivation and Context
Clean sanitize errors

#### How Has This Been Tested?
built using PR  #815 to verify build is successful
no errors are thrown

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",81e23bde2bb961b9531ff57455803f04eda5cea1,2019-07-22 19:49:28
824,2,True,158,82,4,0,"#### Description
Display error code in message for odin test suite

```
                                   operators/binary_nor/sample_arch
  Ok . . . . . . . . . . . . . . . operators/binary_logical_less_than/k6_N10_mem32K_40nm
  Ok . . . . . . . . . . . . . . . operators/binary_nor/no_arch
  Ok . . . . . . . . . . . . . . . operators/binary_nor/sample_arch
  Failed  exit:139 ""SIGSEGV"" . . . operators/string_test_concat_replicate/no_arch
...  <odin stdout if verbose is set> ...
```
#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d1ab6124d0b5e745582bed509ad66ccccfd0b7b5,2019-07-23 05:32:35
823,1,True,1,1,1,0,"#### Description
Related to PR #788. Coverity issue CID 201323. Type mis-match fix that was missed on the previous PR

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f4851692eca078fa592bcde3fc27e1132eeb7df2,2019-07-23 05:25:13
822,1,True,2,9,1,0,"#### Description
Should resolve coverity issue CID 201136. Identical code inside if-else statements

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e8c99b4d9f9bbc1afcff1bfb5a2e5b816d6768a1,2019-07-23 05:25:41
821,1,True,3,1,1,0,"#### Description
Should resolve coverity issue CID 201117. Need to store the pointer to the string that was duplicated so that it can later be freed.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6cd9d1417a5c26589ea13dd327000d02853c6644,2019-07-23 05:26:30
820,1,True,2,0,1,0,"#### Description
Should resolve coverity issue CID 200848. sim_data  should be freed before going out of scope.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b7b3c1e031e37d550628016e362aa88bc9d9013a,2019-07-23 05:28:46
819,5,True,594,514,8,0,"#### Description
Moved all resolutions from the resolve_node() function to a new elaboration phase during the AST simplification phase. This reduces convolution during netlist creation and will allow new features to be implemented more easily.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d7c462c4c0eea56cebb27d7af76b5a524d59b9cd,2019-07-22 19:09:22
818,7,True,126,17,7,6,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR supersedes this one: https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/633.

The additions with this w.r.t. to https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/633 are the following:

- Clang 3.6 has been removed from the Travis build list;
- VPR Travid CI now includes the `-Werror` compilation flag to assure that no new warning is added to VPR. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
See https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/633 for additional information

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3f0076c500aba2ef3834282dcdc7a9a15818277a,2019-07-23 15:46:47
816,1,True,19,21,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
add benchmark to test vtr_flow verilog files with valgrind on

#### Motivation and Context
benchmark the vtr_flow verilog file to assure functionnality and help debug leaks

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d6e4f656506634fe5c017acce8894792764048de,2019-07-20 22:22:08
815,1,True,1,2,1,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
with the previous flags, vtr would not build with libasan.
the changes remove linking asan as a static library

#### Related Issue
this fixes #814

#### Motivation and Context
Ability to run with sanitize flags.

#### How Has This Been Tested?
built with gcc 9 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",72c9ee1055968de09c530e642ebdda6bb7d3e0c7,2019-07-23 19:16:32
812,2,True,6,0,1,2,"#### Description
Should resolve coverity issue CID 200771. Resource leak. Very similiar to PR #811. Need to free stack_of_nodes and it's contents before returning.

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",32c59f5bf5cf3f37014ecadf3007a7f3a824dcf2,2019-07-27 14:45:35
811,2,True,6,1,1,1,"#### Description
Should resolve coverity issue CID 200770. Resource leak. Need to free stack_of_nodes and it's contents. This was also labeled in the code as a TODO. Ran regression suite with no failures.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4734984a7cd80bc34d987d8e52cfe2824f2f5ec9,2019-07-27 14:46:10
810,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200673; type mis-match.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",802157e44b5287cc2c3633b4f2df6dc6e8a9f945,2019-07-20 16:31:59
809,1,True,21,3,1,0,"#### Description
Should resolve coverity issue CID 134668; resource leak. Need to free input_names and it's contents before returning.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",fff7fd12d98eebeaef7ea43d2547f6c436204be1,2019-07-23 05:33:24
805,1,True,29,81,3,0,"#### Description
Tweak previous changes from PR #763 to reuse some existing code rather than adding too much new.

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",59beefc7634fced3aaa55270025d2cd07d3ac447,2019-07-20 01:50:27
804,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201850. Check for ptr should be done before strcmp otherwise, NULL pointer could be de-referenced

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6a77c213be29bfb18c5b74bc871d0e2c78edf023,2019-07-20 06:10:15
803,1,True,2,1,1,1,"#### Description
Should resolve coverity issue CID 201694. Check the length of node->name before appending to buffer

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",86238034e5aff8885754e8e90544e8afdc727306,2019-07-20 12:44:56
802,2,True,7,1,1,0,"#### Description
Should resolve coverity issue CID 201703. Ensures that the return value of get_clock_ratio is not zero before doing the modulo.

#### How Has This Been Tested?
Odin pre-commit.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ee5a91e15c9c11de4caf9c9782c892ee45cf6d36,2019-07-20 16:33:42
801,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201637. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",984f5080e47d42d5ab1f4f1095b296a4d0da7509,2019-07-20 06:15:04
800,2,True,7746,292,105,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

**MUST FIX A BUG IN TATUM**
File: libs/EXTERNAL/libtatum/libtatum/tatum/TimingGraph.cpp:
1st change:
```
@@ -335,7 +335,6 @@ void TimingGraph::force_levelize() {
     for(NodeId node_id : nodes()) {
         size_t node_fanin = 0;
         for(EdgeId edge : node_in_edges(node_id)) {
-            if(edge_disabled(edge)) continue;
             ++node_fanin;
         }
```

** SUGGESTION: since edge is an unused variable, we can alternatively set node_fanin equal to the size of node_in_edges **

E.g.
     for(NodeId node_id : nodes()) {
         size_t node_fanin = node_in_edges(node_id).size();

2nd change:
```
@@ -369,7 +368,6 @@ void TimingGraph::force_levelize() {
         for(const NodeId node_id : level_nodes_[LevelId(level_idx)]) {
             //Inspect the fanout
             for(EdgeId edge_id : node_out_edges(node_id)) {
-                if(edge_disabled(edge_id)) continue;
 
                 NodeId sink_node = edge_sink_node(edge_id);

```
1. Added regression tests with the following VPR options:
- verify_binary_search
- Gaussian & Delta channel width variants 
- All supported SDC commands
- Reading pad locations from a file
- Full stats
2. Modified run_vtr_flow.pl and run_vtr_task.pl, that is, ensured the only way for VPR to read an SDC file is by specifying it as a script parameter rather than a target directory to sweep.
As an example in a configuration file for a task:
MUST USE: 
script_params =-sdc_file /sdc/samples/A.sdc (can be an absolute or relative path) 
OR:
script_params = --sdc_file ~/vtr-verilog-to-routing/vtr_flow/sdc/samples/A.sdc (must be absolute path) 
NO LONGER CAN USE:
sdc_dir = sdc/samples (removed all instances from existing config.txt files)
3. Wrote a file F.sdc
4. Corrected pad file path for strong_fix_pins_pad_file, run_vtr_flow.pl now also reads both absolute and relative path for fix_pins.
5. Fixed an existing bug for set_disable_timing.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#531 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
""There are a variety of VPR related options that remain untested. It would be good to come up with fast regression tests which can go into vtr_reg_strong to cover some of these.""
#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Passed the improved strong regression tests.

Planning to run titan.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [X] I have added tests to cover my changes
- [X] All new and existing tests passed
",b3dd99ec9edf7ac70b9fa8927e37dc16645306aa,2019-07-30 19:08:06
799,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201636. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",530e6367d13f91527675fc76f66242cee32ab54a,2019-07-20 06:15:21
798,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201588. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9dea373f43947df57b9a4dbecc78dfd0e9226771,2019-07-20 06:15:37
797,1,True,14,7,1,0,"#### Description
Should resolve coverity issue CID 201418. NULL check before de-reference

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e7b6a3aa27c43c8e4e491ca698307d52924cc83e,2019-07-20 06:16:25
796,1,True,1,0,1,0,"#### Description
Should resolve coverity issue CID 201571. NULL de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9ee1c4a734ec2c193976a2d13e1d817af5af641a,2019-07-20 12:39:14
795,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201528. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c54929ebeab2667f95f5bf0b92f5ce2022d1b463,2019-07-20 06:09:43
794,1,True,2,0,1,0,"#### Description
Should resolve coverity issue CID 201341. NULL de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e0e9bcd4b6b4acf9178ccd503a5e06c2c0216ee7,2019-07-20 12:46:23
793,1,True,15,28,1,5,"#### Description
Should resolve coverity issue CID 201331. Dead code

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",521798476b94631b4a8c9f2493240c6570118c90,2019-07-23 21:51:13
792,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201409. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",706ea142054e066dd5104616ec88254747e0b8a0,2019-07-20 06:05:45
791,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201406. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a9eac44c71e2c4b6cad6f0b25c84dc4ddb0a038b,2019-07-20 06:05:30
790,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201391. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1b2c7879def10fe8e0cd3a5b6a8598233a918f8d,2019-07-20 06:05:08
789,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201333. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",176b9f33cb9d6f56b93d036b74df75c15352d4a0,2019-07-20 06:04:40
788,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201323. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",21b953ab27130ed6c0bf97b00f3af4f17e3dc162,2019-07-20 06:04:25
787,1,True,5,5,1,0,"#### Description
Should resolve coverity issues CID 201313, CID 201395, & CID 201715

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ec2da3a0b0dce4d442a8afc4b1b73c1bfff0130d,2019-07-20 06:04:10
786,3,True,230,135,12,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Add a valgrind regression suite to odin

#### Related Issue
Catch valgrind errors early on

#### Motivation and Context
prevent leak from being introduced

#### How Has This Been Tested?
odin pre_commit test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5fbd7656187cb2a406834ef902eb8098040015f0,2019-07-20 12:37:41
785,1,False,3,3,1,3,"#### Description
Should resolve coverity issue CID 201282. Check if is_node_ready is true before calling the function, as is done everywhere else the function is called. 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",30799334dda80d4b6da1689f2987a87cd04a162a,
784,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201291. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",44cbc41f1260aa5ea3f9bc2356efdfa7c14f5479,2019-07-20 05:59:16
783,1,False,129,134,1,3,"#### Description
Should resolve coverity issue CID 201269. Moved check for done to be in for loop rather than in a nested loop system, because the check would not happen until the for loop was finished executing
Related Issue #817 
#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5d5c34e022bcbac04f9c4c84dcdffd0b992c48ef,
782,1,True,2,2,1,0,"#### Description
Should resolve coverity issues CID 201836 & CID 201280. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8071561bcca10fd77bb912e0b5a5831a7bcaf4b1,2019-07-19 19:34:48
781,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201260

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c3a8e37226fa24cddf7d02f023e957af8d6b4de2,2019-07-19 19:09:31
780,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201244. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b746af9ca9978cb5bf0afaa3f766d1e2e55eedd9,2019-07-19 18:51:48
779,1,True,3,0,1,0,"#### Description
Fixes leak caused by new_name not being freed before the pointer being reassigned

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ff48c43f15334f1618038ca23938e6bc0bbe6786,2019-07-19 18:44:42
778,1,True,1,0,1,0,"#### Description
Should resolve coverity issue 201170. Check that right_inputs is not NULL before de-referencing

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7aee95b321f61d2b9cd9b29834b1cdcc7f2a0cbb,2019-07-19 18:35:12
777,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201233. Need to print the name of the pin; cannot print type nnpin_t

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b3c08f0704875d05659ff48b3f77e1ad436b6c13,2019-07-19 18:19:38
776,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201231. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7cd84f6414cdc87560f58adcb38f476b0bd7eced,2019-07-19 18:19:02
775,2,True,21,7,1,1,"#### Description
Fixes seg faults occurring in adders.cpp when using the chain

#### Motivation and Context
nightly regression run was failing because of this seg faults

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1a52a69e41c220cad3de45271653f5a63dfcc594,2019-07-19 21:51:05
774,1,True,2,2,1,0,"#### Description
Should resolve coverity issue CID 201217. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",00fb323764f05c02e3cbd7885a113780eb0037c4,2019-07-19 17:58:32
773,1,True,2,2,1,0,"#### Description
Should resolve coverity issues CID 201158 & CID 201246

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ee8f4b7ceba152d138c764fb703ffc5aca757125,2019-07-19 17:53:17
772,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201111

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",aff6493b0e4c0c84d5e74ae1d15d36eed10923f6,2019-07-19 17:51:44
771,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201101. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",eb67189c648f7a5a11f852f186205aba40047c79,2019-07-19 17:51:22
770,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201089. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",96a273d70eb52c2ed4578fa325552cdb0aba0834,2019-07-19 17:13:46
769,1,True,2,2,1,0,"#### Description
Should resolve coverity issues CID 201087 & CID 201120. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6d5e65096ecc22e381b812b72f95065bb5c582b5,2019-07-19 17:05:51
768,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 201067. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8e1bcb54a651d5a7ba1c282370ff09a599b2c867,2019-07-19 16:58:26
767,1,True,4,0,1,0,"#### Description
Should resolve coverity issue CID 201059. NULL de-reference

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4b551c150af8dde5066e81390a6a06dfe42d3509,2019-07-19 16:49:52
766,1,True,2,2,1,0,"#### Description
Should resolve coverity issues CID 201404 & CID 201050. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e93260c9ad3cccb008d74c8b0fe1833ebdf5c151,2019-07-19 16:47:40
765,1,True,3,3,1,0,"#### Description
Should resolve coverity issue CID 200985. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6bffcd1e303626c426b2392fb317574f32378f3c,2019-07-19 16:46:52
764,2,True,8,8,1,0,"#### Description
Should resolve coverity issues CID 200978, CID 201345, & CID 201445. Type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",63e2a47abfb7d6f05de61bde84e5667527b3364a,2019-07-19 16:46:07
763,1,True,79,1,1,0,"#### Description
Should resolve coverity issue 200973. Type mis-match. Cannot pass enum to print statement. Added a function to convert enum to string to be able to print. This is the only place in the code where this is an issue, so we could also just remove the print statement if it's not completely necessary to include it. 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",21c6c46b27081dc78111d5fbe4dd69c40fee8c8c,2019-07-19 16:43:51
762,1,True,27,20,1,0,"#### Description
Should resolve coverity issue CID 200970. de-reference bfore NULL check

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8233e9c5f0c70890d8831ee0c134f2a918323e4c,2019-07-19 16:42:27
761,1,True,3,1,1,0,"#### Description
Should resolve coverity issue CID 200944. De-reference before NULL check.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a2554c7ac2de1489ce3e3ef5d19a5933c0215db0,2019-07-19 16:41:32
760,1,True,106,103,1,0,"#### Description
Should resolve coverity issue CID 200914; NULL pointer de-reference. Moved NULL check to be its own if statement and put both other branches inside. If symbol_list is NULL, the fucntion will return NULL.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1f7a80480d46b984a441f53307171a052c06503f,2019-07-19 16:39:58
759,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200886; type mis-match

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c38cc8360c44cf0c47b6d1849d8a9f5f2a52531f,2019-07-19 16:39:08
758,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200858. covered can never be false, therefore the code would never take the false branch

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3018e30707908434fe9cad9ef888d7f5a16d3708,2019-07-20 05:57:22
757,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200833, CID 20053, & CID 201095. Should check that bit is not negative before using it to index into array

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8918d9633456a8c380d518f040bf126580487050,2019-07-19 16:36:23
756,1,True,1,1,1,0,"#### Description
Fix coverity issue CID 200829; type mis-match.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6a985aa2f40484dc47758085b75e5dec9d9ecf19,2019-07-19 16:34:46
754,1,True,375,81,9,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- VPR can now read a parameter to enable detailed timing report.
- A detailed timing report shows all of the routing resources used a net.
- Added three functions:
  1. find_pointer_to_sink, loops through pins in a specified to translate a given ClusterPinId into the index of a node
  2. find_pointer_to_sink_recurr, which traverses a route tree to find a t_rt_node pointer that matches a given index of a node.
  3. get_detailed_interconnect_components, which constructs the route tree from traceback
  4. get_detailed_interconnect_components_helper, which starts at the sink_node and traces the path upwards to the source, adding the detailed net inter-block routing components along the way.
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
#611 
#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
""Providing these additional details makes it easier to debug and understand why certain delays along a timing path are large. Currently, details are found through painstaking manual work.""

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. Ran Titan circuits on squashed commit (will run again to verify):
https://docs.google.com/spreadsheets/d/1vKFbdQCTjVhI_48RmT2gVApWkg2dtjep1hrBYNupOzI/edit?usp=sharing 
2. Ran multiclock circuit on k6_frac_N10_frac_chain_mem32K_40nm.xml:

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",c07271284d5629e325cba2d60a97c8c8f8d56cf3,2019-07-25 19:59:45
753,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200827. Typo; string comparison done on component_s[1] against itself, should've been compared against component_o[1]

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0c0d25baf40a2927c5d2720e1809fa18bd76e92c,2019-07-19 16:33:59
752,1,True,19,15,1,0,"#### Description
Should resolve coverity issue CID 200815; de-referencing a possible NULL pointer

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1969d61b94df785244105974cf3cbcb95c002316,2019-07-19 16:32:51
751,1,True,4,1,1,0,"#### Description
Should resolve coverity issue CID 200780. 
node->types.concat.bit_strings was being freed inside a for loop rather than freeing it's contents.
Would also probably fix some memory leaks

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8ab45e0ecdc0e6c6f8cb187d814c25af05d6347c,2019-07-19 16:26:48
750,1,True,1,1,1,0,"#### Description
Should resolve coverity issue CID 200757, type mis-match.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e36003596878177c9cf76c64018c10c065f2f050,2019-07-19 16:31:12
749,1,True,0,24,1,3,"#### Description

Should resolve Coverity issue 200741 & 200719. Flag is initialized to 0 and never set to 1, but there is an if statement to check for flag ==1. Removed dead code.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",10ee224125eb8b0ec5ccff896629108a12c77336,2019-07-20 05:56:41
748,1,True,43,40,1,0,"#### Description
Should resolve coverity issue CID 200678. Because data is either assigned right_outputs or in_1, and both of those are initialized to NULL, we should check that data is not NULL before de-referencing.

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cb58247a4f6da69e49cdf1c5b9ec0093a0be53cf,2019-07-19 16:28:55
747,1,True,6,6,1,0,"#### Description
Should resolve coverity issues CID 200670, CID 201092, CID 201088, CID 201792.

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",0c0b2f80e2d51fc13f1b8667caa6b35afc587abe,2019-07-19 16:27:35
746,1,True,7,7,1,0,"#### Description
Should resolve coverity issues CID 201176, CID 200703, CID 200661, CID 200897. 

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2252043096a98007b54e6f1a5fce233fb792513c,2019-07-19 16:26:00
745,1,True,4,2,1,0,"#### Description
Fixes Coverity issue CID200634. Ensures that a possible NULL pointer will not be de-referenced.

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c59ec56d4a465c48b0aa312dc7115de5ddf098c5,2019-07-18 18:23:36
744,1,True,4,1,1,0,"#### Description
Fixes leak from temp_string being allocated and not being freed before either being reassigned or going out of scope.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",51ea34450268af890f3449375a38376e2e6bf751,2019-07-18 13:33:59
743,1,True,2,0,1,0,"#### Description
Fixes leak from temp_string being allocated and going out of scope before being freed.

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d37b99565e4832e5710c95fe7ea51011f0611dc3,2019-07-18 13:34:28
742,1,True,2,0,1,0,"#### Description
Fixes leak from array_name being allocated and going out of scope before being freed

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",81cecebc18fe3adc1c240a7aa5a69e02501b8d53,2019-07-18 13:35:11
741,1,True,1,1,1,0,"#### Description
Removed !token condition from if statement, as this code would never be explored with it. Should resolve coverity issue CID 200631

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8ee6d6bd10cca61f71e5f3fe91bf8004cbdd8fc9,2019-07-17 23:45:12
740,1,True,504,127,10,1,"#### Description
Generate blocks were previously only allowed to contain a single for loop without a label; the single for loop was only allowed to contain a single module instance. This has been expanded to allow any legal item (defined in the Verilog standard) within a generate block to be parsed. Nested for loops have been focused on and tested. This expansion also provides a foundation to fully implement generate constructs.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3010fd2b5b8954d4e32190732b040ffeef1e1b28,2019-07-17 19:11:31
739,1,True,11,8,1,0,"#### Description
Added a NULL check on module_instance_name. Should resolve Coverity issue #200639

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",12e68dcca88feff8e4be5732eacb131f7de7e1bd,2019-07-17 19:10:33
738,0,False,0,0,0,0,"#### Description
Fixes coverity issue #200631 due to logically dead code. The dead code was moved outside of the if(token) check to be it's own else statement, that way it can be executed. 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d5d990e7da4cf18dd29d9c94d9b3aae98e966cce,
737,1,True,65,434,4,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
The modules route_tree_timing.cpp performs a task similar to net_delay.cpp. The former conducts incremental timing analysis while the latter completes timing analysis in a single step. It is unsurprising, then, that the two files both heavily rely on a similar tree data structure. In fact, the information included in the node of the net_delay's resistance-capacitance tree is a subset of a node in the route_tree_timing's route tree. Therefore, in this pull request, we have net_delay utilize the route tree data structure and make calls with the appropriate functions.


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change is required to remove redundancies, in alliance with the principles of clean coding.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
1. Passed titan on commit id: 68317ee0637f4535e92328eb51e673e5ef20b8a3 (Planning to rerun on more recent commit id)
2. See results: https://docs.google.com/spreadsheets/d/1_XrX4At2ngdfU4giUyxB6GDBBx1q4Odoxf2UH4SHnDI/edit?usp=sharing
3. Placing free_route_tree_timing_structs() after routing is complete is faster than calling it after each improved routing iteration.
4. See results:  
https://docs.google.com/spreadsheets/d/1bTgADxNZUL1fa6Y8ekz1zHA1NGaXROm7Jfs7dim5Y4w/edit?usp=sharing

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",6cf3a448f47caea533a976d1ccb2b947f527b20d,2019-07-22 19:15:57
736,6,True,2,0,1,0,"#### Description
Fixed memory leak in subtractions.cpp where not_node[i] was allocated and then reassigned without being freed.

#### Related Issue
Issue #622

#### Motivation and Context
Fixes leak when ODIN is run with the following file:

##### Arch
vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml

#####Verilog
sha.v

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",01fede1757ec74b143aaab3eefb9d6c01f91475f,2019-07-17 18:04:18
735,4,True,4,2,1,0,"#### Description
Fixed leak in subtractions.cpp caused by new_name not being freed before being reassigned

#### Related Issue
Issue #622

#### Motivation and Context
Fixes leak when ODIN is run with the following file:

##### Arch
vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml

##### Verilog
sha.v

#### How Has This Been Tested?
ODIN pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1e446c2c535a5d6a19ab326c5ae6c9e3a9040e95,2019-07-17 00:45:16
734,1,True,3,1,1,0,"#### Description
Fixed leak in adders.cpp caused by new_name not being freed before being reassigned

#### Related Issue
Issue #622

#### Motivation and Context
Fixes leak when ODIN is run with the following file:
##### Arch
vtr_flow/arch/timing/k6_frac_N10_frac_chain_mem32K_40nm.xml
##### Verilog
sha.v

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",d35f145c75aacb1a510ceba134f6c495fe5558e0,2019-07-17 00:42:23
730,8,True,6,1,2,0,"#### Description
Fixed memory leak from pin->mapping being set to NULL before being freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",21a7f6f6b6d223ee68914783b386fdce17339b7b,2019-07-17 18:04:01
729,2,True,6,0,1,0,"#### Description
Fix odin leak from create_param_table_for_module function where the temp_localparam_list was being allocated but not freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",50f61f8a40dfb6e443339378696dcc5e2a169173,2019-07-16 15:36:07
728,1,True,2,0,1,0,"#### Description
Fixed leak in create_param_table_for module function where temp_string was not being assigned to anything before having the pointer reassigned, so it should be freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5c36ebba21dc71eeae69284db6ee90468aa793e8,2019-07-16 15:36:11
727,1,True,8,4,1,0,"#### Description
Fixed a bug that didn't allow 2D arrays to get through parsing.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",07ab1c500689ef11449601df179d3ca652f623f6,2019-07-16 15:35:30
726,5,True,50,59,5,0,"#### Description
Fixes coverity issues #201645 & #201657. Should close issue #724 

#### How Has This Been Tested?
Odin pre-commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",64fbd3197cfcb6d0495d4667d1fe462b0026524d,2019-07-16 15:36:46
723,8,True,20,0,2,0,"#### Description
Fixed leak caused by lost pointer to a list of t_multipliers

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5b7ce80447969249d7c0d1351c45f12231510646,2019-07-16 15:37:14
722,4,True,383,106,11,0,"#### Description
Odin currently and incorrectly allows any value or operation to be signed, regardless of where the result is stored. Nets, regs, and parameters must be declared as signed in order to handle signed numbers, which is currently unsupported; otherwise, any value assigned to them must unsigned. In the case of assigning signed values, they must be cast to unsigned.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",4efefcc14f02f324d1ee9d2cc668d60c07233ee4,2019-07-16 12:00:40
721,1,True,7,3,2,0,"#### Description
Fixed two leaks from function instantiations.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8353114bd019b01cc026d30962a21121667fcf07,2019-07-15 15:07:06
720,2,True,12,0,1,0,"#### Description
Fixed leak in match_ports function in adders.cpp

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f0f9c44a30c9829f3db5cb01e88dea634c29b25d,2019-07-16 12:03:11
719,2,True,1,0,1,0,"#### Description
Fixed memory leak in netlist_create_from_ast.cpp from not freeing in_list

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",87ee8cb85f32361c5740a1c394d9177163ead3bd,2019-07-16 12:02:07
718,2,True,13,11,2,0,"#### Description
Resolved node in netlist_expand_ast_of_module before creating pins to make it possible to free the previous node before reassigning in the resolve_node function

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a408529789c2a4a4d9627e9063d6a39e626b3b08,2019-07-12 20:15:21
717,1,False,26,8,3,2,"#### Description
Fixed a couple of leaks from functions, and fixed a sizing issue that caused improper padding.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b2c03171b1722fd87c154cd7e05ea29697ccd5a0,
716,1,False,6,0,1,0,"#### Description
Fixed leak in get_name_of_pins function caused by var_node being resolved

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",f04b3847088a96a611c27684598ad8ff0eb788d8,
715,5,True,1126,848,12,0,"#### Description
Add simple commands to the makefile of odin to run coverage test and different builds without recompiling the whole project.

#### Related Issue
N/A

#### Motivation and Context
Odin makefile was recompiling Odin entirely every time make was called, now only recompiles when flags are changed and / or there is a file change.

Also this adds flags to run coverage tests and report on odin, also adds more stringent warning flags on demand to Odin only to help debugging.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5ed6b38dc26fba3f137f8a99e64f5013fc986bf7,2019-07-12 18:08:45
714,2,True,1693,1734,12,0,"#### Description
Restructured string caches so that they aren't global, to be able to properly size numbers; also fixed a majority of memory leaks.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",12eff1028f4dcea8bef41bb6e0b4f54164464ad8,2019-07-11 17:45:02
713,1,True,10,9,5,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR follows changes in https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/93640d35613d989faea6c015c548be12bf76ce93.
It changes some VPR_THROWs to VPR_ERRORs to make them non-fatal and allow their disabling from command line.

An additional change of this PR is related to the usage of `__PRETTY_FUNCTION__`.
It is utilized only when displaying the error (demoted to warning), not for discerning what ERRORs need to be treated as WARNs, as the pretty function adds additional information to the string which, once compared with the function names of the command line option, cannot produce a match (making it impossible to demote errors to warnings from cmd line).

With this change, if g++ version is previous 99, __func__ and __PRETTY_FUNCTION__ in `vpr_throw_opt` function will have the same content, but it is necessary to duplicate them to make it possible to correctly compare the name of the calling function with the function name provided from cmd line.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
As some VPR_THROWs can be treated as non-fatal, some of them should now be changed to be VPR_ERRORs instead.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4eefe0d7954c3fa3264680372e61aa1add1ddf52,2019-07-11 16:19:27
712,1,False,5,6,1,1,"#### Description
This function was returning before reaching the free call, so the call was moved to be above the return call.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",63831cd2fbf72c5967653cffffdf9e8e1d1675f9,
711,15,True,685,219,25,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
add the possibility of having strings as an array of int

#### Motivation and Context
Add support for strings in Odin

#### How Has This Been Tested?
rtl-it unit tests, odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",9f53b929985e5d34bf5b8b297011feab31e3d514,2019-07-12 17:54:58
710,19,False,1109,104,36,4,"#### Description

Bind ``--read_placement_delay_lookup`` and ``--write_placement_delay_lookup`` to SerDes (implemented using Cap’n Proto).

#### Motivation and Context

See justification in https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/707

This PR has predecessor PRs:
 - #707 
 - #708 
 - #709 

#### How Has This Been Tested?

Unit testing on SerDes, and some integration testing with Symbiflow.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",78257808a6078bbb42100fff9358a61f4fabd2e1,
709,1,True,11,3,1,0,"Also convert forwarding version of constructors to require r-value
reference (and avoid potential copy).
",66a3d9234605edc39977127c1e10796ded867846,2019-07-22 21:33:54
708,1,True,11,0,1,1,Flat accessors are useful for serialization (see #707).,e2b4a2be972344df73635a05f24e3a172ec296c4,2019-07-22 19:55:13
707,9,True,490,96,22,12,"#### Description

This PR restructures the router lookahead and placement delay objects to enable several goals:
 - Properly encapsulate existing functionality behind virtual interfaces
 - Provide command line arguments and virtual methods to read and write the router lookahead and placement delay objects
 - Avoid reconstruction of the router lookahead object during placement delay lookup

Once this PR is merged, a followup PR will be submitted to implement the read/write methods with a proposed serialization format.

#### Related Issue


#### Motivation and Context

The router lookahead computation and placement delay matrix computations can take a fairly significant amount of time.  For example (take from one of the titan bench marks, ``stratixiv_arch.timing.xml/gsm_switch_stratixiv_arch_timing.blif``):

```
## Computing router lookahead map
## Computing router lookahead map took 862.39 seconds (max_rss 7998.8 MiB, delta_rss +0.0 MiB)
# Create Device took 1146.56 seconds (max_rss 7998.8 MiB, delta_rss +1742.6 MiB)

# Placement
## Computing placement delta delay look-up
RR graph channel widths unchanged, skipping RR graph rebuild
### Computing delta delays
### Computing delta delays took 5395.12 seconds (max_rss 17405.8 MiB, delta_rss +9407.0 MiB)
## Computing placement delta delay look-up took 5396.87 seconds (max_rss 17405.8 MiB, delta_rss +9407.0 MiB)

...

VPR suceeded
The entire flow of VPR took 16719.29 seconds (max_rss 19437.3 MiB)
```

In this example, the router lookahead map computation took ~5% of the total runtime, and the delay matrix lookup took ~33% of the total runtime.  In terms of wall clock time, taking ~2 hrs before starting placement is less than ideal, especially if parameter tuning is being attempted.

#### How Has This Been Tested?

In theory this change is simply a refactor, so existing tests should pass with zero or minimal runtime impact.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",34a2705a63a74e1b15f567c1493978e38c35645f,2019-10-02 16:09:29
706,54,False,10608,1175,56,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- updated the graphical data structures
- ported all VTR graphics from easyGL to EZGL


#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
- EZGL provides a more advanced user interface 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
- ran through performance tests to compare with the original easyGL version
- test results: https://1drv.ms/x/s!AoZE0vE213UDijpKIz87FW72UAc5

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Feature update
#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",b1c0ab10b3176326c363764ae8212ece1273d750,
705,1,True,1,1,1,0,"#### Description
Fixed leak caused by alias_name being unnecessarily duplicated using vtr::strdup and then not being freed. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9b09c38960f6c267b665d5faf8d8adf732b53f2a,2019-07-09 03:52:04
704,1,False,23,2,2,1,"[WIP] Add ODIN_II parser support for unsynthesizable C macros

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
These changes are meant to enable proper parsing of unsynthesizable/unsupported c macros in the future (this code cannot be integrated right away).

#### How Has This Been Tested?
This has been tested with a .v file modified to include a call to fopen(). No other testing has been performed yet.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4888027f70d2cbe474920d8f8a527cc7381752df,
703,3,True,211,6,2,0,"#### Description
Cleaned up memory leaks in ast_util.cpp and netlist_create_from_ast.cpp caused by calls to resolve_node.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",6928e5be8d408a0104fd9a1dcb679538ea9dbe93,2019-07-05 17:52:14
702,1,True,51,47,2,0,"#### Description
Fixed a bug that caused the AST tree to be built incorrectly when declaring inputs and outputs outside of the port list.

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1235dce388f78b2afde3e70eefd044c539406844,2019-07-04 20:20:16
701,1,True,1,1,1,0,"#### Description
Removed new operator from VNumber constructor 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3bd835bf9f90f2efcf6f1227c72f47c4a767544f,2019-07-04 20:18:05
700,3,False,1,1638,2,0,"#### Description
Removed new operator for VeriBits, which was causing many valgrind leaks

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",37637cf0cc15255e93bb15f558948a4de8831c64,
699,1,True,641,692,50,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
add missing ifdef guard
switch boolean macros to stdbool
use c++ style enum and structs

#### Motivation and Context
things are included without being explicitly asked for, and need to remove externed value

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",51d56072f40327b3f0c77b610e8a501d70af0d6b,2019-07-05 17:03:27
698,1,True,14,14,3,6,"#### Description
The internal numerical structure in Odin was changed in order to support unknowns (x) and high-impedance (z), and to support new language features requiring x and z support. As a result, QoR results changed.

The vtr_reg_qor_chain, vtr_reg_qor_chain_depop, and complex_switch regressions were those affected. Results were changed for bgm.v, diffeq2.v, LU8PEEng.v, LU32PEEng.v, and stereovision2.v. LU8PEEng.v and LU32PEEng.v yield better QoR results, while bgm.v, diffeq2.v, and stereovision2.v produce worse QoR results.

Note: Running the nightly regression on my local machine does not produce the same results as those on BuildBot, so I copied/pasted the results from last night's run on BuildBot, as this was the only solution I could come up with.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",8d5ec34a0a3d8741cbc0bbde8beb02b5bf4850d8,2019-07-18 16:26:47
697,1,True,18,36,1,0,"#### Description
Fixed problem with the file path not being properly copied with recursive includes.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",2e875c86b2ccd0aff94243cb5f4032d0b0d483e6,2019-07-04 04:24:45
696,1,True,1,276,3,0,"#### Description
Removed code that was to do with brackets (obsolete) and parameters (handled somewhere else in the code).

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",56fbc70b99f995c6909a01d0a79dee33ddc5ddc6,2019-07-04 01:10:37
694,2,True,6,5,1,0,"#### Description
Updated number resizing from expression resolution to accurately reflect the Verilog sizing standards.

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",db09cd8b0fb4d8c342ce7bdb21d3c41363b67a6b,2019-07-03 17:39:27
693,1,True,21,13,4,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is to make optional the noisy warning output file optional (given that it could slow down run-time if VPR is launched on a HDD-provided machine). This is a PR related to the already merged https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/672 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Outputting the suppressed warning on dedicated file could slow down run-time for machine mounting HDDs instead of SSDs.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ea325b82e2fb89867e3ba203d4a2014aa80904ae,2019-07-04 20:20:59
692,2,True,8,8,2,1,"correct typos

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",af4a4edcbdd7bdb60310a231a8a28efcba520f4f,2019-07-22 14:54:08
691,2,True,16,5,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR solves an issue in the `qor_compare.py` script, for which, if there is a `parse_result` file which name starts with '0', the references in the `ratios` stylesheet are not computed correctly (as the starting 0 gets chopped-off, at least using LibreOffice when opening the `xlsx`).

Another thing is that now, if the input `parse_result` files are located in a different folder, the style sheet names will not contain the whole path, but only the filenames. 

It also solves an issue related to the TYPE_NUMERIC macro which is not found, hence ending in a fatal error.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/652

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
There is a need of manually changing the script (for the TYPE_NUMERIC issue) or be aware of the name of the parsed results files, which could be avoided with these changes.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b9263d9bcb954d654702466de034190f37eee258,2019-07-06 08:08:37
690,2,True,74,46,3,0,"#### Description
Fixed a comparison bug in the lookup tables.

#### How Has This Been Tested?
Odin pre-commit regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cd90e80a340e43023b67ebcb53c565eb7e1f1ff6,2019-07-03 14:33:33
689,2,True,6,6,2,1,"correct typo

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ef674b3239b06cee811046b9c5b9bc99e9c94d17,2019-07-02 13:08:26
688,1,True,127,89,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Fix compile warning about unused globals in the RTL int library

#### How Has This Been Tested?
odin pre_commit
rtl regression test

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",99f5ef0e99284e5b9c3af7a86b16bd35c35039c5,2019-06-29 03:38:13
687,1,True,8,0,1,0,"…_creat_from_ast.cpp

#### Description
Fixed memory leak in define_nets_with_driver function in netlist_create_from_ast.cpp

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",eb3a14117771504ae011420570becbbefc52d1a6,2019-07-04 03:27:10
686,5,True,492,113,10,3,"#### Description
This fixes issues with improper concatenation and replication, and adds checks to ensure that concatenation operands are valid. This also properly sizes results when evaluating operations.

#### Related Issue
closes #101

#### How Has This Been Tested?
Odin pre-commit regression suite


#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2f071998e92fb5a199b15f38586b7cd5c0d9ea9d,2019-06-28 20:10:08
685,3,True,7,1,1,0,"
#### Description
Fixed memory leak in get_name_of_pins function in ast_util.cpp where rnode[1] was not being freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4c00e0b1679f6f67f63edc209040bb9c1692925f,2019-07-04 03:42:37
684,2,True,7,0,1,0,"…from_ast.cpp

#### Description
Fixed memory leak in assignment_alias function in netlist_create_from_ast.cpp where ""right"" was not being freed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c446433370b3a41c465dcf6d466acba01b950ea9,2019-07-04 03:24:44
683,1,True,2,0,1,0,"#### Description
Fixed memory leak in get_name_of_pins function in ast_util.cpp where sym_node was not being freed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b9c5af9b8e131c6eabc5dac6352e351756df9d2b,2019-07-04 03:23:45
682,1,False,8,8,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
recent change in odin resulted in broken qor

#### Related Issue
n/a

#### Motivation and Context
update qor result since odin now does not drop important signals

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",21b58e75552fb0da223ba3e9a86bb04fb943ca3f,
681,1,False,4,0,1,0,"#### Description
Fixed memory leak in get_name_of_pins function in ast_util.cpp where rnode[1] was being allocated but never freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",24940345b584d1c160790d5dd8d8108b78ed8a8b,
680,2,False,248,169,14,0,"merge case with if, add if support in resolve_node and solve these nodes ahead of time in netlist create

#### Description
builds the case as an if statement, add support for if and ifQ in resolve node
resolve signals in always blocks

#### Related Issue
n/a

#### Motivation and Context
reduce the circuit size if some constant can be evaluated ahead of time

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",dc88c5fb2ca7b1bf6635594797ad3d859ce5a644,
679,1,True,41,7,1,0,"
#### Description
Stop current compile warnings from being thrown

#### Related Issue
issue on buildbot

#### Motivation and Context
keep the buildbot compilation clean

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",36cf3db8a9cc1d81d1b954f3f7fdaa947b401775,2019-06-28 12:45:12
678,2,True,63,1,4,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This change allows resolve_node to be aware of the ternary operation and fold these if they can be reduced.

#### Related Issue
N/a

#### Motivation and Context
Allows resolve node to have a broader coverage for constant folding

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b5e3fe6a5d07c68cb265a4c5025c43786af4913d,2019-06-28 12:36:02
676,2,True,19,15,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
fix compile error for odin

#### Related Issue
compile error

#### How Has This Been Tested?
odin pre_commit

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",588a35b3650a846a51edaab9d5b2d5379e890ca2,2019-06-27 18:24:54
675,26,True,1577,2387,35,0,"#### Description
The RTL number library replaces the old number system in Odin and allows for further expansion involving new number support. Node resolving was also improved.

#### How Has This Been Tested?
- Odin pre-commit and pre-merge regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4266c01e52f0492809d6e9a7c32a52a81cce7adc,2019-06-27 17:09:32
674,3,True,273,106,15,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Motivation and Context
fix leak on arg_parse
double free guard to be used later

#### How Has This Been Tested?
odin pre_merge

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",af27d08078513180b03affe937b734697103890a,2019-06-27 19:44:56
673,2,False,24,2,1,1,"#### Description
Fixed memory leak in get_name_of_pins function in ast_util.cpp where sym_node and it's contents were not being freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",bf210d493f5951b7e6e709e2eabba41a03611f8b,
672,1,True,174,21,12,2,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the functionality to do the following:
- Disable errors by demoting them to warnings;
- Suppress noisy warnings and redirect them to a custom file.

To enable this feature there are two new command line options:
- Warning suppression:
```
--suppress_warnings <output_filename>,<func1>:<func2>:<func3>
```
If the `<output_filename>` is not provided the warnings will be output on stdout as usual.

- Error disabling:
```
--disable_errors <func1>:<func2>:<func3>
```

`<funcN>` is the name of the function for which the warning/error will be suppressed/disabled, therefore, if a function name is specified in the list, all its warnings/errors are going to be disabled.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
There are two different reasons why this PR is needed:

1. There are some errors (`VPR_THROWs`) which prevent development from going further and, instead of changing the `VPR_THROW` into a `VTR_LOG_WARN`, it would be very handy to have a mechanism as the one proposed in this PR;
2. It often happens that some warnings are repeated thousands of times and are related to the same issue. This results in having a hard time reading the output logs to find possible bugs.

A note is that these command line options should be used only if the reason behind the disabling/suppression of an error/warning is clear to the developer.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",efaf4e2c86e45507384ee600c3841874a979a180,2019-07-02 09:41:41
671,2,True,1,1,1,1,"#### Description
Fixed memory leak in create_hard_block funtion in netlist_create_from_ast.cpp where the children of in_list were being freed, but in_list itself was not.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",079c134e4145723d04536418f05b0c2b1e5f76bb,2019-06-27 00:17:54
670,1,True,1,0,1,0,"…tion in netlist_creat_from_ast.cpp

#### Description
Fixed memory leak in create_soft_single_port_ram_block funtion in netlist_create_from_ast.cpp where the children of in_list were being freed, but in_list itself was not being freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",4922d1447f8bd112956bba1084e58d47b571846d,2019-06-25 22:46:33
669,1,True,1,1,1,1,,d327ebb5bb65b70f45eeb7be3d931dfb53f5d8c1,2019-06-25 18:27:41
668,1,True,53,31,2,0,"…n and get_hard_block_model function in read_bliff.cpp

#### Description
Made changes to the add_hard_block_model and get_hard_block_model functions in read_bliff.cpp where certain benchmarks were causing ODIN to segfault due to uninitialized pointers and not checking for NULL pointers before attempting to access the pointers.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",42370e01be4f10c9c26b309b3ef25c99153eb90c,2019-06-25 22:45:29
666,1,True,577,541,10,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
This fixes issue #64 via the removal of the freopen on tempfiles and also use a single pass preprocessor.

getline, trim and whitespace removal in one function to be used by the preprocessor

#### Related Issue
closes issue #64 

#### Motivation and Context
fix issue of freopen on tmpfile

#### How Has This Been Tested?
full regression suite, basic and strong

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",97efab60f221f524f5464e04994d114e31c39463,2019-06-27 18:40:38
665,1,False,3,1,1,1,"…rs.cpp

#### Description
Fixed memory leak in add_the_blackbox_for_mults function where the t_multiplier pointer was being overwritten before the previous block was being freed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",c08c47e63685c526ba9601dd6621b40bfeb198a8,
664,1,False,16,11,1,4,"Signed-off-by: Keith Rothman <537074+litghost@users.noreply.github.com>
Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the possibility to treat a `VTR_LOG_ERROR` as a `VTR_LOG_WARN` by using the dedicated `--strict_check` option.
Specifically, the error is related to placement timing checks (when the placer algorithm is timing driven).

The same error treatment is performed here:
https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/35d10363c0be6d8d36f64839894026a0b389c4ba/vpr/src/place/place.cpp#L974-L986

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change is needed as during development, this kind of error prevents to go further in the VPR execution process (even though it should be treated and corrected accordingly).

Probably it will be solved if correct and complete timing information are added to the architecture, but in this way the error checks are more relaxed, allowing for a faster development.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",98534f8f11c615abebc1ce9153d8fd62aab0f43c,
663,1,True,2,0,1,2,"…_create_from_ast.cpp

#### Description
Freed the signal_list_t in_list. The objects held by in_list were being freed, but in_list itself was not. This has been fixed.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",c788371513276782b55be5a7bdcd82b7b80ae51d,2019-06-20 20:33:43
662,1,True,3,0,1,1,"…ate_from_ast.cpp

#### Description
freed the allocated string full_name before the pointer was updated so that it would not be lost.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",24efe2d59af4a0e4e9d3bb6b70dcfae22cfff2d0,2019-06-20 20:32:51
661,1,True,32,4,4,2,"#### Description

Previously only one FASM feature could be specified per mux selection.  In some cases, it is convenient to specify multiple features.  This PR enables multiple features to be specified, while being backwards compatible with the previous syntax.

#### Motivation and Context

The case that motives this change is using features in ""passthrough"".  There are couple examples of this in the 7-series arch.  The first is the ""BUFHCE"" pass-through.    This requires two features:
```
BUFHCE_X0Y0.IN_USE
BUFHCE_X0Y0.ZINV_CE
```

So if the BUFHCE is in passthrough, both features must be set.  No additional routing is required in this case because by default the pin CE == 1, and by default the inverted on the CE IPIN is enabled, e.g. held in reset.  These two features enable the use of a particular BUFHCE (e.g. connecting the input  clock to the horizontial clock network).

The other example is using the FF in a SLICEL as a passthrough, which requires:
```
AFF.ZRST
AFF.ZINI
LATCH
CLKINV
```

#### How Has This Been Tested?

A unit test has been written and testing has been down with symbiflow integration cases.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",3fac975264209f1685de515ca5172b0a433f3623,2019-06-20 19:02:36
660,1,True,42,24,1,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
remove memory leak from instantiate_hard_multiplier, where it would lose the initial malloc'd new_name.

#### Related Issue
odin memory leaks

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",00825b39f8f4d4dc61eb6a9ee76984af8e2f3705,2019-06-20 13:52:23
659,1,True,2,0,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds an additional comment on how to enable the parallel workers.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
If `libtbb-dev` is not installed in the system, parallel workers are not enabled. Therefore, a more explicit comment on the docs helps in getting the end-user to set-up the system for parallel workers builds.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Docs update

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",890678196999a844e70fd424c6923a2c97894964,2019-06-19 13:42:38
657,1,True,193,11,7,1,"#### Description

This timing report provides insight into how the packer criticality
values were computed.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/653

#### Motivation and Context

Provides insight into pre-pack timing analysis.  Timing report has already reveal at least one potential issue https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/653#issuecomment-502840460

#### How Has This Been Tested?

Generated new timing report on several designs.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",07006af00bbc522d7dbd6838177bb49a19fd0ea1,2019-06-18 19:33:47
656,1,True,14,12,3,1,"#### Description

This will be used to add timing report outputs other than the final
post-route report.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/653

#### Motivation and Context

This allows the report generation functions generate_setup_timing_stats and generate_hold_timing_stats to be invoked by multiple callsites without colliding on the file names.

#### How Has This Been Tested?

Compiles and CI should pass once https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/655 is resolved

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5c15b28ef924fb8a5c5b23b191d8c11ae0bd845c,2019-06-18 19:31:55
651,1,False,1,1,1,1,"<!--- Provide a general summary of your changes in the Title above -->
resubmission of pull request
modification of hard coded file pointer augment in line 1836

#### Description
<!--- Describe your changes in detail -->
modification of hard coded file pointer augment (power_ctx.output->out) -> fp

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [v] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",15313b6d26e0e7df9236232321bc1b0e3d78e69e,
650,5,False,3,2,1,1,"<!--- Provide a general summary of your changes in the Title above -->

modification of hard coded file pointer augment in line 1836


#### Description
<!--- Describe your changes in detail -->
modification of hard coded file pointer augment (power_ctx.output->out) -> fp


#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",74e6573d4ed1db1182707ab3202c2f94c7c8b8b5,
649,5,False,570,15,21,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
The procedural continuous assignments or PCA(using keywords 'assign' and 'deassign') are procedural statements that allow expressions to be driven continuously onto variables or nets.
The assign procedural continuous assignment statement shall override all procedural assignments to a variable. The 'deassign' procedural statement shall end a procedural continuous assignment to a variable. The value of the variable shall remain the same until the variable is assigned a new value through a procedural assignment or a procedural continuous assignment.

#### Motivation and Context
ODIN_II is an FPGA CAD synthesis compiler which accepts Verilog design as an input. For this reason, it needs to support all keyword in the Verilog language.

#### How Has This Been Tested?
adding some new testbench to ODIN for test the new keywords.
add this operator to the existing test benches.
These tests consist of one and more than one always block, one PCA and if blocks with more than one PCAs.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",0927d27366d0b487d781a5bb6cc604114d1efe44,
648,3,True,73,13,3,2,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the possibility to allow channel segments to have non-consecutive ptc.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
More information about the issue can be found here: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/606

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
SymbiFlow architectures do have channels which have non-consecutive ptc, generating an error while reading the RR graph. More specifically, the lines that produce the issue are the following:
https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/411331f32b286273ed06eb4e4171c62c700e6f76/vpr/src/route/rr_graph_reader.cpp#L748-L777

#### TODO
Track all the places where `PTC` is used for getting the node information.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",5de6fdf4361031af03d77c8b733354e0c6d06dcb,2019-06-13 19:45:54
647,1,True,62,36,1,4,"#### Description

Currently delta matrix may have IMPOSSIBLE_DELTA elements after sampling.  If the placer requires a delay using these elements, it will corrupt the slack computation, resulting in an exception or assertion failure.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/563

#### Motivation and Context

This PR generalizes the nearest neighbor algorithm to have a flexible distance parameter, and then adds a pass to the placer delay matrix computation where IMPOSSIBLE_DELTA are filled using a nearest neighbor average (up to 5 Manhattan distance).

#### How Has This Been Tested?

Some integration testing with Symbiflow has been done, but nothing substantial.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",cc9881834a053fcffd021ddaa2c4269e08e2ce65,2019-06-25 21:23:15
646,2,True,388,28,16,6,"#### Description

route_diag is intended to be used to probe router behavior and explore
interconnection delay behavior.

#### Related Issue

Used for exploring #592

#### Motivation and Context

The quality and behavior of the router lookahead and placer delay matrix are important to QoR, but current diagnostic flows are tied within an existing flow (e.g. place or route a circuit).  This tool allows running relevant flows without tying it to a circuit.

This can be used to diagnose router and placer inputs independent of flows.  The delay profile can be used to compare A* factors on a given graph, and compare delay grids for different rrgraphs on the same architecture grid.

An additional desired feature is to provide diagnostics on the A* heurstic, e.g. compare predicted forward cost vs true forward cost.

#### How Has This Been Tested?

Changes to main VPR should be limited to moving some functions from static to non-static.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b736302e2794d5faa4f15eff526831b814ddedaa,2019-07-24 23:17:17
645,1,True,4,0,1,1,"#### Description

Previous code would allow for integer overflow, resulting in negative indices or alias other cost indicies.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",a76ffe5003586cd675c3e0c2489b2bbd288b083b,2019-06-18 20:09:55
644,3,True,13,4,2,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is a little enhancement to have the different pb_type classes enum easy accessible in an array structure. There is also an index addressable array to get the name of the class as a `const char *`. 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Better access capability to the `e_pb_type_class` enum.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",28b310e9e18db5ba2e01c16b238a6a112af2b2bd,2019-06-19 14:11:37
643,1,True,21,6,5,18,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
In the [SymbiFlow](https://github.com/SymbiFlow/symbiflow-arch-defs) architectures, some of the tiles do not have combination sinks. This fix is needed to allow the architecture to have no combination sinks for specific tiles. Without this addition, the Timing graph builder would produce a `tatum` error and the failure of the VPR flow.

It may be better to have this fix under a command line option (e.g. --allow_non_combination_sinks). 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Avoid Tatum error while building the Timing Graph within VPR.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",e3d8b21cb3cac91d96e797b2de382dc93d5fa14d,2019-07-22 19:54:22
642,5,True,2358,416,15,0,"#### Description
Added support for port types and net types in module declaration as well as inline parameter declarations.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/605

#### How Has This Been Tested?
odin pre-commit regression suite

#### Types of changes
- [x] New feature (change which adds functionality)

#### Checklist:
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",fd4c7e55e3d82e73d63aee7d8ae17a316dffe31b,2019-06-07 16:23:21
641,1,True,9,4,1,0,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR is a fix related to the fasm util. It changes the way the metadata is read in the `read_xml_arch_file.cpp` file. This fix does not affect any VPR functionalities.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The fix is needed as some of the fasm features are incorrectly parsed, leading some of the SymbiFlow tests to failure.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7031464668b5fcc7af0da406939fd211ca31a678,2019-06-07 13:36:00
639,9,True,152,77,10,1,"#### Description

This contains a handful of fixes to the genfasm tool.

#### Motivation and Context

The initial genfasm tool had some bugs around route walking, some FASM prefix construction, and clock pins.  This resolves those issues.

#### How Has This Been Tested?

Unit test and integration testing with symbiflow

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",0548a232d32632b9f82ab3c13ccf2d0947322eb8,2019-06-06 21:11:54
638,14,False,478,75,15,6,"<!--- Provide a general summary of your changes in the Title above -->
Added support for the `while` keyword in Odin II.

#### Description
<!--- Describe your changes in detail -->
Added support for while nodes in the Verilog AST and added an environment based evaluator to statically unroll them. Added a simple while loop test to ensure this works correctly. 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Closes #637 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Improves Verilog 2005 language coverage for VTR

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Odin II `pre_commit` test has been run successfully, a new test has been added to the Odin II test suite to test the `while` keyword. The `pre_merge` tests are yet to be run.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed",c9e1a7b16bf8133129b4c407504958f58a29f77a,
636,1,True,2,4,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Fix ln failing in verify script

#### How Has This Been Tested?
pre_commit odin
vtr_reg_small
'' basic
'' valgring_small

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ x ] All new and existing tests passed
",b6b2d8e41a539f0508fbd8dcad3dcb37415db757,2019-06-07 16:34:17
633,3,False,94,15,4,9,"#### Description

This pull request extends the pull request #619 to check VtR's compatibility with other toolchains. As this requires a larger number of jobs, they are only run once the normal set of tests have finished as a final stage. See the screenshot below;

![image](https://user-images.githubusercontent.com/21212/58858350-36710300-865c-11e9-9af5-574226f9b7a2.png)

Make sure to merge https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/619 first.

#### Related Issue

 * https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/629
 * https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/628
 * https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/625
 * https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/595

#### Motivation and Context

Motivation found in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/595 and https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/625
",f59cb63a5da1449f8f55ff884133af0963d1dcee,
631,2,True,106,285,6,1,"#### Description
Fixed a bug where lines were being read from .v files into a fixed-size array, and so lines that went beyond the array size would split. Lines are now read in dynamically to solve this.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/597

#### How Has This Been Tested?
odin pre-commit regression suite
local tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)",b12b2c72fd8d889ee8ebc2413713990dc7d9a4f0,2019-06-03 17:48:28
627,1,True,66,80,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description

Merge resolve node with some constant folding functions

fix edge sensitivity not being properly read from a blif

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",f5780d5e6731b945eced7655e18c0b844bdcddb1,2019-05-31 03:45:16
626,5,True,25196,650,58,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Improve the benchmarking script capability by being able to only run failed benchmarks and debug with gdb interractively

improve some error messages

include the FIR benchmarks with vectors

supercedes #596

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",0c2d3102e0cd9772d5089a7c5b8e28dd3318e53f,2019-05-31 01:31:01
619,14,True,198,183,20,15,"#### Description

This change split travis build into multiple stages. They are;

 1) Build VtR
 2) Then test in parallel;
   * Code Formatting
   * C++ Unit Tests
   * Basic Regression Tests
   * Strong Regression Tests
   * Basic Valgrind Memory Tests
   * ODIN-II Micro Tests
   * ODII-II Operator Tests
    
 Travis will run up to 5 jobs at once.
    
This **significantly** reduces the time required for Travis to complete.

The change also;
 * Runs the code formatting in parallel with other tests, gets you feedback faster.
 * Enables support for ccache which significantly reduces the build time for ABC (build time is now under 10m, averaging roughly 5m).
 * Supports a build output outside of the source directory.

Example output on travis now;

![image](https://user-images.githubusercontent.com/21212/58597928-fdd1c380-822e-11e9-91d6-1b21568104d6.png)


#### Related Issue

 * #300 
 * #595 

#### Motivation and Context

 * Makes travis run faster.
",034d34e17d7debb7af8b818791c77ba14838bb01,2019-06-04 14:05:53
616,2,False,9,3,2,2,"#### Description

Fixes the currently broken fasm unit test and makes it run on travis. They were failing due to missing newlines, see below;
```
./utils//fasm/test/test_parameters.cpp:19: FAILED:
  CHECK_THAT( params.EmitFasmFeature(""A"", ""0""), Equals(""B=1'b0"") )
with expansion:
  ""B=1'b0
  "" equals: ""B=1'b0""

./utils//fasm/test/test_parameters.cpp:20: FAILED:
  CHECK_THAT( params.EmitFasmFeature(""INIT_0"", ""10100000000000000000000000000001""), Equals(""INIT[31:0]=32'b10100000000000000000000000000001"") )
with expansion:
  ""INIT[31:0]=32'b10100000000000000000000000000001
  "" equals: ""INIT[31:0]=32'b10100000000000000000000000000001""

./utils//fasm/test/test_parameters.cpp:21: FAILED:
  CHECK_THAT( params.EmitFasmFeature(""INIT_1"", ""00010000000000000000000000001001""), Equals(""INIT[63:32]=32'b00010000000000000000000000001001"") )
with expansion:
  ""INIT[63:32]=32'b00010000000000000000000000001001
  "" equals: ""INIT[63:32]=32'b00010000000000000000000000001001""
```

#### Related Issue

 * Fixes https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/610

#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",e802810cce9a4f1b758e4988057fb57a4cb00809,
615,1,True,3,3,1,0,"#### Description
Allows tri, tri0, tri1 to be parsed as wires.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/605

#### Types of changes
- [x] New feature (change which adds functionality)
",010f884e8d19a80c352506a3f8afef72adfa5892,2019-05-28 21:16:02
613,2,True,38,20,4,1,"#### Description
Fixed a bug that prevented input/output declarations to include a data type (i.e. output reg, input wire, output wire).

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/603

#### How Has This Been Tested?
odin pre-commit regression suite
new syntax test
local tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",d58e8bf0415a6aa4419584e396349921aede1383,2019-05-28 21:15:49
612,7,True,97,10,6,1,"#### Description
Fixed a bug where localparams were treated as parameters, which mistakenly caused them to be capable of being overridden.

#### How Has This Been Tested?
odin pre-commit regression suite
local tests

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",6cbbbae56c35bfac6399d4fae596fb541cf76f63,2019-05-28 21:15:21
609,8,True,1165,372,40,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Update the simulator to use batch simulation in parallel
Update the multithreaded simulator ( was running waves of the simulation twice)
Update the verify Odin script such that it can use perf for benchmarking the simulator
Update the verify script to use absolute path and to redirect the run to a new directory
Fix hard block names and module name collision in Verilog file
Add support for a user-defined top module.

#### How Has This Been Tested?
odin_full_suite
vtr_reg_basic
vtr_reg_strong
vtr_reg_valgrind_small

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x ] Bug fix (change which fixes an issue)
- [ x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ x ] I have added tests to cover my changes
- [ x ] All new and existing tests passed
",3d22d44f70bc5915256fa7c6493a38aa5d88d01b,2019-05-27 02:34:48
608,12,False,49397,50896,350,1,Run `clang-format-5.0` over the VtR codebase and make sure that the code base continues to stay style compliant.,a0f5b8cf0963c04a9f89c079b063c7087347d415,
607,44,True,136,28,9,6,"#### NOTE

-  kmurray has requested that I open the pull request for immediate inspection.
- Of the seven architectures, only mux_u and mux_s have finished the tests for the modified code, the rest have not completed.
- To note, the pass_gate has been stuck for 40 hours on the first circuit
- Other architectures are stuck on later circuits
- Attempting to run the qor results for the unmodified code
- Tree test to follow




#### Description
- Add new Cinternal element to the architecture xml for a switch definition
- Loaded elment into the t_switch_info data structure
- Updated the src/route/route_tree_timing code that computes the delays of partial routing trees during routing
- Updated src/route/net_delay.c (used to non-incrementally find the delay of routes) to also understand this fanout-based delay
- Add the extra delay due to a fanout when you turn on a switch in router wave expansion
- Added to developer tutorial

#### Related Issue
Addresses issue #550 https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/550

#### Motivation and Context
Improvement on the current model for capacitance and switches.

#### How Has This Been Tested?

1. Created 7 different architectures and specified internal capacitances accordingly.
- mux_specified_tot (k6_frac_N10_mem32K_40nm.xml with internal capacitance)
- mux_unspecified_tot (k6_frac_N10_mem32K_40nm.xml)
- tri_specified_tot (k4_n4_v7_bidir.xml with internal capacitance)
- tri_unspecified_tot (k4_n4_v7_bidir.xml)
- pass_unspecified_tot (k4_n4_v7_bidir_pass_gate.xml)
- short_unspecified_tot (shorted_flyover_wires.xml)
- buffer_unspecified_tot (buffered_flyover_wires.xml)
Internal Capacitance Values:
3.85e-15 = 5x Cin for multiplexer 0 in mux_specified, ~2x Cin muliplexer ipin_cblock
3.85 e-15 « Cin (1.537e-14,1.191e-14) « Cout (2.193e-13) for tristates 0 in tri_specified and
Cout (0.) « 3.85e-15 « Cin(1.191e-14) for multiplexer ipin_cblock in tri_state

2. **Running** them against the list of circuits specified in https://docs.verilogtorouting.org/en/latest/dev/developing/#evaluating-quality-of-result-qor-changes.
3.  **Comparing** the results between the modified and unmodified code.
4. **Measuring the capacitance trees**

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [] I have added tests to cover my changes
- [] All new and existing tests passed
",eeb6aaff1f7bce8cc03f57304125016e51db3f8e,2019-07-22 21:54:21
604,15,True,1962,550,21,0,"#### Description
Added support for using the generate keyword for module instantiation in a for loop.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/583

#### How Has This Been Tested?
odin pre-commit regression suite
new tests to cover the generate feature

#### Types of changes
- [x] New feature (change which adds functionality)

#### Checklist:=
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2d95191cd1997436d68cfcff296d3148bb5fcbcd,2019-05-24 23:17:50
600,2,False,28,3,3,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds an additional function when creating the `pin_name` . If the port is a single bit port, the square brackets are not added.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",756ee292e700ca0169ec6a7b029caa895820a58f,
599,1,False,66,29,2,14,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR allows to have zero-capacity nodes when checking the `rr_graph`. In addition zero-capacity nodes are not drawn.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It has been tested on my local machine, but it should not require any additional regression tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7739017967eeb4907675688bac713e241c817b4c,
596,1,False,11550,0,8,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Include the FIR filters from [kastner.ucsd.edu/fir-benchmarks](http://kastner.ucsd.edu/fir-benchmarks/)


#### Motivation and Context
this enlarge the odin regression suite

#### How Has This Been Tested?
ran the new test and included them in the regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",9f38b47675b9ce0926e54a045572e10d3ab7faa6,
594,2,True,9,9,2,1,"#### Description

Fixes some small spelling mistakes.",6f8484586266d09e1acdefd072737d1ccd7d60e0,2019-05-23 13:26:00
593,1,False,1,0,1,1,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
This PR is only made to test if the build successfully completes on CI. It is not intended to be merged.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
There is an issue with CI build with https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/517. I could not reproduce the `vtr_reg_basic` tests error on any of my local machines.

I want to make sure that the issue is with the open PR and not with the current master status.
Once the build completes I will close this PR.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",5f3432397cbf55583396643810a5bb4c15ac1ca6,
591,6,True,691,306,9,0,"#### Description
This fix the 2d array implementation such that it generates the correct circuit

#### Related Issue
#570

#### Motivation and Context
Was using the initial value rather than building the circuit for indexing into the 2d array

#### How Has This Been Tested?
added a test inside operators that verifies the correctness of the 2d array to 1d.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",43e84c3b8ea05cd99022e69eb8508931735b14c4,2019-05-22 00:25:35
590,6,True,316,69,3,2,"#### Description
<!--- Describe your changes in detail -->
Before this PR odin will never implement a multiplier using soft logic if the architecture has a hard multiplier. Which is fixed in 01659c2a68a5951bb7d9a11a1845d968dfaf3195. This PR also fixes the logic of splitting a multiplier into multiple smaller multipliers (2edfbb9a7d9fbf2c60b7c730696ffaf15ef3082f). Finally, it adds a way of implementing soft multipliers using AND gates and a balanced adder tree if the architecture has hard adders instead of implementing soft multipliers using AND gates and soft multipliers only previously (9f591fb287e57189688112bb5de897cca297149c).
",ae5d94cc8bbde277cea9f78ae4901ea272af2b50,2019-05-22 02:43:55
588,1,False,1,0,1,2,"Signed-off-by: Alessandro Comodi <acomodi@antmicro.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
ODIN failed to compile with the following output:

```
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp: In function ‘void split_soft_multiplier(nnode_t*, netlist_t*)’:
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:33: error: ‘ceil’ is not a member of ‘std’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                 ^~~~
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:33: note: suggested alternative: ‘cerr’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                 ^~~~
                                 cerr
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:43: error: ‘log’ is not a member of ‘std’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                           ^~~
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:43: note: suggested alternative: ‘clog’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                           ^~~
                                           clog
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:80: error: ‘log’ is not a member of ‘std’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                                                                ^~~
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1232:80: note: suggested alternative: ‘clog’
     const int add_levels = std::ceil(std::log((double)multiplicand_width)/std::log(2.));
                                                                                ^~~
                                                                                clog
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1285:46: error: ‘ceil’ is not a member of ‘std’
         addition_stages[level+1].resize(std::ceil(addition_stages[level].size()/2.));
                                              ^~~~
/home/alessandro/projects/symbiflow/tmp/vtr-acomodi/ODIN_II/SRC/multipliers.cpp:1285:46: note: suggested alternative: ‘cerr’
         addition_stages[level+1].resize(std::ceil(addition_stages[level].size()/2.));
                                              ^~~~

```

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",22f8db6164dd4d64d033d6faa06b347a7177477d,
585,4,False,617,513,10,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Generating (probably) unique module names for a named module in a `for` loop inside a `generate` block while statically unrolling the loop at an AST level. Providing simple generate block support.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Related to issue #583

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
A large number of benchmarks make use of module generation.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This is a WIP PR and is not yet working. There is a problem with segmentation faults due to the order in which netlist creation and unrolling happen during the recursive AST simplification. This PR is being created to work openly with another developer fixing that issue.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1247e456769eacd981d8ec6362ef65f04ebfa51c,
581,1,True,15,9,1,1,"ODIN_II: Fixing verilog_preprocessor.cpp warnings

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
Small changes in verilog_preprocessor.cpp that eliminate compilation warnings.

#### Related Issue
#572 - ODIN_II: verilog_preprocessor warnings

#### Motivation and Context
These changes eliminate warnings that come up during compilation. They are all related to `format_verilog_file()`, `format_module_declaration()` and `format_port_declaration()` in verilog_preprocessor.cpp.

#### How Has This Been Tested?
verify_odin.sh has been run with no failures.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",280f88d60a957cfdbcdd6187668839f132a8ce15,2019-05-17 19:30:02
580,1,True,3,0,1,0,"This enables PugiXML's [compact mode](https://pugixml.org/docs/manual.html#dom.memory.compact), which optimizes document structures for memory usage instead of efficiency of access.

This is originally discussed in [SymbiFlow/vtr-verilog-to-routing/#34](https://github.com/SymbiFlow/vtr-verilog-to-routing/pull/34). A benchmark using Artix 7's RR graph(1.9M nodes, 4M annotated edges) gives these results:

>Create Device times:
>
>| Reader | Time to create device(5 runs) | max_rss to create device |
>|------------|-----------------------------------------|---------------------------|
>|PugiXML|`21.78 21.68 21.9 21.71 21.99`|5902.4 MiB|
>|PugiXML compact|`25.17 24.63 24.43 24.59 24.16`|3200.3 MiB|
>|LibXML2 SAX|`31.31 30.96 30.83 30.99 30.85`|1895.5 MiB|

#### Description
This is a one-line PR which adds `-DPUGIXML_COMPACT` to PugiXML's compilation options. 

#### Related Issue
[SymbiFlow/vtr-verilog-to-routing/#34](https://github.com/SymbiFlow/vtr-verilog-to-routing/pull/34), [symbiflow-arch-defs/#686](https://github.com/SymbiFlow/symbiflow-arch-defs/issues/686) 

#### Motivation and Context
If not in compact mode, PugiXML's DOM API allocates at least 2x the XML file's size in memory. Enabling compact mode is an easy change and reduces memory usage by 45% while increasing running time by 15%.

I tried to enable it only for the rr_graph reader, but then decided it isn't worth it, because
1. the other XML readers run in negligible time compared to the rr_graph reader
2. libpugixml is compiled as a static library, so enabling compact mode only for the rr_graph reader would require cmake changes all over the project.

#### How Has This Been Tested?
The benchmark is run in a LXC container, against VPR `8.0.0-dev+vpr-7.0.5-6722-ga5e0a0ad4` and #34.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

",8b4762f37b742927609d50d4e7d27d19d2e3bbe8,2019-05-22 03:55:30
578,1,True,1,5,1,0,"#### Motivation and Context
The AST needs to be simplified before submodules are instantiated to be able to support new instantiations in generate blocks

#### How Has This Been Tested?
odin pre-commit regression suite

#### Checklist:
- [x] All new and existing tests passed
",c2bc9a60f24e17b0ef364db0569505025ceb0c03,2019-05-17 19:29:43
577,1,True,4,2,1,6,"It is unclear why the assertion exists, it seems that not all ``cx_to`` will have items that conform to the ``min_cy``/``max_cy`` for spare architectures.",1d26776ba2fb88e6d334a256fd40d6ee664effb4,2019-06-25 21:20:43
576,1,True,21,3,1,0,,7051e8bca08f3db62bec71770f2ccc91a228d59b,2019-05-16 21:49:52
575,1,True,29,27,1,5,"Previous implementation would get an assertion after showing that the blackbox could fit in the pb_type (see: https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vpr/src/pack/cluster.cpp#L3145).  Rather than asserting after packing the primitive, instead reject the packing earlier in the flow.",79157c3f254f6c2e9d063fb82079168220ad075a,2019-05-16 23:22:20
574,1,False,52,0,1,2,"Currently tatum will generate an ASSERT (https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/libs/EXTERNAL/libtatum/libtatum/tatum/timing_paths.cpp#L45) on invalid slack values, but this doesn't provide data on where in the timing model generates the error.  This adds a better error message about where timing path failed to have valid slack values.",4b7f1b52f260bb416037bee3e520b52a1f1132d8,
573,1,True,1,1,1,3,* flat_map assertion could generate invalid iterator on small maps.,50616d767ec9bb13705a8491e37eb3d36dcc2d32,2019-05-16 21:27:43
571,1,True,50,82,5,0,"#### Description
altered loop unrolling to be done recursively (per module)

#### How Has This Been Tested?
odin pre-commit regression suite

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] All new and existing tests passed
",8b64c2e14da8cc6d1cf5dab9948056b49dc377c5,2019-05-16 15:17:31
567,4,True,405,58,11,0,"#### Description
Added support for the $clog2() function (and patched an issue with num_modules being mismatched/misreferenced).

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/558

#### How Has This Been Tested?
-Odin pre-commit regression suite
-New syntax and operators tests

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",53b142cc925a945fd16d7122256e41a098f6b134,2019-05-15 22:51:59
566,13,False,967,309,20,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",99df2d45fff72919df792e204702e408796f3477,
565,29,False,520,10,23,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
The procedural continuous assignments (using keywords assign) are procedural statements that allow expressions to be driven continuously onto variables or nets.
The assign procedural continuous assignment statement shall override all procedural assignments to a variable. The deassign procedural statement shall end a procedural continuous assignment to a variable. The value of the variable shall remain the same until the variable is assigned a new value through a procedural assignment or a procedural continuous assignment.



#### Motivation and Context
ODIN_II is an FPGA CAD synthesis compiler which accepts Verilog design as an input. For this reason, it needs to support all keyword in the Verilog language.

#### How Has This Been Tested?
adding some new testbench to ODIN for test the new keywords.
add this operator to the existing test benches

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",e180f8e46b3a87a68f6aaeeb765b72bee2949f82,
564,1,True,168,132,6,0,"#### Description
Leave the zero paddings of the implicit ram for later to be able to collapse it.

#### Related Issue
No issue raised, but SP ram was always initialized, now this fixes it to also use SP_ram when only a single call to the ram is used.

#### How Has This Been Tested?
added a test to assure that single port rams are initialized

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x ] Bug fix (change which fixes an issue)

#### Checklist:
- [x ] I have added tests to cover my changes
- [ ] All new and existing tests passed TBD
",48d3b9152fb8173a75807b19f62be0ad57010776,2019-05-15 17:24:42
562,1,True,12,2,1,1,"Previous error would only indicate out of bounds, but not which array or index.",4dcd57694f6fefef5af279616ec4548cfaf1c50f,2019-05-10 14:42:15
560,40,False,20181,409774,976,0,"<!--- Provide a general summary of your changes in the Title above -->
This is a work-in-progress
Create a new class RRGraph to encapsulate the rr_graph related data structures in a unique one.

#### Description
<!--- Describe your changes in detail -->
1. Created a new class RRGraph to encapsulate the rr_graph related data structures in a unique one.
2. Added the RRGraph object to DeviceContext. Convert the old rr_graph to the new RRGraph when building the device
3. Updated downstream routers (both timing-driven and breadth-first) to use the RRGraph. The updated routers are placed in vpr/src/routers, which can be merged back to the original vpr/src/route files easily.
4. Modified rr_node_route_inf with the new id type of RRGraph
5. Modified net_delay.cpp to use RRGraph data
6. Updated the Rect class in vtr_geometry lib by a new constructor required by RRGraph constructor
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Using the new RRGraph class will lead to compact codes in implementing routers and related modules.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
With updated routers, the RRGraph object has demonstrated the same performance level as previous data structures. 
Passed test include vtr_reg_basic and vtr_reg_strong
<!--- Include details of your testing environment, and the tests you ran to -->
The test is done on a CentOS 7 machine.

<!--- see how your change affects other areas of the code, etc. -->
Currently, the drawers should be updated as well.
To exploit the easiness in using RRGraph, data structures in RoutingContext and routers(in particular heaps) should be updated by using the id type of RRGraph

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",f24d0e7e8ed7dd456caefbf5edb2d42b7de1255a,
559,7,False,2610,240,18,28,"<!--- Provide a general summary of your changes in the Title above -->
This PR introduces two main changes:
- Move all top level pb_type specific tags to tile tags in the architecture XML. This basically makes all pb_types in the `<complexblocklist>` of two types: normal and primitive.
- Implement Equivalent Tiles placement capability. This means that, if the `<tile>` tag in the XML specifies possible equivalent tiles, these can be used during placement.

These changes still need refinement and a review stage to check the direction of this work.

#### Description
<!--- Describe your changes in detail -->
##### Tile tag
The change related to the tile tags is needed to clearly separate the concept of pb_type and top level pb_type. A top level pb_type, in fact, is a physical configurable block of the FPGA that has to be treated differently from the lower level pb_types.
In order to do so, a new tag has been added to the XML, namely the `tiles` tag. It contains all the information relative to the `ex-top level ` pb_types (e.g. fc, pinlocations, switchblock_locations).
This change is addressed in the [`read_xml_arch_file.cpp`](https://github.com/verilog-to-routing/vtr-verilog-to-routing/compare/master...acomodi:equivalent-tiles?expand=1#diff-0a95ec2e9db5bad31bfe7f1f7f450a7a) and [`physical_types.h`](https://github.com/verilog-to-routing/vtr-verilog-to-routing/compare/master...acomodi:equivalent-tiles?expand=1#diff-7294b0eab14f0f67c3b6119931a20cfd).
The current PR is going to fail on CI as the current test architectures do not include the `<tiles>` tag.

##### Equivalent Tile placement
The second change addresses the Equivalent Tiles placement.
What happens is that the placement stage now does not rely strictly on the clusterer decisions: each block belongs to a `top level` pb_type (now called just `tile`), which can be swapped with a corresponding equivalent during placement (if equivalent tiles are present).
There are checks that do ensure that, during the swap stage, blocks are placed only in correct locations (same tiles, or equivalent tiles).

When the placement has finished, the clustering information need to change, as it could happen that a CLB (Clustered Block) that refers to a specific type (e.g. SLICEL), is placed in an equivalent tile (e.g. SLICEM). This situation generates conflicts during the routing stage, as, even being equivalent, the two tiles have different pin configurations.

To address this issue, the clustering context has to be changed with the information about the new pin mappings for the blocks that have been swapped in equivalent tiles. This happens in the background, therefore there was no need to apply changes at routing stage.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
The issue that is addressed with this PR is: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/513

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The motivation of moving the top level pb_type definition to another location in the architecture definition is to have a clearer separation on the two concepts of top level pb_type and normal/primitive pb_type. 

Instead, the Equivalent Tiles feature is an improvement in VPR. With the ability to use equivalent locations, placer can choose for a better solution when trying to find the best placement, reducing its final cost.
Moreover, this solution can overcome the fact that the packer is not aware of the possibility to use an equivalent tile (and it should correctly not be aware of that) and the job is left to the placer. In fact, the packer may always choose to implement a cluster using a certain tile instead of another, even though there are other tiles that could be used. 
In this case, there could be designs which would consume more resources (tiles) than the available ones and the placer, if allowed, could place the exceeding blocks in the equivalent locations. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
There is a very initial implementation of a test which was needed during development. It should be made more robust.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4f592662dbacc66982e3224e5ede717f1f02db0c,
555,11,True,727,331,19,1,"#### Description
Removed code that nullified parameter overrides that had already occurred, for parameter overrides where the parameter name was not specified, i.e. where only a list of the new values were provided.
Also fixed an issue where operations used old parameter values instead of the values last defined, due to resolving the operations before the parameters were updated.

#### Related Issue
https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/554

#### How Has This Been Tested?
-odin pre-commit regression suite
-new tests to verify more cases

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",e4da39f010a31c4c3b4ed4488d3bb9536a1de90c,2019-05-15 17:29:07
549,1559,False,1589673,1899691,3699,2,"<!--- Provide a general summary of your changes in the Title above -->
General Roadmap to incremental modification 
1.Complete the RRGraph object interface (https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/rr_graph_obj/vpr/src/route/rr_graph.h). The prototype linked does not fully encapsulate the t_switch_inf into RRGraph. The RRGraph will focus only on the graph nature, which means it will only contain a list of nodes, a list of edges which connects nodes, R&C info of each node,  direction and coordination of nodes, etc. The RRGraph will include a few fast look-ups to allow users to fetch nodes or related info quickly. In addition, we should add the configurable and non-configurable edge info, which is required by router.
2. Build the new RRGraph object from the existing RR graph data structures (as in https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/rr_graph_obj/vpr/src/route/build_rr_graph.cpp#L306-L383). This avoids having to make changes to the existing RR graph construction code initially. This will change the buid_rr_graph function using the new interfaces (mutators) of RRGraph
3. Update all downstream code (e.g. router, RR graph writer) to use the new RRGraph object interface instead of the old legacy data structures. In particular, we will develop a rr_graph writer first to see if the new builder is correct or not.
4. Update the RR graph reader to construct the new RRGraph object directly (instead of indirectly through the old data structures). Once this is done you should be able to load an existing rr_graph.xml file and run the router without having to build an RR graph using the old data structures.
5. Update the RR graph construction code to directly build the new RRGraph object
6. Delete the old RR graph data structures (t_rr_node, t_rr_edge, and relevant members of the device_ctx)

#### Description
<!--- Describe your changes in detail -->
Currently, step 1-3 have been done 
#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
The new class aims at grouping the discreted rr_node data structures in a unique object with more scalable data types.
It will benefit rr_graph builders and routers with much simplified input data structures and ease the development of new routers and rr_graph builders.


#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
This code base has passed two sets of regression test, vtr_basic and vtr_strong.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",332e46d63904a9718e45693d280bbb4351da1006,
548,2,True,2,2,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",98f81bdd114655470125d9b3a14f56dfa96c56df,2019-07-27 14:47:29
547,2,True,33,0,2,1,"#### Description
added support for labeling begin blocks

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] New feature (change which adds functionality)

#### Checklist:
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",4a23b6bdfe3a31a6096911e41dbf1b985ccafffa,2019-04-30 14:41:52
541,1,True,1,0,1,1,"Signed-off-by: Prayas Arora <arora.prayas@gmail.com>

Fixed [-Wmissing-declarations] warning in VTR/master

#### Description
- wrote function prototype in ODIN_II/SRC/include/verilog_preprocessor.h file.

#### Related Issue
Run the following commands from VTR root directory:
```
$ make clean
$ make
```
Issue Link: https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/540

#### Motivation and Context
VTR should compile cleanly without warnings in favor of the user.

#### How Has This Been Tested?
Command: ./run_quick_test.pl
All tests of vtr_reg_basic passed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [`x`] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [`x`] All new and existing tests passed",13037adc7981820d8c77b31b54350708b494c432,2019-04-22 15:22:37
539,148,False,2773,470,55,1,"Fixed two build warnings in VTR.

#### Description
- Wrote a macro: UNUSED_PARAMS(x) for removing unused params warning. This macro should be used for all the parameters of a function which aren't used.
- typecasted unsigned int pb_graph_node->illegal_modes.size()  to int

#### Related Issue
Steps to reproduce: run make in vtr root directory.
Issue: https://github.com/SymbiFlow/vtr-verilog-to-routing/issues/43

#### Motivation and Context
Any tool should build without any warnings in favour of the user. Often at building time, all warnings are treated as errors. Hence, all warnings should be resolved.

#### How Has This Been Tested?
Command: ./run_quick_test.pl
All tests of vtr_reg_basic passed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [`x`] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [`x`] All new and existing tests passed",6bd2db76ed739120c66d7535a01df87dd35170c3,
536,1,False,3,0,1,0,Placeholder for documentation,87e4c66a4dedc05c181bed48d9b8e6eacd77759c,
535,2,False,99,1,2,2,"#### Description

Adds stub check to check_route.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/526

#### Motivation and Context

Detects stub nodes in routing graph.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",72ced2b81c5df80a1c311779fe1201e087f946f0,
534,1,False,47,32,2,0,"#### Description

Adds stub check to check_route.

#### Related Issue

https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/526

#### Motivation and Context

Detects stub nodes in routing graph.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",72ced2b81c5df80a1c311779fe1201e087f946f0,
532,37,False,14460,77,61,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Add a missing header file in pack.cpp, without which clang errors out 
#### Related Issue
<!--- Pull requests should be related to open issues -->
To support VPR8 in MacOS Mojave with clang compiler
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",332e46d63904a9718e45693d280bbb4351da1006,
529,14,True,1889,188,15,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Those changes to the packer allow having architectures with more than one chain per cluster. This is similar to the carry chains in the architecture shown in this figure where half of the ALMs share a carry chain together and the other half share another carry chain together.

<img src=""https://user-images.githubusercontent.com/35947424/55523148-dfe44a00-5655-11e9-8587-5f8d18b2ff68.png"" width=""300"">

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Before applying those changes, VPR will fail to route benchmarks that have long chains on the architecture shown above. Long chains refers to chains that won't fit in one cluster and need to be split on multiple clusters. For example, if the cluster has 20 bits of addition and the benchmark has adders that are 64 bits wide. The adder will then be divided into 4 clusters (20, 20, 20, 4) and the different parts of the adder chain are then connected together using direct links between the clusters (from Cout to Cin)

Why does the routing fail?

The packer doesn't understand that in this architecture there are two identical chains that are completely separate from one another (there is no connection from Cout1 to Cin2). Meaning that Cout1 is connected to Cin1 of the next cluster and Cout2 is connected to Cin2. Therefore, for a long chain if part of the chain is placed in chain 1 (chain starting at Cin1 and ending at Cout1), all the other parts of the chain should be placed in chain 1 in their subsequent clusters to ensure routability.

How is the problem solved?
1. When identifying a chained pack pattern in the architecture, check if there exist multiple separate chains per cluster and identify their starting points (ALM0 and ALM5).
2. When parsing the atom netlist identify long chains and keep track of there placement within the cluster to ensure that all parts of the chain can reach each other.
3. Avoid packing more than one long chain per cluster since it might cause routability issues.


#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
These changes were tested using vtr_reg_strong and vtr_reg_nightly regression tests. Comparison between before and after the changes on the VTR benchmarks can be found in this sheet [comparison_output.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/3052080/comparison_output.xlsx)


A strong regression test called strong_two_chains was added to test the changes on an architecture with two carry chains per cluster.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",76d7e782fdbfcab6cd93ff894902e1f7becedcb5,2019-04-12 15:19:53
528,8,True,192,103,2,8,"ODIN_II: Added _bug benchmark for in-module input/output declaration

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

This PR adds a .v file under ODIN_II's `regression_test\benchmark\_bug` directory. This will be used to test ODIN_II's ability to allow full input and output declarations within module declarations. Work on this PR will aim to add this functionality.",5b2555725188f36aeda92bcd20d269453a00152a,2019-05-15 22:42:15
527,8,True,102,756,13,2,"#### Description

 * Fix invalid [rr_graph.xml example](https://vtr-verilog-to-routing.readthedocs.io/en/latest/vpr/file_formats.html#routing-resource-graph-format-example).
 * Fix the [broken tables in the developer documentation](https://vtr-verilog-to-routing.readthedocs.io/en/latest/dev/developing.html#key-qor-metrics). Reported in https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/389
 * Some minor other cleanup.

After https://github.com/sphinx-contrib/domaintools/pull/2 is merged, the documentation generation actually now works with Python 3.7 now too! (It should continue to have work with Python 2.7 too.)

#### How Has This Been Tested?

Example output can be found at https://mithro-vtr.readthedocs.io/en/latest/

#### Related Issue

 * https://github.com/verilog-to-routing/vtr-verilog-to-routing/issues/389
",79e0b9c9095abbf1d5a3da70f742192560715dd3,2019-04-12 14:29:08
523,1,True,0,7,2,2,"#### Description

These are two cases where work is being done twice.  The first case is
that the routing graph is being generated (or read from a file) twice.
The second is that when a routing graph load is done, the check_route
routine is called twice, once in the load function and another in the
root level flow function.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",40cb383c8d3643425f2ef6f6e94d3ad76e266759,2019-06-07 15:34:22
522,1,True,1,1,1,1,"#### Motivation and Context

Just look at it :)

#### How Has This Been Tested?

Just look at it :)

#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",793fbb6d8e4a62eb9ea56189068ebf2d1ff9d364,2019-04-01 14:43:16
519,6,True,142,5,1,1,"#### Description
This is a change to load_uniform_connection_block_pattern to increase track diversity for adjacent pins in the input pin ordering that are likely to be in the same equivalence group.
This is the cleaned up version of alternative two from [this commit](https://github.com/rfungquicklogic/vtr-verilog-to-routing/commit/da4762c1c711847912c3298770b13e9a0fe9186b).

#### Related Issue
N/A

#### Motivation and Context
See commit linked above for details.

#### How Has This Been Tested?
See commit linked above for details.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",727493cb40a3e53bc82751d546ea7359235b169e,2019-03-29 14:37:29
518,3,True,356,6,7,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR adds the feature to output `.param` and `.attr` to the `blif` file produced when the `--gen_post_synthesis_netlist` option is enabled.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change is necessary to add additional information in the analysis of the post-synthesis netlist output.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
To test the correct functionality I have created a small regression test which in which the `--gen_post_synthesis_netlist` is enabled and the top.blif file is produced.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",805ce668f5f7fcf860eedade24dcda8ca1f86a21,2019-05-21 19:33:05
517,10,True,2207,175,20,52,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
This PR introduces the possiblity to change the `PBs modes` accordingly to the architecture and netlist needs.
It is divided in two parts, one adding the `mode` selection feature and the other handling the case in which there are `mode` conflicts. 
Each one of the two parts is supported by a regression test.
Most of the modifications affect the `VPR` `packing` stage. There is the introduction of necessary checks during the molecules clustering to verify that the modes are correctly chosen and do not incur in possible   conflicts (which would mostly depend on a bad architecture definition).

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
This change solves the issue for which `VPR` can actually change the possible operational mode of a specific `PB type`.
An example could be `SLICES` that could operate both as `LUTs` or as `DRAMs`. Depending on the different `mode` that has to be used the internal connections will change, imposing the necessity to allow the correct `mode` to be selected by `VPR`.

#### High Level comment
 
The general idea behind this PR is to correctly handle those edge cases for which the packer could select invalid mode trees combinations.
The main contribution is to insert a mechanism to detect whether all the edges do come from the same mode, feature that is currently absent in VPR.
 
Basically, with this PR it is possible to have a `mode_of_edge != 0` as reported at this line: https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/517/files#diff-4e5e654dac03b1f54da617a739a8dc4bL227.
 
Thanks to the addition of utility functions (https://github.com/verilog-to-routing/vtr-verilog-to-routing/pull/517/files#diff-426fa77aec16477785c3513b6015d183R153), the `mode tree` is checked in order to see if all the out-going edges of a certain `pb` to the `pb_children` do share the same `mode`.
Example: edges that connect LUTs A, B and C to the `parent` have the `parent_pb mode` set to `LUTs`, but edges of LUT D have the mode of edge corresponding to a wrong `parent mode` (visual example in the image below corresponding to a conflicting packing).
 
![Untitled Diagram](https://user-images.githubusercontent.com/44773360/56305607-f18f1c80-6140-11e9-94bd-7b722404d43b.png)

With the new code in this PR, the packer reports a cluster `mode` conflict and tries all the other possible modes (and in this process it marks as `illegal` those that generated a conflict) and eventually tries again to build a new cluster.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Two strong regression tests have been added in a separate commits that checks the correct behavior of the `mode` selection feature (`strong_routing_modes`) and the `differing modes` handler (`strong_routing_differing_modes`).

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",a0f2909d556acd012080d780d5ad43cd1979911d,2019-05-24 16:05:25
516,1,True,2,2,1,1,Small fix to the documentation.,b515dceed993dd4e76904d1361fb1a6ae444d865,2019-03-26 13:43:38
515,15,False,66,524,9,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
'Specparam' is a parameter in Verilog language which is only defined in specify blocks. Specify block uses to shown delays between source and destination. specify block is not synthesizable, for this reason, specparam is cleaned up.

#### Related Issue
In the first implementation method, the node for 'specparam' was made and this node parsed the tree.

#### Motivation and Context
Language coverage and support all features and keywords in Verilog 2005.

#### How Has This Been Tested?
Some Verilog design was tested through the Odin_II with input and output files.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",7254daac39632d287268746fd41af443f7ab81f9,
511,15,True,158,5,16,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Verilog language coverage
An indexed Part-select extract a specific range of array which can be a positive integer value. Part-select just accepts the range in the boundary. It consists of two operators: pluscolon and minuscolon.
This is the second type of implementing part-select by using the existing range-ref type.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
ODIN_II is an FPGA CAD synthesis compiler which accepts Verilog design as an input. For this reason, it needs to support all keyword in the Verilog language which part-select index is one of the operators in this language.

#### How Has This Been Tested?
adding some new testbench to ODIN for test the new keywords.
add this operator to the existing test benches.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ x] I have updated the documentation accordingly
- [ x] I have added tests to cover my changes
- [ x] All new and existing tests passed
",cc534a00ff82cb5fddbd0eb5a752a95e3fca64e9,2019-04-05 00:19:53
510,7,True,2249,71,30,2,"#### Description

Add utility that outputs FPGA assembly (FASM) file based on metadata tags inside.

#### Motivation and Context

FASM (https://github.com/SymbiFlow/fasm) is a file specification intended to express the low level features present in a FPGA bitstream.  FASM support has been implemented targeting two architectures (ice40 and 7-series) in https://github.com/SymbiFlow/symbiflow-arch-defs using this PR.

#### How Has This Been Tested?

Unit test and integration testing.

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",80afab9d3c0a9906e45bc6b558945f73bac928d9,2019-04-01 14:47:17
509,1,True,1,2,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",567e5c65a56e4b0dbe36187e5bec3c1d1bd43332,2019-04-05 00:20:29
508,107,True,10849,12423,196,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",f21e70cbf2b2a435d3c5339c06483e8804eb20a0,2019-04-30 16:38:59
507,1,True,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",ea54e9f21ef253095009ed29a2649e8c9323df14,2019-03-15 15:57:34
503,8,False,75,14,11,4,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
'Specparam' is a parameter in Verilog language which is only defined in specify blocks. Specify block uses to shown delays between source and destination. specify block is not synthesizable, for this reason, specparam is cleaned up.

#### Related Issue
In the first implementation method, the node for 'specparam' was made and this node parsed the tree.

#### Motivation and Context
Language coverage and support all features and keywords in Verilog 2005.

#### How Has This Been Tested?
Some Verilog design was tested through the Odin_II with input and output files.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2d15701e9516060c8389a8772b5539d54fe65143,
502,2,False,17,1,1,0,,66fad4e88108985ef9a8cdb94bf4e26efe1781f7,
501,2,True,3,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",20b296af40bca10a71ccccaaf901ed17188da107,2019-03-15 12:23:47
500,2,True,5,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",15b4fe8f37e32e9995dbb73eb4ffea7c08f2cfcb,2019-03-15 12:23:18
498,2,True,10,2,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",d35e26688fc0a68c41f47e719c270c76648308a6,2019-03-15 15:05:55
497,4,True,22,1,3,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",b976ce94541b5d0dca25de29eb8a4c4e963c8feb,2019-03-15 12:12:51
496,4,True,29,5,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",d4ef199a3a05d495eb628de7bb44adc3ae4d8878,2019-03-15 15:06:43
495,1,False,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",d2d1777c50d565b607f7bb7d014ea413c24bad60,
494,1,False,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",7c9b47e8ede59cd546eda7495731edf12a10358c,
493,1,True,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",be21e54ec36ae287661518aebcadcf7720f0b772,2019-03-15 12:19:05
492,2,True,23,23,1,1,"#### Description

Small fixes to README.developers.md file, no functional changes.",95b23a2e55704f34ac4df962b950eacbe0fee24a,2019-03-07 18:33:54
491,1,True,33,0,1,1,"#### Motivation and Context

Encountered a segfault due to memory corruption on a custom rr graph.  Valgrind was required to find the issue, rather than a straight forward error message.


#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed",019d5c1055f0726536ab910643028f506ac768cc,2019-03-07 18:32:00
490,2,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",0724820d1f8da67000717c985eb14eec2d8aae14,2019-03-15 12:18:23
489,7,True,35,5,3,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",6401dcf073291038dccd7092dd7efdbe2270a98a,2019-03-15 12:11:55
488,1,True,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",aa3e153711863362fd23bff3ddf44736b820f26c,2019-03-15 12:15:25
487,1,False,1,0,1,0,,aa3e153711863362fd23bff3ddf44736b820f26c,
486,1,True,7,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",411a5befcc603ffdbec5ea461e3eb15695c367e9,2019-03-15 12:15:05
484,1,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",410a372a397da006ad209f823554744031960de4,2019-03-15 12:14:39
483,1,True,16,7,1,1,"#### Description

The placer code assumes all tiles have at least one source and sink.  IPAD and OPAD tiles generally speaking don't look like that, having only 1 sink or source.

#### Motivation and Context

Allow for tiles with only an IPAD or OPAD.

#### How Has This Been Tested?



#### Types of changes

- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",479d5a87ed2c7b3666fdfce5e3920fe04deea5a0,2019-03-07 18:26:57
482,1,True,8,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",21ed03386f580fbba81fa9464a1394f2ba5276dc,2019-03-15 12:14:06
481,1,True,1,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",7dfd69cc4d15cb5f618de1ca4e2ebf242701d746,2019-03-11 19:55:46
478,11,False,4657,115,26,0,PR is used to demostrate high-fanout bug.,2477e8bd0f502913665dadc99a9538d75afc45e0,
477,1,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",7f0b31cb25267410c48334bd333630311123b374,2019-03-05 21:21:33
476,4,True,21,4,3,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",25b9c542788b126b53cb9af453b4fe196d67aa8e,2019-03-05 19:39:32
474,9,False,79988,3,86,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
assign and deassign Always blocking 

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",ed92cc0aa297016f3a81181893918e3c3ef69d4d,
473,6,True,944,119,25,3,"#### Description

The metadata is unused by the core VPR algorithms, but
can be attached at useful points throughout the
architecture and rr_graph XML to enable bitstream export.

#### Motivation and Context

Enables annotation of arch XML and rr graph for bitstream export.
Example https://github.com/SymbiFlow/symbiflow-arch-defs/blob/master/xc7/primitives/common_slice/common_slice.pb_type.xml#L296

This PR does not proscribe a particular metadata pattern, instead simply enables a straight forward key/value system.

#### How Has This Been Tested?

Unit tests for arch XML and rrgraph XML processing have been added.

#### Types of changes

- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:

- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",0754943b17a7465952cc9874dd84f1cc24f31db7,2019-03-18 19:53:33
472,1,True,6,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",86862756ac571f973b0fd246344f5af4ed50b7bc,2019-03-05 21:22:46
471,1,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",3f46f9e717a439476b097bd63d79b6471b8daf91,2019-03-05 05:29:00
470,3,True,15,1,1,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",2b5b36027a2e8753d40d122cf298cf89d49ac96c,2019-04-29 15:25:35
469,3,True,4,0,1,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",b038dccab5476843b93d3ab74ff91aaf593bab1e,2019-03-05 19:38:50
468,2,True,3,0,1,6,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",53d7caa40dbe120b6b868a512dcf269a1589dc44,2019-03-05 21:22:19
467,2,True,2197,0,19,1,"#### Description
librtlnumber - Register Transfer Level (RTL) Verilog Number Library

- Arbitrary Length Verilog Number Library that can Handle 'X' and 'Z' inputs.

- Authors: Aaron Graham (aaron.graham@unb.ca, aarongraham9@gmail.com),
         Jean-Philippe Legault (jlegault@unb.ca, jeanphilippe.legault@gmail.com)
		  and Dr. Kenneth B. Kent (ken@unb.ca)
           for the Reconfigurable Computing Research Lab at the
            Univerity of New Brunswick in Fredericton, New Brunswick, Canada

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",2eb6cd634759ffbb3d3cd03d87930e6f3bfdc97c,2019-02-26 01:33:43
466,1,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",60cfb116feaf36b2628125c73d6358dacbfc5445,2019-03-05 05:07:30
465,2,True,5,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",e63704e0fe626315f9b3bf84c22014b9e9cac6e3,2019-03-05 21:22:07
464,6,False,20,3,3,4,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",f6b49ac64ef2102bf0ca464d9ad8c38be78a3c97,
463,3,True,1121,1230,56,0,"#### Motivation and Context
large benchmark with 32 bit address space were failing

#### How Has This Been Tested?
vtr_reg strong & basic and full odin regression suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ x] I have added tests to cover my changes
- [ x] All new and existing tests passed
",278bfcf820fe84acbd93b1ce3ef4774273658a55,2019-02-23 23:21:16
462,3,True,16,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",aa2d3d67c4593086094c694d435fae3c92f95b47,2019-02-23 23:22:04
461,1,True,2,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",d1fdcc1163c812b60609c03a3773dbccc0a5fd10,2019-02-22 19:48:49
460,1,True,1,1,1,3,"WIP ODIN_DEBUG: Fix for [0:0] data width crash using SPR
SRC: netlist_create_from_ast.cpp

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

#### Description
A function call to create a node's full name was fixed so that it would properly insert the end of the name in the case of a data width (port size) of 1.

#### Related Issue
The bug would cause a segmentation fault when specifying a data width of 1 in memory_controller.v and running it on odin_II.cpp. The issue seemed to arise because when using single-port-ram, certain input drivers could not be detected mid-synthesis.

#### Motivation and Context
Having a data width of 1 is a valid special case.

#### How Has This Been Tested?
memory_controller.v was tested primarily, using data/address widths of 1/1, 2/1, 2/2 as well as other larger values.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1515a8b2442f9bc27f408df63f054e4b1e5c81df,2019-02-23 23:23:37
459,1,True,4,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",729d59f725fcfa9426e185269b4add5dad1a71eb,2019-02-22 19:49:45
458,2,True,20,9,4,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
The keyword macromodule can be used interchangeably with the keyword module to define a module. Then, the implementation of module and macromodule keywords are the same.

#### Motivation and Context
Verilog language support

#### How Has This Been Tested?
Some Verilog design was tested through the Odin_II with input and output files.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",45eabcc1bbf053cde158329b124211b51991d03b,2019-02-22 19:50:34
457,7,False,276,47,10,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Specparam or specify parameter is a parameter in Verilog language which is only defined in specify blocks. Specify block uses to shown delays between source and destination. specify block is not synthesizable, for this reason, the node for specparam is made and parsed and clean up.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Language coverage and support all features and keywords in Verilog 2005.

#### How Has This Been Tested?
Some Verilog design was tested through the Odin_II with input and output files.

<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",67b98a3e82f04d4a865e64449375eebdf5ab3459,
456,6,True,2572,479,7,1,"<!--- Provide a general summary of your changes in the Title above -->
Added more regression test coverage to Odin II and fixed `spree` benchmark. 

#### Description
<!--- Describe your changes in detail -->
A regression test to highlight a missing feature of Odin II was added and another to highlight a feature of the supported for loops. 
Modified the `spree` benchmark in the Odin II _bug folder to compile successfully.
`spree` now uses smaller memory blocks.
The old spree benchmark would not successfully compile software memories because the address space was too large, so the address spaces were shrunk to 16-bit for the `imem` and `dmem` blocks and 5-bit for the `regfile` blocks.
Also cleaned up the `spree` benchmark to use consistent formatting, and removed commented out code.
These are new benchmarks and not code changes to any part of the VTR flow so other than these tests no test suites were run.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Issue: #86

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Allows `spree.v` to move to the next stage of the vtr_flow when using architectures with hard-block memory.
Added additional regression test coverage and a test to highlight a missing feature.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
The Verilog file for `for` loop regression testing was run through the Odin II simulator with input and output files.
The regression test for the missing feature was run and fails as expected.
The new `spree.v` benchmark was run through Odin II and the vtr_flow with the `k6_N10_mem32K_40nm.xml` architecture successfully.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",87512e58325d87a62fe7667388daf308ed7b4370,2019-02-22 17:28:10
455,4,False,185,11,13,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
Verilog language coverage
An indexed Part-select extract a specific range of array which can be a positive integer value. Part-select just accepts the range in the bounray. It consists of two operators: pluscolon and minuscolon.



#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
ODIN_II is an FPGA CAD synthesis compiler which accepts Verilog design as an input. For this reason, it needs to support all keyword in the Verilog language which part-select index is one of the operators in this language.

#### How Has This Been Tested?
adding some new testbench to ODIN for test the new keywords.
add this operator to the existing test benches. 

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x]  All new and existing tests passed
",e8eff25cc4b9955fc63a1cd9d6a92d120866aad0,
454,1,False,1,0,1,1,"ODIN_MEMLEAK: Freed per_case_statement_idx in create_mux_statements
SRC: netlist_create_from_ast.cpp

Signed-off-by: Hillary Soontiens <hsoontie@unb.ca>

Freed calloc'd per_case_statement_idx from create_mux_statements() in netlist_create_from_ast.cpp.

#### Description
A line was added to free the calloc'd memory used by per_case_statement_idx.

#### Related Issue
N/A

#### Motivation and Context
This change fixes a memory leak.

#### How Has This Been Tested?
ODIN_II regression tests were run using valgrind before and after the fix. The test ran was located at regression_test/benchmark/micro/bm_DL_4_16_encoder.v.

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",cf38121639c858825c4cc3b8f6cf9331061ee057,
452,6,True,6,0,1,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",024efd08b93d11c3f474206d012c48a82744ba42,2019-02-18 06:03:54
451,1,False,1,0,1,0,,f72bbc9b4789a900a53f4563beeea9566a593f49,
450,1,True,2,0,1,0,,dca7340b103f0655dfbb4f83a9f78d5dedae8276,2019-02-13 02:23:06
449,3,True,2,0,1,0,,a06cac979741daf39e32da2f2ca345a4ea12c7b1,2019-02-13 02:22:06
448,1,True,1,0,1,0,,69d61445d48aeba98cd60d2cfb19c49419288d63,2019-02-13 02:21:20
447,1,True,2,0,1,0,,63e6a80b1ff5821b2bbb6d4393155e5006df778e,2019-02-13 02:20:58
446,1,True,1,0,1,0,,26398f8a9e31674b69bd76d29b1191a99831d0cb,2019-02-13 02:19:48
445,1,True,3,2,2,0,,283c8fccda4265d50d0c9edb4ba37f67f1ac31a0,2019-02-13 02:19:29
444,1,True,1,0,1,0,,6c8104ca23301687a73c78c59e7be644dda6308c,2019-02-13 02:18:51
443,3,True,2,0,1,0,,abf68952c0dd665695d0ba119fce7ed43f82753a,2019-02-13 02:18:31
442,1,True,1,0,1,0,"
",a13fea104bc7b4df3bb783be86d72dbaa61fd73c,2019-02-13 02:14:50
441,1,False,2,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed",1507b1b978d6e626c62fa3a3af57d8e09da72817,
439,2,True,2,2,1,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",6d6868158a96103b1a23fc9592dde5af0081564f,2019-02-13 03:19:09
438,4,False,137,5,11,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",6194bf7c796b8f972876bbed48c570ce711c1506,
437,7,True,1080,53,5,0,"Multithreaded Simulator -- new Approach.  

#### Description
The Multithreaded Simulator is using multiple threads based on the netlist/graph cost and the underlying available CPUs. A communication between the threads and the main thread is happening. Inter-cycle and intra-cycle parallelism is happening for every batch (based on the BUFFER_SIZE) of cycles.
#### Related Issue
Multi-threaded simulation support
#### Motivation and Context
The current one has better performance than the previous one in the majority of benchmarks.
#### How Has This Been Tested?
The pre_commit option was used for both single_threaded and multi_threaded simulation, to verify correctness.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",7655cd1371eec87b32c11f3b98b899d94550dcdd,2019-01-29 22:58:09
436,1,True,1,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",dc3f7131cf06277fb31217e3bd845762d394e278,2019-01-29 15:54:26
435,1,True,3,2,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",1ef6851f2b49a3e2de52ee7342b899de4278b463,2019-01-29 15:53:25
434,1,True,2,0,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",32031db7f479d178130f4b24bc3fb53b4e3eae4f,2019-01-29 15:52:28
433,1,True,6,2,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",e46e0088490ea666ff9b4db98f7efa3408398180,2019-01-29 15:52:10
432,34,False,4686,319,51,1,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",17b078eaabc92fe1c06b8a798e868ec5b06f9aae,
431,2,True,3,2,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",685e3889f79a6da68d5d9450825bc1f16c30fc46,2019-01-29 15:51:22
430,1,True,6,1,1,0,"#### Motivation and Context
memory leaks in odin

#### How Has This Been Tested?
odin pre_commit regression suite

#### Types of changes
- [x] Bug fix (change which fixes an issue)

#### Checklist:
- [x] All new and existing tests passed
",9540f9fcdc6a7c1e648e51961cb36677372e8328,2019-01-29 15:51:05
429,18,False,397,58,13,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a759f97427afc785021480ef1534cdabaa714411,
428,7,False,195,37,14,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",91531e52277475ab1ea2c656b4431467be560f86,
427,6,False,6636,8,18,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e2f7eeac1e75187c89163261c046a81eaf29ff64,
426,0,False,0,0,0,0,"#### Description
Fixed memory leak caused by reassigning line without freeing previously allocated memory.

#### Related Issue
Memory leak.

#### Motivation and Context
Fixes a memory leak.

#### How Has This Been Tested?
Ran pre-commit test from verify_odin.sh.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ad6c29ae7d7dfca5416c002c92b2b153e867b115,
424,3,True,13,23,4,1,"

#### Description
Remove the allocation and move the temporary line on the stack

#### Related Issue
Memory leaks in odin

#### Motivation and Context
Reduce memory leaks in odin

#### How Has This Been Tested?
Used odin regression pre-commit test suite

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",813e651732f7bcfc0685ff96a4e5c5f6b2b2a9bd,2019-01-15 16:11:37
422,1,True,3,1,2,2,"#### Description

Adding a one-liner CSS stylesheet (can be used for other custom additions in the future) to fix the problem where XML definitions extend beyond the line width and generally look bad.

A simple `white-space: pre-wrap` fixes the issue.

See e.g. here: https://docs.verilogtorouting.org/en/latest/arch/reference/#tag-recognized-blif-models-models-port

The reason I am fixing it in a custom CSS and not in the theme is that you are using a custom domain for XML and it's a very niche use case. In practice, no one in RTD is expecting the class name to have spaces - your extension is putting the entire XML tag (which is long and includes spaces, so can be wrapped) into the code.classname element.

#### Related Issue

#421

#### Motivation and Context

Makes docs look like they're not broken!

#### How Has This Been Tested?

Tested the changes on a local build and also live in browser (Chromium, Firefox) HTML editors.

#### Types of changes

- [X] Bug fix (fixes the wrapping problem)
- [X] New feature (adds custom CSS file, can potentially be used for other things too to extend beyond the standard theme)

#### Checklist:
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- N/A I have added tests to cover my changes
- N/A All new and existing tests passed
",5b276b79694b875f55a5233b67d30c23d56ce8da,2019-01-08 21:49:49
420,2,True,3332,60,11,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Added support in the `ast_loop_unroll` code in ODIN II to statically unroll for loops with complex conditionals and post expressions.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Fixes issues #418  and #419 

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Improves Verilog language support for VTR.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Added regression tests that test the usage of each new added feature to the `regression_test` area.
Ran the pre_commit ODIN II test suite to confirm no breaking changes were added.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [x] All new and existing tests passed
",88735dc7831348f846264b2bac595e894b4570c5,2019-01-29 20:37:28
416,3,True,272272,9,52,2,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Added support for the `{VAR, NUM} >>> NUM` operator.
Added support for `for` loops of the following form:
```
for(VAR = NUM; VAR {<, <=, >=, >, ==, != } NUM; VAR = VAR {+, -, *, /} NUM;) STATEMENT
```
Where STATEMENT does not contain any lines of the form `VAR = EXPRESSION`
NUM is a constant number after the folding of constant expressions
VAR is a symbol.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
Fixes issues #415  and #87 .

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Adds language coverage for a new operator and fixes a long standing bug. 

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Tested with two new regression tests (one for each change), the `verify_odin.sh` script and a clean compile of the code submitted with issue #87 (which did not contain expected output for given input and was therefore tested only to the point were it did not reproduce the problem documented in the issue.)

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x ] Bug fix (change which fixes an issue)
- [ x ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ x ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ x ] I have added tests to cover my changes
- [ x ] All new and existing tests passed
",17f7a9153c57fe65cbbc289b049e5a8ad6787415,2018-12-08 13:47:04
411,39,True,147923,1743830,223,0,"view issue #384

tested with reg_strong and reg basic.",252c7e3ae5a4f8de1eca73efcd447cac5573189f,2018-11-17 01:11:10
408,1,True,8,4,1,1,"## result

Approach | test_name | status
---|---|---
blanket: | and_latch.v/common | OK
blanket: | multiclock_separate_and_latch.v/common | OK
blanket: | multiclock_output_and_latch.v/common | failed: Simulation
blanket: | multiclock_reader_writer.v/common | failed: Simulation
blanket: | ch_intrinsics.v/common | failed: Simulation
blanket: | diffeq1.v/common | failed: Simulation
blanket: | mkPktMerge.v/common | failed: Simulation
blanket: | raygentop.v/common | failed: Simulation
blanket: | stereovision3.v/common | failed: Simulation

Approach | test_name | status
---|---|---
original: | and_latch.v/common | OK
original: | multiclock_separate_and_latch.v/common | OK
original: | multiclock_output_and_latch.v/common | OK
original: | multiclock_reader_writer.v/common | failed: Simulation
original: | ch_intrinsics.v/common | OK
original: | diffeq1.v/common | OK
original: | mkPktMerge.v/common | OK
original: | raygentop.v/common | OK
original: | stereovision3.v/common | failed: Simulation

Approach | test_name | status
---|---|---
skip_abc: | and_latch.v/common | OK
skip_abc: | multiclock_separate_and_latch.v/common | OK
skip_abc: | multiclock_output_and_latch.v/common | OK
skip_abc: | multiclock_reader_writer.v/common | failed: vpr
skip_abc: | ch_intrinsics.v/common | failed: vpr
skip_abc: | diffeq1.v/common | failed: vpr
skip_abc: | mkPktMerge.v/common | OK
skip_abc: | raygentop.v/common | failed: vpr
skip_abc: | stereovision3.v/common | failed: vpr

Approach | test_name | status
---|---|---
iterative: | and_latch.v/common | OK
iterative: | multiclock_separate_and_latch.v/common | OK
iterative: | multiclock_output_and_latch.v/common | OK
iterative: | multiclock_reader_writer.v/common | OK
iterative: | ch_intrinsics.v/common | OK
iterative: | diffeq1.v/common | OK
iterative: | mkPktMerge.v/common | OK
iterative: | raygentop.v/common | OK
iterative: | stereovision3.v/common | OK

Approach | test_name | status
---|---|---
vanilla: | and_latch.v/common | OK
vanilla: | multiclock_separate_and_latch.v/common | failed: Simulation
vanilla: | multiclock_output_and_latch.v/common | failed: Simulation
vanilla: | multiclock_reader_writer.v/common | failed: Simulation
vanilla: | ch_intrinsics.v/common | OK
vanilla: | diffeq1.v/common | OK
vanilla: | mkPktMerge.v/common | OK
vanilla: | raygentop.v/common | OK
vanilla: | stereovision3.v/common | failed: Simulation


",0800062746d71d294ac0321dada2f6f0f9ff1105,2018-10-21 01:34:13
407,1,True,160,862,20,0,,f071425eeeea4d0a413bffa905fb51b0055df2dd,2018-10-21 00:32:47
406,30,True,3272,960,55,0,"Odin multiclock simulation and multi pass abc with itterative black boxing of clock domains

#### Description
this PR adds the ODIN simulator fix to be able to test the flow with multi clock circuits.
it has different configurations to test the flow with .flops, .whitebox and .blackbox either via an itterative approach by clock domain 

(a clok domain is specified by its initial value, edge sensitivity and clock driver for flip flops)

so far neither .flops or white box work as ABC sti strips them out, so only the black boxing approach prevents ABC from mangling them


#### Related Issue
this is related to the issue #384 with post ABC clock restoration

#### How Has This Been Tested?
each single run are tested through the modified odin simulator to support multiple clocks
This is not ready to be merged as the new simulator does not support the old input vector (the simulator clocks are driven by input file or when generating new cricuit vectors, via command line parameter).
the regression test for ODIN need to be redone and this is not finished yet as we are rewritting the regression suite to be stronger and have a basic suite, hand written for reliabilility.

To run the test through the modified flow and verify different model I have provided a regression suite 
accessible via `./run_reg_test.pl vtr_reg_multiclock`
",7acb2c57c5c81292a42fc20368df70d89a89c3a0,2018-10-20 17:51:14
405,115,True,6008,410,83,0,"Added Clock Modeling Support in VPR

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",4a5867cb281173c8fde7f05132d91fc629fcb9a4,2019-03-08 08:28:09
404,3,False,51,5,4,1,"#### Description

Adding a generic function for getting a port's bit name to` Netlist` class. Follows the convention of the existing functions.

Also does some minor additions to `physcial_types.h` by adding strings for the `pb_type_class` enum and convenience functions for getting the number of input, clock and output pins.

#### Motivation and Context
This makes a bunch of upcoming code simpler.

#### How Has This Been Tested?
It is used by upcoming code and the existing netlist writer.",ca22c302e3697710b322a46088d450ef3ad34e04,
403,2,False,14,8,1,0,"#### Description

In `route_connection_delay function` if `get_rr_node_index` fails to find a the `rr_node_index`, don't call `calculate_delay` (as it will fail with an assert). Instead just force a false return code.",c2213f3175fef8a6fb0eab70b0ab4acf7fc01f96,
401,1,False,9,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",a52d3e4cf7c68696ef9731cbbfa4b827db7b7cde,
400,1,True,4,8,1,1,Minor style cleanup in `output_clustering.cpp` file.,71ba556ced6351763464f69913bb3a6a6c3d0e49,2018-10-09 23:02:13
399,1,True,15,15,1,1,"Before;
```
net temp0 num targets 2
NULL

net outc num targets 2
NULL
```

After;
```
net temp0 num targets 2
(1207-->0) (0-->45) (45-->90) (90-->103) (103-->108) (108-->112) (112-->107) (107-->130) (130-->180) (180-->1253)

net outc num targets 2
(181-->131) (131-->223) (223-->224) (224-->99) (99-->80) (80-->35) (35-->1209) (1209-->1208)
```",b2f1faea0c0d33762fe491ea2c202f41fd12bc76,2018-10-09 19:15:52
398,2,False,9,9,2,0,Minor spelling fixes in the packer files.,496574f9a0c0dd658de2bcc7aa0cac7944e424fc,
395,1,True,6,0,1,1,"#### Description
When loading the rr graph, bounds check ptr_num (e.g. track_num) for type == CHANY.

#### Related Issue

#### Motivation and Context
CHANX ptr_num's have to abide this restriction.

#### How Has This Been Tested?
Ran ""./run_reg_test.pl vtr_reg_basic""

#### Types of changes
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",7ebcf0afc97f55fca3d6eb75019ea1ea8486fa7a,2018-10-01 18:35:33
392,1,False,1,1,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",356c97973960efd6b8d3861046884e3d9926943a,
385,18,False,2100,515,42,0,"this is in reference to the issue #384 

This PR allows the flow to do the following in any combination:

- run odin simulation on the pre ABC blif vs post ABC
- use the latch information restoration script with and without the typo fix.
- can run one of the 4 ABC flow type:
-- iterative black boxing of latches with different clock domain, 
-- a blanket approach where all latches are black boxed
-- use vanilla latches
-- dont use abc at all

a clock domain is uniquely identified by the triplet of edge type, control, and initial value (which is pushed onto ABC during optimization)
This PR uses odin to generate test in/out vectors and then compare these against the post synthesis blif file. 
We include the initial value in the clock domain so that simulation on the pre vs post optimization blif file can be used to verify correctness of the circuit in simulation. 



",a14f4f93a0e95d0a9ff54eb507b1aa60bac22dd7,
383,3,False,109,38,5,3,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Further optimizations to RCV (hold optimization algorithm)
- cap min budget below max budget
- don't increment total path delay between RCV budget iterations
- set target delay = min delay
- allow higher iteration numbers for budget allocation (20 vs 7) and smaller stopping condition (1e-12 vs 800e-12). These numbers are different from the RCV paper but have shown to yield better results experimentally.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
RCV budgets values were working, but they weren't idea. The min budgets could've been smaller, and the max budget could've been bigger. With these changes, the budgets are closer to their ideal values and therefore wastage of wire is minimized.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
Ran multiple circuits many times to see the consistent improvement
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
It only affects the results when hold optimization is turned on

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ X] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ X] All new and existing tests passed
",61079b91522d06c9fa9e00e8ce6d01bdeba029ec,
374,1,True,57,58,51,7,"#### Description
The motivation in this change is to make it easier to run under NixOS,
which does not support absolute paths.  Note that a part of the scripts is
already using the `#!/usr/bin/env ...` shebang, which correctly calls the
executable which is present in the user's environment.  This commit makes this
behavior consistent over all scripts.

Also, the executable flags were missing for part of the scripts.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
In addition to making it easier to use under NixOS, this should give consistent behavior when users have different interpreter versions in their paths as compared to the system-wide installed ones.

#### How Has This Been Tested?
Tested by running the perl tests in the toplevel directory.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x]  New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",1c93cd8690d2fc349b117a34028598cd2ac0dfa0,2020-02-11 16:09:15
373,4,True,7,7,1,2,Some minor fixes to issues I found in the timing modeling tutorial.,3b00ec8a8893b786475ed11dbe4a344acc4b161b,2018-07-31 18:42:11
370,1,True,3,1,1,1,Fixes #369.,effd73d9ca0434b315499082497a831cdeefc580,2018-06-27 14:28:56
366,1,True,1,1,1,4,Means you don't have to modify the Makefile to set BUILD_TYPE. You can just go `export BUILD_TYPE=debug` and you get a debug build.,0f4f6734a6d941cf585f9d1429d9ff1a40b597f2,2018-06-18 16:18:58
365,8,False,455,106,10,6,"This is a work in progress. I'm sending it to get feedback on the change.

This makes the packer work when there are multiple modes which change the routing pattern through a cluster.

The packer will try and pack everything together, then it will fail routing causing it to fall back to checking routing atom-by-atom.

This will then cause the packer to not add the conflicting modes into one cluster.
",ac31bfa012ad1468845325bdefb88cffc064f830,
364,1,True,2,2,1,1,"This makes the output *much* easier to read.

Before;
```
Node 127
	BEL_FF-SB_FF[0].E[0]
	Type: LB_INTERMEDIATE
	Capacity: 1
	Intrinsic Cost: 0
	Mode: 0   # Outedges: 0

	Mode: 1   # Outedges: 0

	Mode: 2   # Outedges: 5

(140, 1) (141, 1) (142, 1) (143, 1) (144, 1)
(145, 1)

	Mode: 3   # Outedges: 1

(144, 1)
```

After;
```
Node 127
	BEL_FF-SB_FF[0].E[0]
	Type: LB_INTERMEDIATE
	Capacity: 1
	Intrinsic Cost: 0
	Mode: 0   # Outedges: 0
	Mode: 1   # Outedges: 0
	Mode: 2   # Outedges: 5
		(140, 1) (141, 1) (142, 1) (143, 1) (144, 1)
		(145, 1)
	Mode: 3   # Outedges: 1
		(144, 1)
```",2d82372943c46ab50c2d42a4a0ddceedb5809264,2018-06-14 14:32:43
363,5,False,128,3,3,4,"#### Description

These changes improve the BLIF and Verilog output of VPR. It does to major things;
 * Adding attribute / parameter output (which come in via the eblif file).
 * Adding support for blackbox in the post routing output.

#### Motivation and Context

Allow logic equivalence checking when using black box models.

#### How Has This Been Tested?

Tested in the https://github.com/SymbiFlow/symbiflow-arch-defs repository.

I'm unsure how to add tests for this change?

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [X] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",288a03cbed1072f2e9093cf07a1593242a5d5084,
358,1,True,2,2,1,1,Output the human name for the node type.,82da06d4534b16793a771e351d34b5a041f976de,2018-06-08 18:49:07
357,1,False,16,16,1,1,"When all blocks have fixed locations, vpr gets stuck in an infinite loop.",bd1d7488864ed63178100b267ada259aad0ef9c0,
356,1,True,0,2,1,1,This define is not referenced anywhere in the code base.,d70d3c26a7f519296158d391e9ebb5e659793fe2,2018-06-08 18:48:29
348,1,True,2,2,1,1,"Small fix to the place type mismatch error. Found when using `--fix_pins` and being unable to understand why the error was happening.

Previous: 
```
Error 1857: Block 10 type does not match grid location (1,10) type.
```

Current: 
```
Error 1857: Block 10 type (BLK_TL-PIO_R) does not match grid location (1,10) type (BLK_TL-PIO_L).
```",fb5c629364954059b72ce1dc54e5a160b96e1a62,2018-05-28 15:43:43
347,6,True,15,15,10,1,Fixing a bunch of small typos in the vtr code base.,1ea5d529f0dbfbe48879b93cd4edac3f067d03b7,2018-05-23 15:35:40
345,1,True,15,4,2,0,,02c3bd0a3774322a668c68afd306d8717f8bbc40,2018-05-17 21:41:18
344,2,False,21,23,3,2,"#### Description

While trying to debug #246 I made these changes to [`vpr/src/route/check_rr_graph.cpp`](https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/master/vpr/src/route/check_rr_graph.cpp) to better explain the errors I'm seeing.

The new errors look like;
`Message: in check_rr_graph: 2 edges between node 176 and node 299 but edges are not a buffer and a pass gate (actually pass gate).`

`Message: in check_rr_graph: node 27 (IPIN) connects to node 224 (CHANY) 2 times - multi-connection only for CHAN->CHAN.`",c48414f0d5fda9716515bc164f3340438c88117f,
343,1,False,3,1,2,1,"#### Description

When using `BUILD_TYPE=debug` ace2 fails to compile with the following error;
```
[100%] Building CXX object ace2/CMakeFiles/ace.dir/sim.c.o
In file included from /vtr-verilog-to-routing/abc/src/misc/extra/extra.h:44:0,
                 from /vtr-verilog-to-routing/abc/src/base/abc/abc.h:42,
                 from /vtr-verilog-to-routing/ace2/ace.h:6,
                 from /vtr-verilog-to-routing/ace2/sim.c:1:
/vtr-verilog-to-routing/ace2/sim.c: In function ‘void ace_sim_activities(Abc_Ntk_t*, Vec_Ptr_t*, int, double)’:
/vtr-verilog-to-routing/ace2/sim.c:297:9: error: ‘threshold’ was not declared in this scope
  assert(threshold > 0.0);
         ^
ace2/CMakeFiles/ace.dir/build.make:230: recipe for target 'ace2/CMakeFiles/ace.dir/sim.c.o' failed
make[3]: *** [ace2/CMakeFiles/ace.dir/sim.c.o] Error 1
make[3]: *** Waiting for unfinished jobs....
CMakeFiles/Makefile2:1347: recipe for target 'ace2/CMakeFiles/ace.dir/all' failed
make[2]: *** [ace2/CMakeFiles/ace.dir/all] Error 2
make[2]: *** Waiting for unfinished jobs....
[100%] Built target vpr
Makefile:140: recipe for target 'all' failed
make[1]: *** [all] Error 2
Makefile:45: recipe for target 'all' failed
make: *** [all] Error 2
```

This is caused by the assert here
https://github.com/verilog-to-routing/vtr-verilog-to-routing/blob/95a6df3bf297ce7985d2dd24ccc9e4cd212497b2/ace2/sim.c#L288-L301

This can be fixed by using the `__unused` environment.

```
diff --git a/Makefile b/Makefile
index e0641eff8..6014f4d94 100644
--- a/Makefile
+++ b/Makefile
@@ -15,7 +15,7 @@
 # Possible values:
 #    release
 #    debug
-BUILD_TYPE = release
+BUILD_TYPE = debug
 
 #Allows users to pass parameters to cmake
 #  e.g. make CMAKE_PARAMS=""-DVTR_ENABLE_SANITIZE=true""
```
",1e313046f6317ccc3542992310e65362c0b146ec,
336,3,False,20,20,15,0,"#### Description
Fixes for various typos found in the source code",64f2c731ff7f792ffe36ad800b3a6c34ca9dcfea,
327,5,True,67529,67515,381,7,"#### Description
This pull requests replaces all CRLF line endings in source files within the repository, and 

#### Related Issue
#326

#### Motivation and Context
The presence of CRLFs scattered inconsistently across the source code makes correct text editor configuration error prone.

#### How Has This Been Tested?
Not appplicable

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",99e11cc25fe39fddd72161d4dc8895bfa4d2c88f,2018-04-25 18:12:27
323,2,True,54,51,1,1,"#### Description

 * Improves error message for CB/SB lists by including the actual numbers.
 * Strip all trailing whitespace in the file.",b8b03c257d3cd1a0d8723c0533b803d31b085650,2018-04-21 15:13:58
319,4,True,89,40,3,9,"<!--- Provide a general summary of your changes in the Title above -->
Add additional metadata to rr_graph <pin_class> entries to make manipulating rr_graphs easier outside VPR.

I've taken @mithro's changes towards this and made some minor cleanup for this PR (commit description, minor formatting, drop unrelated changes)

#### Description
<!--- Describe your changes in detail -->

rr_graph_writer.cpp was modified to output this new format with corresponding changes in rr_graph_reader.cpp

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
This supports work in the symbiflow-arch-defs repo towards importing ice40 routing, which cannot be represented by the arch.xml format

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Currently rr_graph exports pin classes like this:

    <pin_class type=""INPUT"">0</pin_class>

Where the 0 index comes from a std::map internal to vpr. It is very difficult for external applications to predict how these indices are assigned to determine the original pin names.

@mithro proposed this should be written instead like:

    <pin_class type=""INPUT"">
    <pin index=""0"" ptc=""2"">bt.outpad[3]</pin>
    </pin_class>

Which is now very explicit in both name and indexing

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
""./run_reg_test.pl vtr_reg_basic vtr_reg_strong"" passes, which includes an rr_graph test. I also ran some tests against the symbiflow-arch-defs repo

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [X] Breaking change (fix or feature that would cause existing functionality to change)

This is a breaking change to the rr_graph format, although I'm not under the impression its under widespread use

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",927ee0d44ed316202762c8fe24fbb173d5646354,2018-05-22 15:23:43
317,1,True,2,2,1,1,"Signed-off-by: John McMaster <johndmcmaster@gmail.com>

<!--- Provide a general summary of your changes in the Title above -->

Some of the examples use ""./run_reg_test"" instead of the correct file name ""./run_reg_test.pl""

#### Description
<!--- Describe your changes in detail -->

Change two entries

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
N/A

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Makes it easier to read

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Viewed in markdown editor

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
N/A

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
N/A
",f8abb112b6ddfaeaa29b3067ead51a2a1b11a10e,2018-04-14 14:47:32
316,1,False,4,0,1,3,"#### Description
If a block doesn't have any `fc_specs`, then it should be skipped.

#### How Has This Been Tested?
I'm unsure how to test this? I assume I just need to create an architecture which has blocks with no `fc_specs`. Is there an example I should copy from?
",9ba3afb69291bf21a4794441c0e690ae2aa4aaa9,
315,1,True,1,1,1,0,"Signed-off-by: John McMaster <johndmcmaster@gmail.com>

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
http://docs.verilogtorouting.org/en/latest/tutorials/timing_simulation/#generating-the-post-implementation-netlist
Clearly says to use the ""--gen_post_synthesis_netlist"" option but the example has ""-gen_post_synthesis_netlist"". Also verified the former is only accepted by the actual tool

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Make tutorial easier to follow

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Ran make html
Opened ./_build/html/tutorials/timing_simulation/index.html
Looks fixed

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
Pretty isolated

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
I didn't run any other tests, but I can if you really think I should",fc2512a85ba2b0c778a780d28f653af5dfb3121f,2018-03-30 23:40:30
314,22,True,928716,287,1775,7,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
Upgrade VTR to use the newest version of ABC.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- lease link to the issue here: -->
Supersedes #312

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
Cherry picks changes from #312 and refactors it to include ABC as a git-subtree.
Thanks to @aarongraham9 and @jgoeders for all the hard work!

As implemented here VTR now uses an un-patched version of ABC.
In the future, upgrading ABC will only require running:
```
./dev/update_external_trees.py abc
```
from the VTR root, which will automatically update the ABC sub-tree to the latest version.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

* ODIN full regression
* vtr_reg_basic
* vtr_reg_strong

The QoR results for basic/strong have been updated. The nightly/weekly tests take a long time to run, and so will be updated after this is merged.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] All new and existing tests passed
",0208312a1cf4dc496faa94cc4bcbd978c11317f1,2018-03-29 18:07:13
313,59,False,290,17,15,1,"these changes allow Odin to build heterogeneous substructure of the soft adders inside Odin 
they can also be modified at runtime

#### Motivation and Context
it reduces the critical path delay of circuits
*spreedsheet linked at the bottom for exact changes

#### How Has This Been Tested?
microbenchmarks, full benchmark, vtr strong, vtr nightly

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [x ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed


[Odin adder changes result.xlsx](https://github.com/verilog-to-routing/vtr-verilog-to-routing/files/1856886/Odin.adder.changes.result.xlsx)
",a2b2d23953e75d45e29d001221c3de27dde6cd22,
312,44,False,919398,391331,4329,7,"<!--- Provide a general summary of your changes in the Title above -->

VTR: Update ABC Optimizer Source

#### Description
<!--- Describe your changes in detail -->

Updates the ABC Source version to ABC [HG hash: 6e3c24b3308a](https://bitbucket.org/alanmi/abc/commits/6e3c24b3308aeba7325a9dbfb5d5d94f84ea5d17) which is from January 5th, 2018 (2018-01-05).

Provides a script that is part of the VTR Flow to restore Multi-Clock Information to Latches after ABC has stripped them away.

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Fixed #298 and #299 .

Should fix #269 as well.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Provides increased netlist optimization in VTR overall over the current version of ABC.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Ran `ODIN_II/verify_full.sh`, `run_quick_test.pl`, `vtr_reg_basic` and `vtr_reg_strong` regression tests.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [X] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] All new and existing tests passed
",a2d056e44834909b1036a2fc37ee6dabeba251bb,
308,8,True,1151,865,218,7,"#### Description
 - `<pinlocations>` is now optional, and will default to a pattern of `spread` if not specified.
 - `<fc>` is now optional, if not specified Fc values from `<default_fc>` (using the same set of attributes as `<fc>`) inside `<device>` are used. Omitting `<fc>` without including `<default_fc>` in the device causes an error.
 - For clarity, the attributes of `<fc>` have had the `default_` prefix removed (so for example `default_in_type` becomes `in_type`). **This is a breaking change**. An upgrade pass has been included in `upgrade_arch.py`, and all included architecture files have been updated.


#### Related Issue
This implements #279 

#### Motivation and Context
As discussed in #279, sometimes it is useful for testing to use the same `<pb_type>` as either a tile in itself or a component of a tile.

#### How Has This Been Tested?
Regression tests were run, and tests of the new functionality were done in `symbiflow_arch_defs`.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [X] New feature (change which adds functionality)
- [X] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [X] My change requires a change to the documentation
- [X] I have updated the documentation accordingly
- [x] I have added tests to cover my changes
- [X] All new and existing tests passed
",1e36145482ee3d16465c0b6a6081c2e3bab3b8b9,2018-03-23 15:34:55
307,8,True,149,21,8,6,"This extends the work on EBLIF support by tracking the parameters and attributes of netlist block objects, and outputs them in the XML using the following syntax:
```
<attribute name=""test_attr"">1</attribute>
<parameter name=""test_param"">x</parameter>
```

#### Related Issue
This fixes #281

#### Motivation and Context
This will help in the efforts to support real FPGA architectures in VPR

#### How Has This Been Tested
Standard tests and specific tests with attributes and parameters in eblif types were done

#### Types of changes

- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [X] All new and existing tests passed
",de5d84bb85115065daa70868591c5c2e163e6d96,2018-03-16 15:15:35
305,1,True,32,0,1,2,"Probot AutoLabeler bot will add labels to pull requests automatically
based on this config.

Having these labels makes it easier to see at a quick glance what a pull
request is about.

More info here;
 * https://github.com/probot/autolabeler
 * https://github.com/apps/probot-autolabeler

## Setting up

After merging this pull request. Add the [Probot AutoLabeler GitHub app](https://github.com/apps/probot-autolabeler) to either all verilog-to-routing repos or just the vtr-verilog-to-routing repo. Then on the next pull request the bot will add labels as shown in the screenshot below;

![image](https://user-images.githubusercontent.com/21212/37006396-06364e60-208d-11e8-95c0-08acc38d7439.png)
",78e1ea548ebb4d3e404908b15001f6d5ad94480b,2018-03-06 16:14:38
301,2,True,75,75,1,0,Fixed some small white space issues inside [file_formats.rst](docs/src/vpr/file_formats.rst).,e5f20973b91cb6d9ec3f8d7a2037fb13d07548be,2018-03-05 14:03:46
300,1,True,166,0,6,4," * Builds vtr.
 * Runs the vtr_reg_basic tests.
 * Has pretty colors.

As travis runs on pull requests **before** you merge them into the repo, this is the **first step** towards adding style checks to the repository which make sure that the code style continues to improve. It also makes sure that at least basic tests will pass when you merge the change.

## [What is Travis CI?](https://docs.travis-ci.com/user/for-beginners/)

Travis CI is a free CI system for open source projects. It enables building and testing of open source projects as part of the pull request and gives you a signal about if the build completed successfully - you can see this on another one of my projects in the screenshot below;
![image](https://user-images.githubusercontent.com/21212/36960529-4ab10f6c-1ffc-11e8-9168-7d79c4eb85c4.png)

## Travis CI output

The actual travis run output is shown below and can also be found [here](https://travis-ci.org/mithro/vtr-verilog-to-routing)
![image](https://user-images.githubusercontent.com/21212/36960458-f82b121a-1ffb-11e8-957f-c5be8b272d83.png)

## Deploying Travis CI

 Step 1 - [Log into Travis CI](https://travis-ci.org) and allow it to create hooks on your repository.
 Step 2 - Go to your profile page - https://travis-ci.org/profile/<github user name>
 Step 3 - Click the verilog-to-routing organization on the left
 Step 4 - Click the little slide box against the vtr-verilog-to-routing repo. It should turn blue.
 Step 5 - Merge this pull request.




",d2ac2b9761a648781a9927a162378e537c84a374,2018-03-05 15:11:02
297,8,True,360,40,13,1," * Include information about what dependencies are required.
 * Adding `apt-get install` instructions for Debian.
 * Adding `dnf install` instructions for Fedora.
 * [Add the root `BUILDING.md` into Sphinx generated docs.](http://vtr-verilog-to-routing.readthedocs.io/en/latest/vtr/build_vtr.html)
 * Added the [`README.deveopers.md`](http://vtr-verilog-to-routing.readthedocs.io/en/latest/vtr/dev/index.html) and [`CONTRIBUTING.md`](http://vtr-verilog-to-routing.readthedocs.io/en/latest/vtr/dev/commit.html) into the Sphinx generated docs under [a new ""Developing"" section](http://vtr-verilog-to-routing.readthedocs.io/en/latest/vtr/developing.html).
 * The results can be viewed here -> http://vtr-verilog-to-routing.readthedocs.io/en/latest/vtr/developing.html",0296a1695797a5d6af1fedd31c0c5737e1a5552c,2018-02-27 20:06:25
296,11,True,1079,1033,32,2,"#### Description

 * Makes the ID generation for tags in the architecture definition docs more human friendly. See https://github.com/verilog-to-routing/vtr-verilog-to-routing/commit/2776d2a11e47c2e49dcfd3bd16567eb66cd6eaf4    
    > Ids now use the name of the tag by default. If there is a collision
    > because the same tag name is used at multiple levels, it will instead
    > use the last title element in the form: `tag-last_title-tag_name`.
    > 
    > Example without collision:
    >  * PB Type - [`#tag-pb_type`](https://docs.verilogtorouting.org/en/latest/vpr/arch/reference.html#tag-pb_type)
    > 
    > Collision example:
    >  * Interconnect MUX - [`#tag-interconnect-mux`](https://docs.verilogtorouting.org/en/latest/vpr/arch/reference.html#tag-interconnect-mux)
    >  * Wire Segments MUX - [`#tag-wire-segments-mux`](https://docs.verilogtorouting.org/en/latest/vpr/arch/reference.html#tag-wire-segments-mux)

 * Fixes whitespace in the docs.
 * Lots of spelling fixes.
 * Fixed escaping of a number of values.

#### Related Issue

 * #280

#### How Has This Been Tested?

You can find [a version of the docs deployed with these changes here](http://vtr-verilog-to-routing.readthedocs.io/en/latest/).",04827b296f35bed8185b24932bd29a0a4e5fb9bd,2018-02-19 17:04:24
295,2,True,8,8,2,0,"`s/Inpterpretted/Interpreted/`

[See the result here](http://vtr-verilog-to-routing.readthedocs.io/en/inpterpretted/arch/reference.html#tag-<fcdefault_in_type=).",37d5ba96b2755cd417a1ac975e58d0679b868e7f,2018-02-19 15:52:20
294,1,True,264,334,2,2,"#### Description

Replaces hand-written XML generation of cluster packing output (.net file) with equivalent pugixml calls.

#### Related Issue
#291 

#### Motivation and Context
Reduce likelihood of errors and overall complexity of output generation code by leveraging a well-tested library.

#### How Has This Been Tested?
Output from the original and pugixml implementations were passed through 'xmllint --c14n' and then diffed. Inputs, outputs, and clocks tags have differences in leading/trailing white space but no other meaningful changes were noticed. 

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",3579f0d9d83e1f89a311fe800fc5a3e61f237f05,2018-02-27 21:48:52
293,1,True,12,4,1,1,"Previously it would either fail the assert or segfault. Now it outputs
errors like the following;
```
Error 1:
Type: Architecture file
File: artix7/arch/xc7a50t-roi-virt/merged.xml
Line: 22106
Message: Unable to find block BLK_MB-INT_R-CLBLL_R-INT_R.
```",986e8d29c70465a5e59e3f9620b23658f4b6b5bb,2018-02-15 15:15:44
290,4,True,9,8,1,1,"This is designed to make building and debugging custom RR graphs easier by providing more information about the source of the problem in certain common errors, and switching [] to at() in one place where bad RR graphs were previously causing very difficult to debug segfaults.",e666ccceae7a5b6b14c34be175e0351966aa8bd2,2018-02-14 16:52:50
267,3,False,608,46,5,1,"Kinda Fixes #266 

Previously if you had more than 29 tile types, the code in `vpr/src/draw/draw.cpp` would try to read past the end of the color array and then segfault.

This patch adds all the named colors from CSS meaning you can now have around ~150 tile types before you run out of colors. ~150 tiles should be enough for everyone! :-P

When you run out of colors, it will now die with an assert rather than just segfault randomly too.

Maybe be a better idea to just wrap or something instead?",29302c4eaa8e3747eb65a9765badad0dee0c6904,
261,1,True,5,1,1,1,"#### Description
Throw an error about the which blif_model is missing and on what pb_type that blif_model is referenced from. Previously it would just die with an assert which made it hard to figure out what was missing.",95d0a5f9b642e06b76d0ec50e69289a221de9e4a,2017-12-11 15:12:25
260,1,True,11,10,1,1,Before this pull request every segment would contain the sb/cb values of the first segment. After this change it correctly outputs the sb/cb values for each segment.,6feafd55ab198145d98dd3b0d2c0d0e809a9e77c,2017-12-06 14:05:55
255,1,True,3,3,1,0,"Small fix to the `arch.echo` file output.

Before: `fc_value_type: FRACTIONALfc_value: 0.000000segment: globalpins: 0 1 2 3`
After: `fc_value_type: FRACTIONAL fc_value: 0.000000 segment: global pins: 0 1 2 3`
",69889e5ba80c46eacc4041a88545bcc3d4a5775e,2017-11-28 20:27:54
254,1,True,5,0,1,0,It's useful to get an echo file after an rr_graph is loaded from an external file.,6fce98581727718371dacf1bc4ce40aac23b2a99,2017-11-28 20:40:55
253,1,False,24,6,3,1,"During #245 I have been generating rr_graph and other xml files. In a couple of places vpr would just die with a cryptic assert.

These changes make vpr instead die with a useful error message about what went wrong.",70fce451aa0aea588cfe5edabb7e8519b868fb57,
251,1,True,2,3,1,1,"Previously newType was only ever set to NUM_RR_TYPES which meant that
the side and direction processing was never called.

Fixes #247.",9dd7fe77ecd432348e408f468b906017e7a471f7,2017-11-27 15:28:25
249,3,False,16,3,4,0,Fixes #248 ,636afd9ea02a00c4d8dc25b7dd18b56280b98210,
244,1,True,118,0,3,0,"Adding test/verification files for ansi style port declaration for ODIN.

Verification files are: ansiportlist.v, ansiportlist_input, ansiportlist_output

",a5941440ba0219066e5027274825d566adcdff43,2017-11-19 16:38:37
239,1,True,1,1,1,1,"The old code was drawing the text above the bounding box. Now, the text will actually be centred on the given point.

Quite embarrassingly, I introduced this bug years ago.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",e57cd2d4f21e6b3490480c9e632f246b7e11ea90,2017-09-27 13:02:46
238,1,False,1,1,1,0,"the old code was drawing the text above the bounding box. Now, the text will actually be centred on the given point.

quite embarrassingly, I introduced this bug years ago.

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",9a71ba8ede070c8b5e6bf4f28020e2a8908b8da0,
232,239,True,7722,7130,114,1,"#### Overview
Refactored AtomNetlist into a base Netlist class to be used by the ClusteredNetlist, and changed clustering related code accordingly.

#### Description
The AtomNetlist is almost entirely emptied of component (Block, Port, Pin, Net) related members and functions into the Netlist class.
t_model & t_model_ports remain in the AtomNetlist.

The ClusteredNetlist derives from the Netlist class, and contains members for external block connectivity (pin indices, external nets), block type (CLB, RAM, DSP, etc.) & internal physical hierarchy (t_pb).

Code within pack/place/route/timing that use the ClusteredNetlist has been modified to use it's strongly typed components, where integers were previously used. 

#### Motivation and Context
Since the AtomNetlist has been refactored, the clustering code should follow suite in order to improve the code base's maintainability and readability. Much of the ClusteredNetlist code is spread into various different structures across several files. This makes it hard to implement changes to the ClusteredNetlist without tracing through a significant portion of code.

#### How Has This Been Tested?
Tested on all four regression test suites for QoR (basic, strong, nightly, weekly).

No substantial changes to QoR besides a ~20-30% reduction in pack time, and minor reduction to place & route time.

There is currently a memory leak from _pack/cluster.cpp_, specifically in try_place_atom_block_rec from _parent_pb->name = vtr::strdup_

#### Types of changes
- [ ] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [x] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [~x] All new and existing tests passed
   - Valgrind tests show additional memory leaks
",c508db23bce9aa91efad0e382fdff1f09c2dcc42,2017-09-01 14:51:40
230,3,True,121,29,3,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->
- Add Command Line Option `-black_box_latches` to Treat Latches as BlackBoxes and Output them as such
- Add flag in output_bliff.cpp to track if we have generated a BlackBoxed Latch
- Output Latch BlackBox Model to BLIF File if Command Line Argument is specified and if we have previously generated a BlackBoxed Latch in the BLIF File
- Output Latches as BlackBoxed Latch when Command Line Argument has been specified

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->
`ABC` not handling Latches correctly.

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->
It solves an issue with `ABC` not handling Latches correctly.

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->
Ran `ODIN_II/verify_full.sh`, `run_quick_test.pl`, `vtr_reg_basic` and `vtr_reg_strong` regression tests with no qor test or run failures.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",b8c92ecb3259aec4709d7775291c457bce4c87e1,2017-08-17 22:53:45
228,6,True,268,4,7,0,"Adding 2D array support



",2e1987d3d4ae068b745308b22c43b057c13935cb,2017-08-13 12:58:09
224,1,False,0,0,0,0,"update_to_official

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",1f4531c686cf6946ed5b75d0f42cc67fcb179b0a,
223,3,True,8,7,2,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

- Convert C style string in `make_string_based_on_id` to a C++ string
- Update Contributors Section in `README.md`, add myself as a Contributor
- Correct function name, `convert_int_to_bit_string`, in comment for function `convert_long_long_to_bit_string`

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

Continuing Odin C++ Conversion

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

Modernizing and Cleaning up Odin

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

Ran `ODIN_II/verify_full.sh`, `run_quick_test.pl`, `vtr_reg_basic`and `vtr_reg_strong` regression tests with no related qor test or run failures.

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",ca705aa4b5395d679dbe1e4bcb3e18429cd75306,2017-07-26 16:40:07
219,3,True,7,8,2,0,Revert back fix for bug 173,9d542a153907357fa78eafc6621108700bd2049b,2017-07-23 03:15:06
218,1,True,45,39,1,0,Resolving few more warning messages,5ad46f140f97c1199afba0733f2d295d95ed5909,2017-07-21 00:01:44
217,1,True,26,22,4,0,Fixing few ODIN warning messages,dc619f4089cc6a9e2b507194e2196f70438bcfe1,2017-07-20 00:11:54
214,6,True,361,539,11,0,"#### Description
Odin was not truncating verilog input values before converting them to numbers but was properly truncating when converting to binary string.
ie. 

proper conversion:   3h'8=b000 = 0
odin result was:  3h'8=b000 = 8

the fix now deals with the verilog number input when taking them as token by FLEX and convert them to binary strings so that the only thing ODIN deals with are binary strings.

Also added parsing support for all (that i could find) verilog syntax.
it will now throw an error message describing that it is not supported by ODIN.

I've also paved the way to support input/output declaration inside module brackets
i.e
module(
    input clk,
    ...
);

fixed the fact that it supported things it shouldn't. like
module(
 clk = some_defparam
);

#### Related Issue
no issue relevant to this that i know of.

#### Motivation and Context
while doing revamping of the source of ODIN the mishandling was noticed and needed correction
so that it would follow verilog standards

#### How Has This Been Tested?
ran the test using the pre-built docker environment
compiled using clang
ran microbenchmark and full regression test included in ODIN
ran vtr_reg_strong

these changed breaks test or1200 in ODIN_II/FULL_REGRESSION_TESTS/
which has been moved to ODIN_II/FULL_REGRESSION_TESTS/bad/
after further test and 

#### Types of changes
- [ ?] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ x] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed

will need to update or1200.v and or1200_output so that it functions properly again
(tried to extend the bit length of hex values to the closest higher multiple of 4 but the output vectors differed).

all qor test passed on vtr_reg_strong so I don't expect much to break.
",89b84f71f4f9bf238abd0bef656263e3c6cf9bbc,2017-07-16 15:05:46
211,1,True,205,3,3,1,Fix for Bug 173,e7801d3e90a044019312109d9f5c1f3b6162981f,2017-07-10 03:46:50
210,7,True,1090,2045,39,0,"change the ast_elaboration of ODIN to std::string. (part of the ODIN conversion to c++)
also changed all c files to cpp to remove compiler warning (when using clang)
full_reg_test... passed
microbenchmark... passed
vtr_reg_strong  ... passed
",6df7ac5a539c3ea86a3074a1728b6211c754e561,2017-07-06 14:15:15
207,1,True,4,5,2,0,fix for warning from last commit,2c048b8e809e6ddcc509172dd671f51efd251c65,2017-06-24 12:22:22
206,1,True,3,5,1,0,"same as previous commit, forgot to merge changes to odin_ii.c",96666d181ddd999d2a8166143c6cf42d76c11818,2017-06-23 23:45:27
199,5,False,258,4,3,5,Adding inout support,b4aab7b95aac1d719b26621bf7c8997dded4c1e1,
197,4,False,161,1,3,0,Adding support mentioned in Bug 173,811276e1617e2e2c7d92b426a6384724a703ecc2,
196,23,True,1339,2576,90,2,"#### Description
all string mgmt and memory management is done using vtr util
some functions have been reduced.

#### Related Issue
none, just refactoring

#### How Has This Been Tested?
full_reg
micro_bench
vtr_strong

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ x] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [x ] My change requires a change to the documentation
- [ x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",40f2bf2ec8cb876ab5f47c5743685154da1a8fc6,2017-06-23 23:18:34
195,1,True,2,1,1,0,"Adding a per-requisite package
Updating ODIN make command",5926b7acfb184977571348ed9d2c1f9928ff47b6,2017-06-12 21:22:54
193,3,True,4428,4379,51,0,"#### Description
further down the tree i changed all mallocs to calloc to make sure everything was always init to 0 since we use strings so much. in the process it broke something in the module name assignment. to bo honest i was really thorough when i did the conversion and made sure all the mallocs where appropriate and swapped some weird value people put there 

i.e
int id= 3245;
char *to_print = (char*)malloc(sizeof(id)+1);
sprintf(to_print, ""%d"", id);

because here size of int is 4 bytes and we only need 5 bytes to print it works. but what if the id gets bigger... ? 

i've rolled back all those changes but i will need to check them one by one because theres some issue that could arise from this... ?
(what is the highest module_id we could go to? 9999 is the cap right now)

#### Motivation and Context
my last pull request failed a parameter test. 

#### How Has This Been Tested?
microbench
full reg
vtr strong reg

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ x] Bug fix (change which fixes an issue)

#### Checklist:
- [ x] All new and existing tests passed
",a691a59beaf85a1811f2750384b2b13efcb16920,2017-06-01 11:56:42
192,3,True,1292,1311,9,0,"#### Description
-added warning for unsupported binary & unary calculations,
-merged calculate with resolve node since they do the same, but extended resolve node to resolve identifier in all cases.

-added some todo's to enable unsuported unary and binary calculations.

#### Related Issue
issue 182 (left shift with addition not working)

#### How Has This Been Tested?
using the docker build environement i ran a full regression test and a strong regression

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x ] New feature 
- parametrized shift is now functionning.
- modulo and division of numbers works 

#### Checklist:
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x ] All new and existing tests passed
",be942a10b87c197f914d43b9762c25126728f899,2017-05-31 15:04:49
191,24,True,3308,3615,50,0,same as before.. forgot to change debug back to release everything works,21fda4203dbe2e9518303c4310b10f260b023836,2017-05-31 12:07:45
190,23,False,3309,3616,51,1,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
changes to fix memory leaks and merged some redundant functions

#### Related Issue
no implicit issue but helps further down the line

#### Motivation and Context
idem

#### How Has This Been Tested?
ran a full regression test on it
",37d51818fff652b63ea3a5f04ba7647cf8d94e80,
188,10,False,19,0,1,0,"<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",16f37316bf23dbc41cdd32f123e297f7591c3f2b,
180,1,True,14,20,1,1,Updating Readme file with pre-requisites and cmake build instructions,cf7dc568a3d9e207716ab740d7dc31e2a6307706,2017-04-10 17:51:57
178,1,False,16,1,1,2,"Adding in-out support, up to AST
    ",577b508df9c659cdc586a18025bbf13bad7be8ff,
177,3,False,305,9,8,4,"Adding 2D array support

Description:

1. Added parsing logic for creating AST tree for 2D array
2. Added necessary logic for parsing AST tree
3. Added a new functions 
    a) convert_multi_to_single_dimentional_array 
    b) newArrayRef2D
    c) newRangeRef2D
    d) newVarDeclare2D
    ",c24b774ade3287c07742a168c501a1cbe8d84403,
176,2,True,4,4,1,1,"Two mistakes were found. First mistake still needs a fix. ( Thanx for the hard work! )
1) Incomplete sentence. It seems like the sentence is incomplete.
2) Simple typo fix. not -> note

<!--- Provide a general summary of your changes in the Title above -->

#### Description
<!--- Describe your changes in detail -->

#### Related Issue
<!--- Pull requests should be related to open issues -->
<!--- If suggesting a new feature or change, please discuss it in an issue first -->
<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->
<!--- Please link to the issue here: -->

#### Motivation and Context
<!--- Why is this change required? What problem does it solve? -->

#### How Has This Been Tested?
<!--- Please describe in detail how you tested your changes. -->
<!--- Include details of your testing environment, and the tests you ran to -->
<!--- see how your change affects other areas of the code, etc. -->

#### Types of changes
<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)

#### Checklist:
<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->
<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",16eb55acfb7a351e22dee4a349929348a198d412,2017-03-03 16:08:14
159,4,False,684,528,1,2,"<!--- Provide a general summary of your changes in the Title above -->
#### Description

<!--- Describe your changes in detail -->

I made some changes to the file ""vpr/SRC/route/build_switchblocks.c"" to facilitate the process allocating and loading the switch blocks connections and to make it easy to read and understand. The problem I found in the older code was that, when iterating through the whole FPGA board(see line 323-333 in the older file), for each (x_coord, y_coord) location, the ""from_wire"" variable would better not be the first iterator, because every time we compute for one ""from_wire"" value, we have to re-compute some values that every ""from_wire"" shares, which is not efficient and elegant. 

For example, every time we compute for one ""from_wire"" value, we need to call the function ""get_switchpoint_wires()"" to fill the variable ""potential_src_wires"", and we need to do a lot of checks to skip some illegal ""from_wire"" values. Here, we can see two things going inefficient:
1. For a given type of wire connection(like from the middle point of ""l2s"" to the ends of ""l2s"", etc.), we get the same ""potential_src_wires"" for every ""get_switchpoint_wires()"" function call. 
2. Within the ""get_switchpoint_wires()"", we have already done the checks and return the legal ""from_wire"" array. 

So we can make three changes accordingly:
1. Reorder the for-loop as follows:

　**for** i_sb: 0 to switchblocks.size()
　　**for** x_coord: 0 to nx+1
　　　**for** y_coord: 0 to ny+1
　　　　**for** from_side: TOP to LEFT
　　　　　**for** to_side: TOP to LEFT
　　　　　　**_compute_each_side()_**{
　　　　　　　**for** wire_conn: wireconn_ptr[0 to size]
　　　　　　　　**_compute_each_conn()_**{
　　　　　　　　　get_switchpoint_wires(&potential_src_wires);
　　　　　　　　　　**for** from_wire in potential_src_wires array
　　　　　　　　　　　loading for the given ""from_wire""
　　　　　　　　}
　　　　　　}
1. Two new functions **""compute_each_side()""** and **""compute_each_conn()""**.
   As shown in the seudo-code above, in order to modulize the code and make it more readable, the sub-iterations in the function **""alloc_and_load_switchblock_permutations()""** was packaged into two new functions **""compute_each_side()""** and **""compute_each_conn()""**.
   **Notice:** The older functions **""compute_wire_connections()""** and **""compute_wireconn_connections()""** are preserved and since they will only be called in functions that have been framed in the _#ifdef FAST_SB_COMPUTATION_ block, both of them are put into that block too. 
2. Remove redundant legal-checkings:
    The code lines 820-897 in the older file was removed since in the new code, such checking will be conducted within the already-legal ""from_wire"" returned from the function ""get_switchpoint_wires"", which have done the same checking within the function. 
#### Related Issue

<!--- Pull requests should be related to open issues -->

<!--- If suggesting a new feature or change, please discuss it in an issue first -->

<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->

<!--- Please link to the issue here: -->
#### Motivation and Context

<!--- Why is this change required? What problem does it solve? -->

I am a senior student in Fudan University, China, major in Microelectronics. Recently I am using VPR doing some exploration and experimentations about FPGA architectures. And I'm also doing some modifications to the VPR code to meet my thoughts. 

I am really happy to contribute to the VTR projects, if I could. 
#### How Has This Been Tested?

<!--- Please describe in detail how you tested your changes. -->

<!--- Include details of your testing environment, and the tests you ran to -->

<!--- see how your change affects other areas of the code, etc. -->

System info: ubuntu 16.04 LTS 64-bit
Processor: Intel® Core™ i7-6700 CPU @ 3.40GHz × 2 
CMake : 3.6.1
gcc/g++: 4.8.5

I tried different architecture files in ""vtr_flow/arch/"" with both custom and traditional switchblocks and some of the .blif benchmarks in ""vtr_flow/benchmarks/"". They were all passed and gave the same results with the older version. 

Do I need to conduct a thorough tests and give a report? 

*: Honestly such modification I made didn't bring obvious speed-up but the important thing is the code now is clearer, shorter and easy to read, without bringing new bugs of course.
#### Types of changes

<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Optimize the code structure.
#### Checklist

<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->

<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",511b7e2167f549f17b534fba7c53afd983881532,
158,4,False,684,528,1,0,"<!--- Provide a general summary of your changes in the Title above -->
#### Description

<!--- Describe your changes in detail -->

I made some changes to the file ""vpr/SRC/route/build_switchblocks.c"" to facilitate the process allocating and loading the switch blocks connections and to make it easy to read and understand. The problem I found in the older code was that, when iterating through the whole FPGA board(see line 323-333 in the older file), for each (x_coord, y_coord) location, the ""from_wire"" variable would better not be the first iterator, because every time we compute for one ""from_wire"" value, we have to re-compute some values that every ""from_wire"" shares, which is not efficient and elegant. 

For example, every time we compute for one ""from_wire"" value, we need to call the function ""get_switchpoint_wires()"" to fill the variable ""potential_src_wires"", and we need to do a lot of checks to skip some illegal ""from_wire"" values. Here, we can see two things going inefficient:
1. For a given type of wire connection(like from the middle point of ""l2s"" to the ends of ""l2s"", etc.), we get the same ""potential_src_wires"" for every ""get_switchpoint_wires()"" function call. 
2. Within the ""get_switchpoint_wires()"", we have already done the checks and return the legal ""from_wire"" array. 

So we can make three changes accordingly:
1. Reorder the for-loop as follows:

　**for** i_sb: 0 to switchblocks.size()
　　**for** x_coord: 0 to nx+1
　　　**for** y_coord: 0 to ny+1
　　　　**for** from_side: TOP to LEFT
　　　　　**for** to_side: TOP to LEFT
　　　　　　**_compute_each_side()_**{
　　　　　　　**for** wire_conn: wireconn_ptr[0 to size]
　　　　　　　　**_compute_each_conn()_**{
　　　　　　　　　get_switchpoint_wires(&potential_src_wires);
　　　　　　　　　　**for** from_wire in potential_src_wires array
　　　　　　　　　　　loading for the given ""from_wire""
　　　　　　　　}
　　　　　　}
1. Two new functions **""compute_each_side()""** and **""compute_each_conn()""**.
   As shown in the seudo-code above, in order to modulize the code and make it more readable, the sub-iterations in the function **""alloc_and_load_switchblock_permutations()""** was packaged into two new functions **""compute_each_side()""** and **""compute_each_conn()""**.
   **Notice:** The older functions **""compute_wire_connections()""** and **""compute_wireconn_connections()""** are preserved and since they will only be called in functions that have been framed in the _#ifdef FAST_SB_COMPUTATION_ block, both of them are put into that block too. 
2. Remove redundant legal-checkings:
    The code lines 820-897 in the older file was removed since in the new code, such checking will be conducted within the already-legal ""from_wire"" returned from the function ""get_switchpoint_wires"", which have done the same checking within the function. 
#### Related Issue

<!--- Pull requests should be related to open issues -->

<!--- If suggesting a new feature or change, please discuss it in an issue first -->

<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->

<!--- Please link to the issue here: -->
#### Motivation and Context

<!--- Why is this change required? What problem does it solve? -->

I am a senior student in Fudan University, China, major in Microelectronics. Recently I am using VPR doing some exploration and experimentations about FPGA architectures. And I'm also doing some modifications to the VPR code to meet my thoughts. 

I am really happy to contribute to the VTR projects, if I could. 
#### How Has This Been Tested?

<!--- Please describe in detail how you tested your changes. -->

<!--- Include details of your testing environment, and the tests you ran to -->

<!--- see how your change affects other areas of the code, etc. -->

System info: ubuntu 16.04 LTS 64-bit
Processor: Intel® Core™ i7-6700 CPU @ 3.40GHz × 2 
CMake : 3.6.1
gcc/g++: 4.8.5

I tried different architecture files in ""vtr_flow/arch/"" with both custom and traditional switchblocks and some of the .blif benchmarks in ""vtr_flow/benchmarks/"". They were all passed and gave the same results with the older version. 

Do I need to conduct a thorough tests and give a report? 

*: Honestly such modification I made didn't bring obvious speed-up but the important thing is the code now is clearer, shorter and easy to read, without bringing new bugs of course.
#### Types of changes

<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [ ] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
- [x] Optimize the code structure.
#### Checklist

<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->

<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [x] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [x] All new and existing tests passed
",511b7e2167f549f17b534fba7c53afd983881532,
156,1,True,2,2,1,1,"<!--- Provide a general summary of your changes in the Title above -->
#### Description

<!--- Describe your changes in detail -->
#### Related Issue

<!--- Pull requests should be related to open issues -->

<!--- If suggesting a new feature or change, please discuss it in an issue first -->

<!--- If fixing a bug, there should be an issue describing it with steps to reproduce -->

<!--- Please link to the issue here: -->
#### Motivation and Context

<!--- Why is this change required? What problem does it solve? -->
#### How Has This Been Tested?

<!--- Please describe in detail how you tested your changes. -->

<!--- Include details of your testing environment, and the tests you ran to -->

<!--- see how your change affects other areas of the code, etc. -->
#### Types of changes

<!--- What types of changes does your code introduce? Put an `x` in all the boxes that apply: -->
- [x] Bug fix (change which fixes an issue)
- [ ] New feature (change which adds functionality)
- [ ] Breaking change (fix or feature that would cause existing functionality to change)
#### Checklist:

<!--- Go over all the following points, and put an `x` in all the boxes that apply. -->

<!--- If you're unsure about any of these, don't hesitate to ask. We're here to help! -->
- [ ] My change requires a change to the documentation
- [ ] I have updated the documentation accordingly
- [ ] I have added tests to cover my changes
- [ ] All new and existing tests passed
",fbe87a10a31178eb6e8dc329d95fac31ab64af5b,2016-08-11 13:24:06
153,2,False,7,5,2,2,"When case item found without any statement function 'sort_signal_list_alphabetically' called from file 'netlist_create_from_ast.c' without check that list != NULL:
`sort_signal_list_alphabetically(case_statement[i]);`
Allow sorting only when there are statements inside processed branch.

Same check made in 'combine_lists_without_freeing_originals' and 'create_mux_statements'.
",7ba0506d0f5542c523d1314c4c90e7c9ff8c3a4b,
145,1,False,1,0,1,1,"When inout net created in Verilog, and passed to VPR from BLIF with both .input and .output VPR generates segmentation fault when reporting:

```
                if ((num_driver[nindex] < 0) || (num_driver[nindex] > 1)) {
                    vpr_throw(VPR_ERROR_BLIF_F, __FILE__, __LINE__,
                            ""Number of drivers for net #%d (%s) has %d drivers.\n"",
                            nindex, ptr, num_driver[index]);
                }
```

This error it not repeatable. When run with Valgrind message produced without segfault.
GDB log reports something like this

```
952                             nindex, ptr, num_driver[index]);
#0  0x00000000004cd160 in add_vpack_net (ptr=0x5d24790 ""spi_miso"", type=1, bnum=45936, bport=0, bpin=2, is_global=false, doall=true)
    at SRC/base/read_blif.c:952
#1  0x00000000004cae7e in add_lut (doall=true, logic_model=0x1e02bc0) at SRC/base/read_blif.c:434
#2  0x00000000004ca5f5 in get_blif_tok (buffer=0x7fffb0aea340 "".names"", doall=true, done=0x7fffb0aea315, add_truth_table=0x7fffb0aea316, 
```

I suggest to add assertion to check whether 'index' point inside num_driver array, which is 'num_logical_nets' number of elements.
",2bb6342e922eedc98b30e62eb7b7c6d14e851c86,
143,1,False,12,0,1,1,"In some cases when incorrect blif netlist given VPR fails with double_free error.
Valgrind reports invalid write in this case.

Consider following example. Assume some block 'dsp' has 4-bit input port 'amode' as specified by XML.
Assume blif connects extra pin 'amode[4]=some_signal' for 'dsp' subckt.
VPR try to execute following code, where 'my_itoa(pin_number)' = 4, but port->size = 4(3:0). Thus out-of-bound memory access happen.
                        logical_block[num_logical_blocks - 1].input_nets[port->index][my_atoi(
                                pin_number)] = add_vpack_net(
                                circuit_signal_name[i], RECEIVER,
                                num_logical_blocks - 1, port->index,
                                my_atoi(pin_number), false, doall);

Added report for such case to provide user information about incorrect input data.
",f2731b79f64e1fcd023bf8a858037e8a62f0a991,
140,1,False,1,15,1,1,"Remove unnecessary array 'next_result_index', iconn iterator can be used instead.
",51da6a85774df5f2b472692eeb783dd75faca906,
139,1,True,1,1,1,1,"3-rd index of array added to print value, instead of pointer
",55883f686c4b775fff97e49a4453681dd0f76ce0,2016-07-20 16:42:23
138,1,False,5,2,1,1,"Do not expand FPGA size if width and height specified explicitly.
If width and height specified explicitly using <layout> tag in XML file I believe it should be treated as fixed FPGA size. But expansion happen regardless of layout type (auto or width/height).
On the other hand explicit specification can be used to specify initial size for packer. Especially when there is a big design which require to check all 1x1, 2x2, ... 100x100 iterations.
For later case I offer to use optional 'init_width' tag with 'auto' which will specify initial value for packer (height will be recalculated using specified ratio).
",7ca939f48ecffcb1d78981f6134115ad11e7bb21,
137,1,False,9,0,1,1,"Added 'init_width' tag which specifies initial width in case of auto layout. This help to avoid binary search from the ground when design size is big.
Even with 'auto' initial values for W/H loaded here, so inside cluster.c they can be assigned like this
    nx = arch->clb_grid.W;
    ny = arch->clb_grid.H;
",4a49bee5a60e88ce20dc163076642507b99c5c6c,
136,1,True,1,0,1,0,"Implementation of solution I propose in ""problem when using --fix_pins option #123""
",ebec83b36ea90d03b312f2d280f240842500ce33,2016-07-19 15:09:08
135,1,True,1,1,1,0,"Implementation of issue I describe in "" Extra multiplication '\* Type->height' #133 ""
",4f12a246cb3a55ed00d516745d1dd1a483b205a1,2016-07-20 16:32:32
132,1,True,4,1,1,1,"Added check that file specified with --fix_pins exist and open correctly before read from it.
",15842e2395214bd67e2cae4e1bfad8a70427173c,2016-06-15 14:26:47
126,1,True,76,0,2,1,"This resolves #124. I have added license information according to @kmurray's answer mentioning [this page](http://www.eecg.utoronto.ca/vtr/terms.html).

I have only ommitted the registration statement (""Also, we appreciate it if users of the package register before downloading the tool but this is by no means a requirement."")
",03b3089be50ebb6a52670fdf0d7ff325a29c3a2b,2016-04-11 16:25:11
118,1,False,43,11,12,0,"By default, we use targeted rerouting to force the reroute of
connections that are critical and suboptimal (based on minimum
achievable connection delay). Disable by running VPR with
-disable_forced_reroute option.
",aac760c9e997c8fbe667c27926c4089eae434c3f,
112,1,True,13,1,1,0,"Fixing a bug that caused mcml to fail on the weekly regression test. There were some else statement missing when a previous commit added some ifs
",6efd301a051723b09199673a7483e5f6c0057161,2016-01-19 16:14:41
104,47,True,2189,538,54,2,"Please leave code review comments below (keep this open until all of the PROFILE items get eventually removed when the changes have been fully tested).
",69aa5481e931c07e91874aa803a1808b69ab6c18,2015-09-28 03:53:50
